pub trait IInertiaProcessorImpl: Sized {
    fn InitialOriginX();
    fn SetInitialOriginX();
    fn InitialOriginY();
    fn SetInitialOriginY();
    fn InitialVelocityX();
    fn SetInitialVelocityX();
    fn InitialVelocityY();
    fn SetInitialVelocityY();
    fn InitialAngularVelocity();
    fn SetInitialAngularVelocity();
    fn InitialExpansionVelocity();
    fn SetInitialExpansionVelocity();
    fn InitialRadius();
    fn SetInitialRadius();
    fn BoundaryLeft();
    fn SetBoundaryLeft();
    fn BoundaryTop();
    fn SetBoundaryTop();
    fn BoundaryRight();
    fn SetBoundaryRight();
    fn BoundaryBottom();
    fn SetBoundaryBottom();
    fn ElasticMarginLeft();
    fn SetElasticMarginLeft();
    fn ElasticMarginTop();
    fn SetElasticMarginTop();
    fn ElasticMarginRight();
    fn SetElasticMarginRight();
    fn ElasticMarginBottom();
    fn SetElasticMarginBottom();
    fn DesiredDisplacement();
    fn SetDesiredDisplacement();
    fn DesiredRotation();
    fn SetDesiredRotation();
    fn DesiredExpansion();
    fn SetDesiredExpansion();
    fn DesiredDeceleration();
    fn SetDesiredDeceleration();
    fn DesiredAngularDeceleration();
    fn SetDesiredAngularDeceleration();
    fn DesiredExpansionDeceleration();
    fn SetDesiredExpansionDeceleration();
    fn InitialTimestamp();
    fn SetInitialTimestamp();
    fn Reset();
    fn Process();
    fn ProcessTime();
    fn Complete();
    fn CompleteTime();
}
pub trait IManipulationProcessorImpl: Sized {
    fn SupportedManipulations();
    fn SetSupportedManipulations();
    fn PivotPointX();
    fn SetPivotPointX();
    fn PivotPointY();
    fn SetPivotPointY();
    fn PivotRadius();
    fn SetPivotRadius();
    fn CompleteManipulation();
    fn ProcessDown();
    fn ProcessMove();
    fn ProcessUp();
    fn ProcessDownWithTime();
    fn ProcessMoveWithTime();
    fn ProcessUpWithTime();
    fn GetVelocityX();
    fn GetVelocityY();
    fn GetExpansionVelocity();
    fn GetAngularVelocity();
    fn MinimumScaleRotateRadius();
    fn SetMinimumScaleRotateRadius();
}
pub trait _IManipulationEventsImpl: Sized {
    fn ManipulationStarted();
    fn ManipulationDelta();
    fn ManipulationCompleted();
}
