# [ cfg ( all ( feature ="Win32_Foundation" , feature ="Win32_Graphics_Gdi" , feature ="Win32_UI_WindowsAndMessaging" ) ) ] pub trait IImageListImpl < > : Sized where { fn Add ( ) ; fn ReplaceIcon ( ) ; fn SetOverlayImage ( ) ; fn Replace ( ) ; fn AddMasked ( ) ; fn Draw ( ) ; fn Remove ( ) ; fn GetIcon ( ) ; fn GetImageInfo ( ) ; fn Copy ( ) ; fn Merge ( ) ; fn Clone ( ) ; fn GetImageRect ( ) ; fn GetIconSize ( ) ; fn SetIconSize ( ) ; fn GetImageCount ( ) ; fn SetImageCount ( ) ; fn SetBkColor ( ) ; fn GetBkColor ( ) ; fn BeginDrag ( ) ; fn EndDrag ( ) ; fn DragEnter ( ) ; fn DragLeave ( ) ; fn DragMove ( ) ; fn SetDragCursorImage ( ) ; fn DragShowNolock ( ) ; fn GetDragImage ( ) ; fn GetItemFlags ( ) ; fn GetOverlayImage ( ) ; } # [ cfg ( all ( feature ="Win32_Foundation" , feature ="Win32_Graphics_Gdi" , feature ="Win32_UI_WindowsAndMessaging" ) ) ] impl < > IImageListVtbl < > { pub const fn new < Identity : :: windows :: core :: IUnknownImpl , Impl : IImageListImpl < > , const BASE_OFFSET : isize , const IMPL_OFFSET : isize > ( ) -> IImageListVtbl < > { unsafe extern "system" fn Add < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , hbmimage : super::super::Graphics::Gdi:: HBITMAP , hbmmask : super::super::Graphics::Gdi:: HBITMAP , pi : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn ReplaceIcon < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , hicon : super::WindowsAndMessaging:: HICON , pi : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetOverlayImage < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , iimage : i32 , ioverlay : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Replace < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , hbmimage : super::super::Graphics::Gdi:: HBITMAP , hbmmask : super::super::Graphics::Gdi:: HBITMAP , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn AddMasked < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , hbmimage : super::super::Graphics::Gdi:: HBITMAP , crmask : u32 , pi : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Draw < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , pimldp : * const IMAGELISTDRAWPARAMS , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Remove < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetIcon < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , flags : u32 , picon : * mut super::WindowsAndMessaging:: HICON , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetImageInfo < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , pimageinfo : * mut IMAGEINFO , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Copy < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , idst : i32 , punksrc : * mut :: core :: ffi :: c_void , isrc : i32 , uflags : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Merge < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i1 : i32 , punk2 : * mut :: core :: ffi :: c_void , i2 : i32 , dx : i32 , dy : i32 , riid : * const :: windows :: core :: GUID , ppv : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Clone < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , riid : * const :: windows :: core :: GUID , ppv : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetImageRect < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , prc : * mut super::super::Foundation:: RECT , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetIconSize < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , cx : * mut i32 , cy : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetIconSize < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , cx : i32 , cy : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetImageCount < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , pi : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetImageCount < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , unewcount : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetBkColor < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , clrbk : u32 , pclr : * mut u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetBkColor < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , pclr : * mut u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn BeginDrag < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , itrack : i32 , dxhotspot : i32 , dyhotspot : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn EndDrag < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn DragEnter < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , hwndlock : super::super::Foundation:: HWND , x : i32 , y : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn DragLeave < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , hwndlock : super::super::Foundation:: HWND , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn DragMove < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , x : i32 , y : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetDragCursorImage < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , punk : * mut :: core :: ffi :: c_void , idrag : i32 , dxhotspot : i32 , dyhotspot : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn DragShowNolock < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , fshow : super::super::Foundation:: BOOL , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetDragImage < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ppt : * mut super::super::Foundation:: POINT , ppthotspot : * mut super::super::Foundation:: POINT , riid : * const :: windows :: core :: GUID , ppv : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetItemFlags < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , dwflags : * mut IMAGE_LIST_ITEM_FLAGS , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetOverlayImage < Impl : IImageListImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ioverlay : i32 , piindex : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } Self { base : :: windows :: core :: IUnknownVtbl :: new :: < Identity , BASE_OFFSET > ( ) , Add : Add :: < Impl , IMPL_OFFSET > , ReplaceIcon : ReplaceIcon :: < Impl , IMPL_OFFSET > , SetOverlayImage : SetOverlayImage :: < Impl , IMPL_OFFSET > , Replace : Replace :: < Impl , IMPL_OFFSET > , AddMasked : AddMasked :: < Impl , IMPL_OFFSET > , Draw : Draw :: < Impl , IMPL_OFFSET > , Remove : Remove :: < Impl , IMPL_OFFSET > , GetIcon : GetIcon :: < Impl , IMPL_OFFSET > , GetImageInfo : GetImageInfo :: < Impl , IMPL_OFFSET > , Copy : Copy :: < Impl , IMPL_OFFSET > , Merge : Merge :: < Impl , IMPL_OFFSET > , Clone : Clone :: < Impl , IMPL_OFFSET > , GetImageRect : GetImageRect :: < Impl , IMPL_OFFSET > , GetIconSize : GetIconSize :: < Impl , IMPL_OFFSET > , SetIconSize : SetIconSize :: < Impl , IMPL_OFFSET > , GetImageCount : GetImageCount :: < Impl , IMPL_OFFSET > , SetImageCount : SetImageCount :: < Impl , IMPL_OFFSET > , SetBkColor : SetBkColor :: < Impl , IMPL_OFFSET > , GetBkColor : GetBkColor :: < Impl , IMPL_OFFSET > , BeginDrag : BeginDrag :: < Impl , IMPL_OFFSET > , EndDrag : EndDrag :: < Impl , IMPL_OFFSET > , DragEnter : DragEnter :: < Impl , IMPL_OFFSET > , DragLeave : DragLeave :: < Impl , IMPL_OFFSET > , DragMove : DragMove :: < Impl , IMPL_OFFSET > , SetDragCursorImage : SetDragCursorImage :: < Impl , IMPL_OFFSET > , DragShowNolock : DragShowNolock :: < Impl , IMPL_OFFSET > , GetDragImage : GetDragImage :: < Impl , IMPL_OFFSET > , GetItemFlags : GetItemFlags :: < Impl , IMPL_OFFSET > , GetOverlayImage : GetOverlayImage :: < Impl , IMPL_OFFSET > , } } pub fn matches ( iid : & windows :: core :: GUID ) -> bool { iid == & < IImageList < > as :: windows :: core :: Interface > :: IID } } # [ cfg ( all ( feature ="Win32_Foundation" , feature ="Win32_Graphics_Gdi" , feature ="Win32_UI_WindowsAndMessaging" ) ) ] pub trait IImageList2Impl < > : Sized + IImageListImpl where { fn Resize ( ) ; fn GetOriginalSize ( ) ; fn SetOriginalSize ( ) ; fn SetCallback ( ) ; fn GetCallback ( ) ; fn ForceImagePresent ( ) ; fn DiscardImages ( ) ; fn PreloadImages ( ) ; fn GetStatistics ( ) ; fn Initialize ( ) ; fn Replace2 ( ) ; fn ReplaceFromImageList ( ) ; } # [ cfg ( all ( feature ="Win32_Foundation" , feature ="Win32_Graphics_Gdi" , feature ="Win32_UI_WindowsAndMessaging" ) ) ] impl < > IImageList2Vtbl < > { pub const fn new < Identity : :: windows :: core :: IUnknownImpl , Impl : IImageList2Impl < > , const BASE_OFFSET : isize , const IMPL_OFFSET : isize > ( ) -> IImageList2Vtbl < > { unsafe extern "system" fn Resize < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , cxnewiconsize : i32 , cynewiconsize : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetOriginalSize < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , iimage : i32 , dwflags : u32 , pcx : * mut i32 , pcy : * mut i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetOriginalSize < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , iimage : i32 , cx : i32 , cy : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn SetCallback < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , punk : * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetCallback < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , riid : * const :: windows :: core :: GUID , ppv : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn ForceImagePresent < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , iimage : i32 , dwflags : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn DiscardImages < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ifirstimage : i32 , ilastimage : i32 , dwflags : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn PreloadImages < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , pimldp : * const IMAGELISTDRAWPARAMS , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn GetStatistics < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , pils : * mut IMAGELISTSTATS , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Initialize < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , cx : i32 , cy : i32 , flags : IMAGELIST_CREATION_FLAGS , cinitial : i32 , cgrow : i32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn Replace2 < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , hbmimage : super::super::Graphics::Gdi:: HBITMAP , hbmmask : super::super::Graphics::Gdi:: HBITMAP , punk : * mut :: core :: ffi :: c_void , dwflags : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn ReplaceFromImageList < Impl : IImageList2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , i : i32 , pil : :: windows :: core :: RawPtr , isrc : i32 , punk : * mut :: core :: ffi :: c_void , dwflags : u32 , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } Self { vtbl :: new :: < Identity , Impl , BASE_OFFSET , IMPL_OFFSET > ( ) , Resize : Resize :: < Impl , IMPL_OFFSET > , GetOriginalSize : GetOriginalSize :: < Impl , IMPL_OFFSET > , SetOriginalSize : SetOriginalSize :: < Impl , IMPL_OFFSET > , SetCallback : SetCallback :: < Impl , IMPL_OFFSET > , GetCallback : GetCallback :: < Impl , IMPL_OFFSET > , ForceImagePresent : ForceImagePresent :: < Impl , IMPL_OFFSET > , DiscardImages : DiscardImages :: < Impl , IMPL_OFFSET > , PreloadImages : PreloadImages :: < Impl , IMPL_OFFSET > , GetStatistics : GetStatistics :: < Impl , IMPL_OFFSET > , Initialize : Initialize :: < Impl , IMPL_OFFSET > , Replace2 : Replace2 :: < Impl , IMPL_OFFSET > , ReplaceFromImageList : ReplaceFromImageList :: < Impl , IMPL_OFFSET > , } } pub fn matches ( iid : & windows :: core :: GUID ) -> bool { iid == & < IImageList2 < > as :: windows :: core :: Interface > :: IID } } 