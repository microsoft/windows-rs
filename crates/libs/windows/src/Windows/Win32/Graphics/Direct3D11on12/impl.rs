# [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] pub trait ID3D11On12DeviceImpl < > : Sized where { fn CreateWrappedResource ( ) ; fn ReleaseWrappedResources ( ) ; fn AcquireWrappedResources ( ) ; } # [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] impl < > ID3D11On12DeviceVtbl < > { pub const fn new < Identity : :: windows :: core :: IUnknownImpl , Impl : ID3D11On12DeviceImpl < > , const BASE_OFFSET : isize , const IMPL_OFFSET : isize > ( ) -> ID3D11On12DeviceVtbl < > { unsafe extern "system" fn CreateWrappedResource < Impl : ID3D11On12DeviceImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , presource12 : * mut :: core :: ffi :: c_void , pflags11 : * const D3D11_RESOURCE_FLAGS , instate : super::Direct3D12:: D3D12_RESOURCE_STATES , outstate : super::Direct3D12:: D3D12_RESOURCE_STATES , riid : * const :: windows :: core :: GUID , ppresource11 : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn ReleaseWrappedResources < Impl : ID3D11On12DeviceImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ppresources : * const :: windows :: core :: RawPtr , numresources : u32 , ) { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn AcquireWrappedResources < Impl : ID3D11On12DeviceImpl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , ppresources : * const :: windows :: core :: RawPtr , numresources : u32 , ) { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } Self { base : :: windows :: core :: IUnknownVtbl :: new :: < Identity , BASE_OFFSET > ( ) , CreateWrappedResource : CreateWrappedResource :: < Impl , IMPL_OFFSET > , ReleaseWrappedResources : ReleaseWrappedResources :: < Impl , IMPL_OFFSET > , AcquireWrappedResources : AcquireWrappedResources :: < Impl , IMPL_OFFSET > , } } pub fn matches ( iid : & windows :: core :: GUID ) -> bool { iid == & < ID3D11On12Device < > as :: windows :: core :: Interface > :: IID } } # [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] pub trait ID3D11On12Device1Impl < > : Sized + ID3D11On12DeviceImpl where { fn GetD3D12Device ( ) ; } # [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] impl < > ID3D11On12Device1Vtbl < > { pub const fn new < Identity : :: windows :: core :: IUnknownImpl , Impl : ID3D11On12Device1Impl < > , const BASE_OFFSET : isize , const IMPL_OFFSET : isize > ( ) -> ID3D11On12Device1Vtbl < > { unsafe extern "system" fn GetD3D12Device < Impl : ID3D11On12Device1Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , riid : * const :: windows :: core :: GUID , ppvdevice : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } Self { vtbl :: new :: < Identity , Impl , BASE_OFFSET , IMPL_OFFSET > ( ) , GetD3D12Device : GetD3D12Device :: < Impl , IMPL_OFFSET > , } } pub fn matches ( iid : & windows :: core :: GUID ) -> bool { iid == & < ID3D11On12Device1 < > as :: windows :: core :: Interface > :: IID } } # [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] pub trait ID3D11On12Device2Impl < > : Sized + ID3D11On12Device1Impl + ID3D11On12DeviceImpl where { fn UnwrapUnderlyingResource ( ) ; fn ReturnUnderlyingResource ( ) ; } # [ cfg ( all ( feature ="Win32_Graphics_Direct3D11" , feature ="Win32_Graphics_Direct3D12" ) ) ] impl < > ID3D11On12Device2Vtbl < > { pub const fn new < Identity : :: windows :: core :: IUnknownImpl , Impl : ID3D11On12Device2Impl < > , const BASE_OFFSET : isize , const IMPL_OFFSET : isize > ( ) -> ID3D11On12Device2Vtbl < > { unsafe extern "system" fn UnwrapUnderlyingResource < Impl : ID3D11On12Device2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , presource11 : :: windows :: core :: RawPtr , pcommandqueue : :: windows :: core :: RawPtr , riid : * const :: windows :: core :: GUID , ppvresource12 : * mut * mut :: core :: ffi :: c_void , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } unsafe extern "system" fn ReturnUnderlyingResource < Impl : ID3D11On12Device2Impl < > , const OFFSET : isize > ( this : * mut :: core :: ffi :: c_void , presource11 : :: windows :: core :: RawPtr , numsync : u32 , psignalvalues : * const u64 , ppfences : * const :: windows :: core :: RawPtr , ) -> :: windows :: core :: HRESULT { let this = ( this as * mut :: windows :: core :: RawPtr ) . offset ( OFFSET ) as * mut Impl ; panic ! ( ) } Self { vtbl :: new :: < Identity , Impl , BASE_OFFSET , IMPL_OFFSET > ( ) , UnwrapUnderlyingResource : UnwrapUnderlyingResource :: < Impl , IMPL_OFFSET > , ReturnUnderlyingResource : ReturnUnderlyingResource :: < Impl , IMPL_OFFSET > , } } pub fn matches ( iid : & windows :: core :: GUID ) -> bool { iid == & < ID3D11On12Device2 < > as :: windows :: core :: Interface > :: IID } } 