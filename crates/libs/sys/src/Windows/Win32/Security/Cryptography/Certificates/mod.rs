::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupClose(hbc : *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupEnd(hbc : *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupFree(pv : *mut ::core::ffi::c_void) -> ());
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupGetBackupLogsW(hbc : *const ::core::ffi::c_void, ppwszzbackuplogfiles : *mut ::windows_sys::core::PWSTR, pcbsize : *mut u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupGetDatabaseNamesW(hbc : *const ::core::ffi::c_void, ppwszzattachmentinformation : *mut ::windows_sys::core::PWSTR, pcbsize : *mut u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupGetDynamicFileListW(hbc : *const ::core::ffi::c_void, ppwszzfilelist : *mut ::windows_sys::core::PWSTR, pcbsize : *mut u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupOpenFileW(hbc : *mut ::core::ffi::c_void, pwszattachmentname : ::windows_sys::core::PCWSTR, cbreadhintsize : u32, plifilesize : *mut i64) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupPrepareW(pwszservername : ::windows_sys::core::PCWSTR, grbitjet : u32, dwbackupflags : CSBACKUP_TYPE, phbc : *mut *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupRead(hbc : *mut ::core::ffi::c_void, pvbuffer : *mut ::core::ffi::c_void, cbbuffer : u32, pcbread : *mut u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvBackupTruncateLogs(hbc : *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
#[cfg(feature = "Win32_Foundation")]
::windows_targets::link!("certadm.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`"] fn CertSrvIsServerOnlineW(pwszservername : ::windows_sys::core::PCWSTR, pfserveronline : *mut super::super::super::Foundation:: BOOL) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestoreEnd(hbc : *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestoreGetDatabaseLocationsW(hbc : *const ::core::ffi::c_void, ppwszzdatabaselocationlist : *mut ::windows_sys::core::PWSTR, pcbsize : *mut u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestorePrepareW(pwszservername : ::windows_sys::core::PCWSTR, dwrestoreflags : u32, phbc : *mut *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestoreRegisterComplete(hbc : *mut ::core::ffi::c_void, hrrestorestate : ::windows_sys::core::HRESULT) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestoreRegisterThroughFile(hbc : *mut ::core::ffi::c_void, pwszcheckpointfilepath : ::windows_sys::core::PCWSTR, pwszlogpath : ::windows_sys::core::PCWSTR, rgrstmap : *mut CSEDB_RSTMAPW, crstmap : i32, pwszbackuplogpath : ::windows_sys::core::PCWSTR, genlow : u32, genhigh : u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvRestoreRegisterW(hbc : *mut ::core::ffi::c_void, pwszcheckpointfilepath : ::windows_sys::core::PCWSTR, pwszlogpath : ::windows_sys::core::PCWSTR, rgrstmap : *mut CSEDB_RSTMAPW, crstmap : i32, pwszbackuplogpath : ::windows_sys::core::PCWSTR, genlow : u32, genhigh : u32) -> ::windows_sys::core::HRESULT);
::windows_targets::link!("certadm.dll" "system" fn CertSrvServerControlW(pwszservername : ::windows_sys::core::PCWSTR, dwcontrolflags : u32, pcbout : *mut u32, ppbout : *mut *mut u8) -> ::windows_sys::core::HRESULT);
#[cfg(feature = "Win32_Foundation")]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`"] fn PstAcquirePrivateKey(pcert : *const super:: CERT_CONTEXT) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Security_Authentication_Identity"))]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`, `\"Win32_Security_Authentication_Identity\"`"] fn PstGetCertificateChain(pcert : *const super:: CERT_CONTEXT, ptrustedissuers : *const super::super::Authentication::Identity:: SecPkgContext_IssuerListInfoEx, ppcertchaincontext : *mut *mut super:: CERT_CHAIN_CONTEXT) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(feature = "Win32_Foundation")]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`"] fn PstGetCertificates(ptargetname : *const super::super::super::Foundation:: UNICODE_STRING, ccriteria : u32, rgpcriteria : *const super:: CERT_SELECT_CRITERIA, bisclient : super::super::super::Foundation:: BOOL, pdwcertchaincontextcount : *mut u32, ppcertchaincontexts : *mut *mut *mut super:: CERT_CHAIN_CONTEXT) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Security_Authentication_Identity"))]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`, `\"Win32_Security_Authentication_Identity\"`"] fn PstGetTrustAnchors(ptargetname : *const super::super::super::Foundation:: UNICODE_STRING, ccriteria : u32, rgpcriteria : *const super:: CERT_SELECT_CRITERIA, pptrustedissuers : *mut *mut super::super::Authentication::Identity:: SecPkgContext_IssuerListInfoEx) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Security_Authentication_Identity"))]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`, `\"Win32_Security_Authentication_Identity\"`"] fn PstGetTrustAnchorsEx(ptargetname : *const super::super::super::Foundation:: UNICODE_STRING, ccriteria : u32, rgpcriteria : *const super:: CERT_SELECT_CRITERIA, pcertcontext : *const super:: CERT_CONTEXT, pptrustedissuers : *mut *mut super::super::Authentication::Identity:: SecPkgContext_IssuerListInfoEx) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(feature = "Win32_Foundation")]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`"] fn PstGetUserNameForCertificate(pcertcontext : *const super:: CERT_CONTEXT, username : *mut super::super::super::Foundation:: UNICODE_STRING) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Security_Authentication_Identity"))]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`, `\"Win32_Security_Authentication_Identity\"`"] fn PstMapCertificate(pcert : *const super:: CERT_CONTEXT, ptokeninformationtype : *mut super::super::Authentication::Identity:: LSA_TOKEN_INFORMATION_TYPE, pptokeninformation : *mut *mut ::core::ffi::c_void) -> super::super::super::Foundation:: NTSTATUS);
#[cfg(feature = "Win32_Foundation")]
::windows_targets::link!("certpoleng.dll" "system" #[doc = "Required features: `\"Win32_Foundation\"`"] fn PstValidate(ptargetname : *const super::super::super::Foundation:: UNICODE_STRING, bisclient : super::super::super::Foundation:: BOOL, prequestedissuancepolicy : *const super:: CERT_USAGE_MATCH, phadditionalcertstore : *const super:: HCERTSTORE, pcert : *const super:: CERT_CONTEXT, pprovguid : *mut ::windows_sys::core::GUID) -> super::super::super::Foundation:: NTSTATUS);
pub type IAlternativeName = *mut ::core::ffi::c_void;
pub type IAlternativeNames = *mut ::core::ffi::c_void;
pub type IBinaryConverter = *mut ::core::ffi::c_void;
pub type IBinaryConverter2 = *mut ::core::ffi::c_void;
pub type ICEnroll = *mut ::core::ffi::c_void;
pub type ICEnroll2 = *mut ::core::ffi::c_void;
pub type ICEnroll3 = *mut ::core::ffi::c_void;
pub type ICEnroll4 = *mut ::core::ffi::c_void;
pub type ICertAdmin = *mut ::core::ffi::c_void;
pub type ICertAdmin2 = *mut ::core::ffi::c_void;
pub type ICertConfig = *mut ::core::ffi::c_void;
pub type ICertConfig2 = *mut ::core::ffi::c_void;
pub type ICertEncodeAltName = *mut ::core::ffi::c_void;
pub type ICertEncodeAltName2 = *mut ::core::ffi::c_void;
pub type ICertEncodeBitString = *mut ::core::ffi::c_void;
pub type ICertEncodeBitString2 = *mut ::core::ffi::c_void;
pub type ICertEncodeCRLDistInfo = *mut ::core::ffi::c_void;
pub type ICertEncodeCRLDistInfo2 = *mut ::core::ffi::c_void;
pub type ICertEncodeDateArray = *mut ::core::ffi::c_void;
pub type ICertEncodeDateArray2 = *mut ::core::ffi::c_void;
pub type ICertEncodeLongArray = *mut ::core::ffi::c_void;
pub type ICertEncodeLongArray2 = *mut ::core::ffi::c_void;
pub type ICertEncodeStringArray = *mut ::core::ffi::c_void;
pub type ICertEncodeStringArray2 = *mut ::core::ffi::c_void;
pub type ICertExit = *mut ::core::ffi::c_void;
pub type ICertExit2 = *mut ::core::ffi::c_void;
pub type ICertGetConfig = *mut ::core::ffi::c_void;
pub type ICertManageModule = *mut ::core::ffi::c_void;
pub type ICertPolicy = *mut ::core::ffi::c_void;
pub type ICertPolicy2 = *mut ::core::ffi::c_void;
pub type ICertProperties = *mut ::core::ffi::c_void;
pub type ICertProperty = *mut ::core::ffi::c_void;
pub type ICertPropertyArchived = *mut ::core::ffi::c_void;
pub type ICertPropertyArchivedKeyHash = *mut ::core::ffi::c_void;
pub type ICertPropertyAutoEnroll = *mut ::core::ffi::c_void;
pub type ICertPropertyBackedUp = *mut ::core::ffi::c_void;
pub type ICertPropertyDescription = *mut ::core::ffi::c_void;
pub type ICertPropertyEnrollment = *mut ::core::ffi::c_void;
pub type ICertPropertyEnrollmentPolicyServer = *mut ::core::ffi::c_void;
pub type ICertPropertyFriendlyName = *mut ::core::ffi::c_void;
pub type ICertPropertyKeyProvInfo = *mut ::core::ffi::c_void;
pub type ICertPropertyRenewal = *mut ::core::ffi::c_void;
pub type ICertPropertyRequestOriginator = *mut ::core::ffi::c_void;
pub type ICertPropertySHA1Hash = *mut ::core::ffi::c_void;
pub type ICertRequest = *mut ::core::ffi::c_void;
pub type ICertRequest2 = *mut ::core::ffi::c_void;
pub type ICertRequest3 = *mut ::core::ffi::c_void;
pub type ICertRequestD = *mut ::core::ffi::c_void;
pub type ICertRequestD2 = *mut ::core::ffi::c_void;
pub type ICertServerExit = *mut ::core::ffi::c_void;
pub type ICertServerPolicy = *mut ::core::ffi::c_void;
pub type ICertView = *mut ::core::ffi::c_void;
pub type ICertView2 = *mut ::core::ffi::c_void;
pub type ICertificateAttestationChallenge = *mut ::core::ffi::c_void;
pub type ICertificateAttestationChallenge2 = *mut ::core::ffi::c_void;
pub type ICertificatePolicies = *mut ::core::ffi::c_void;
pub type ICertificatePolicy = *mut ::core::ffi::c_void;
pub type ICertificationAuthorities = *mut ::core::ffi::c_void;
pub type ICertificationAuthority = *mut ::core::ffi::c_void;
pub type ICryptAttribute = *mut ::core::ffi::c_void;
pub type ICryptAttributes = *mut ::core::ffi::c_void;
pub type ICspAlgorithm = *mut ::core::ffi::c_void;
pub type ICspAlgorithms = *mut ::core::ffi::c_void;
pub type ICspInformation = *mut ::core::ffi::c_void;
pub type ICspInformations = *mut ::core::ffi::c_void;
pub type ICspStatus = *mut ::core::ffi::c_void;
pub type ICspStatuses = *mut ::core::ffi::c_void;
pub type IEnroll = *mut ::core::ffi::c_void;
pub type IEnroll2 = *mut ::core::ffi::c_void;
pub type IEnroll4 = *mut ::core::ffi::c_void;
pub type IEnumCERTVIEWATTRIBUTE = *mut ::core::ffi::c_void;
pub type IEnumCERTVIEWCOLUMN = *mut ::core::ffi::c_void;
pub type IEnumCERTVIEWEXTENSION = *mut ::core::ffi::c_void;
pub type IEnumCERTVIEWROW = *mut ::core::ffi::c_void;
pub type INDESPolicy = *mut ::core::ffi::c_void;
pub type IOCSPAdmin = *mut ::core::ffi::c_void;
pub type IOCSPCAConfiguration = *mut ::core::ffi::c_void;
pub type IOCSPCAConfigurationCollection = *mut ::core::ffi::c_void;
pub type IOCSPProperty = *mut ::core::ffi::c_void;
pub type IOCSPPropertyCollection = *mut ::core::ffi::c_void;
pub type IObjectId = *mut ::core::ffi::c_void;
pub type IObjectIds = *mut ::core::ffi::c_void;
pub type IPolicyQualifier = *mut ::core::ffi::c_void;
pub type IPolicyQualifiers = *mut ::core::ffi::c_void;
pub type ISignerCertificate = *mut ::core::ffi::c_void;
pub type ISignerCertificates = *mut ::core::ffi::c_void;
pub type ISmimeCapabilities = *mut ::core::ffi::c_void;
pub type ISmimeCapability = *mut ::core::ffi::c_void;
pub type IX500DistinguishedName = *mut ::core::ffi::c_void;
pub type IX509Attribute = *mut ::core::ffi::c_void;
pub type IX509AttributeArchiveKey = *mut ::core::ffi::c_void;
pub type IX509AttributeArchiveKeyHash = *mut ::core::ffi::c_void;
pub type IX509AttributeClientId = *mut ::core::ffi::c_void;
pub type IX509AttributeCspProvider = *mut ::core::ffi::c_void;
pub type IX509AttributeExtensions = *mut ::core::ffi::c_void;
pub type IX509AttributeOSVersion = *mut ::core::ffi::c_void;
pub type IX509AttributeRenewalCertificate = *mut ::core::ffi::c_void;
pub type IX509Attributes = *mut ::core::ffi::c_void;
pub type IX509CertificateRequest = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestCertificate = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestCertificate2 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestCmc = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestCmc2 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs10 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs10V2 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs10V3 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs10V4 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs7 = *mut ::core::ffi::c_void;
pub type IX509CertificateRequestPkcs7V2 = *mut ::core::ffi::c_void;
pub type IX509CertificateRevocationList = *mut ::core::ffi::c_void;
pub type IX509CertificateRevocationListEntries = *mut ::core::ffi::c_void;
pub type IX509CertificateRevocationListEntry = *mut ::core::ffi::c_void;
pub type IX509CertificateTemplate = *mut ::core::ffi::c_void;
pub type IX509CertificateTemplateWritable = *mut ::core::ffi::c_void;
pub type IX509CertificateTemplates = *mut ::core::ffi::c_void;
pub type IX509EndorsementKey = *mut ::core::ffi::c_void;
pub type IX509Enrollment = *mut ::core::ffi::c_void;
pub type IX509Enrollment2 = *mut ::core::ffi::c_void;
pub type IX509EnrollmentHelper = *mut ::core::ffi::c_void;
pub type IX509EnrollmentPolicyServer = *mut ::core::ffi::c_void;
pub type IX509EnrollmentStatus = *mut ::core::ffi::c_void;
pub type IX509EnrollmentWebClassFactory = *mut ::core::ffi::c_void;
pub type IX509Extension = *mut ::core::ffi::c_void;
pub type IX509ExtensionAlternativeNames = *mut ::core::ffi::c_void;
pub type IX509ExtensionAuthorityKeyIdentifier = *mut ::core::ffi::c_void;
pub type IX509ExtensionBasicConstraints = *mut ::core::ffi::c_void;
pub type IX509ExtensionCertificatePolicies = *mut ::core::ffi::c_void;
pub type IX509ExtensionEnhancedKeyUsage = *mut ::core::ffi::c_void;
pub type IX509ExtensionKeyUsage = *mut ::core::ffi::c_void;
pub type IX509ExtensionMSApplicationPolicies = *mut ::core::ffi::c_void;
pub type IX509ExtensionSmimeCapabilities = *mut ::core::ffi::c_void;
pub type IX509ExtensionSubjectKeyIdentifier = *mut ::core::ffi::c_void;
pub type IX509ExtensionTemplate = *mut ::core::ffi::c_void;
pub type IX509ExtensionTemplateName = *mut ::core::ffi::c_void;
pub type IX509Extensions = *mut ::core::ffi::c_void;
pub type IX509MachineEnrollmentFactory = *mut ::core::ffi::c_void;
pub type IX509NameValuePair = *mut ::core::ffi::c_void;
pub type IX509NameValuePairs = *mut ::core::ffi::c_void;
pub type IX509PolicyServerListManager = *mut ::core::ffi::c_void;
pub type IX509PolicyServerUrl = *mut ::core::ffi::c_void;
pub type IX509PrivateKey = *mut ::core::ffi::c_void;
pub type IX509PrivateKey2 = *mut ::core::ffi::c_void;
pub type IX509PublicKey = *mut ::core::ffi::c_void;
pub type IX509SCEPEnrollment = *mut ::core::ffi::c_void;
pub type IX509SCEPEnrollment2 = *mut ::core::ffi::c_void;
pub type IX509SCEPEnrollmentHelper = *mut ::core::ffi::c_void;
pub type IX509SignatureInformation = *mut ::core::ffi::c_void;
pub const AlgorithmFlagsNone: AlgorithmFlags = 0i32;
pub const AlgorithmFlagsWrap: AlgorithmFlags = 1i32;
pub const AllowNoOutstandingRequest: InstallResponseRestrictionFlags = 1i32;
pub const AllowNone: InstallResponseRestrictionFlags = 0i32;
pub const AllowUntrustedCertificate: InstallResponseRestrictionFlags = 2i32;
pub const AllowUntrustedRoot: InstallResponseRestrictionFlags = 4i32;
pub const AllowedKeySignature: Pkcs10AllowedSignatureTypes = 1i32;
pub const AllowedNullSignature: Pkcs10AllowedSignatureTypes = 2i32;
pub const CAIF_DSENTRY: u32 = 1u32;
pub const CAIF_LOCAL: u32 = 8u32;
pub const CAIF_REGISTRY: u32 = 4u32;
pub const CAIF_REGISTRYPARENT: u32 = 16u32;
pub const CAIF_SHAREDFOLDERENTRY: u32 = 2u32;
pub const CAPATHLENGTH_INFINITE: u32 = 4294967295u32;
pub const CAPropCertificate: EnrollmentCAProperty = 7i32;
pub const CAPropCertificateTypes: EnrollmentCAProperty = 6i32;
pub const CAPropCommonName: EnrollmentCAProperty = 1i32;
pub const CAPropDNSName: EnrollmentCAProperty = 5i32;
pub const CAPropDescription: EnrollmentCAProperty = 8i32;
pub const CAPropDistinguishedName: EnrollmentCAProperty = 2i32;
pub const CAPropRenewalOnly: EnrollmentCAProperty = 12i32;
pub const CAPropSanitizedName: EnrollmentCAProperty = 3i32;
pub const CAPropSanitizedShortName: EnrollmentCAProperty = 4i32;
pub const CAPropSecurity: EnrollmentCAProperty = 11i32;
pub const CAPropSiteName: EnrollmentCAProperty = 10i32;
pub const CAPropWebServers: EnrollmentCAProperty = 9i32;
pub const CA_ACCESS_ADMIN: CERTADMIN_GET_ROLES_FLAGS = 1u32;
pub const CA_ACCESS_AUDITOR: CERTADMIN_GET_ROLES_FLAGS = 4u32;
pub const CA_ACCESS_ENROLL: CERTADMIN_GET_ROLES_FLAGS = 512u32;
pub const CA_ACCESS_MASKROLES: u32 = 255u32;
pub const CA_ACCESS_OFFICER: CERTADMIN_GET_ROLES_FLAGS = 2u32;
pub const CA_ACCESS_OPERATOR: CERTADMIN_GET_ROLES_FLAGS = 8u32;
pub const CA_ACCESS_READ: CERTADMIN_GET_ROLES_FLAGS = 256u32;
pub const CA_CRL_BASE: u32 = 1u32;
pub const CA_CRL_DELTA: u32 = 2u32;
pub const CA_CRL_REPUBLISH: u32 = 16u32;
pub const CA_DISP_ERROR: u32 = 1u32;
pub const CA_DISP_INCOMPLETE: u32 = 0u32;
pub const CA_DISP_INVALID: u32 = 4u32;
pub const CA_DISP_REVOKED: u32 = 2u32;
pub const CA_DISP_UNDER_SUBMISSION: u32 = 5u32;
pub const CA_DISP_VALID: u32 = 3u32;
pub const CAlternativeName: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2013_217d_11da_b2a4_000e7bbb2b09);
pub const CAlternativeNames: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2014_217d_11da_b2a4_000e7bbb2b09);
pub const CBinaryConverter: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2002_217d_11da_b2a4_000e7bbb2b09);
pub const CCLOCKSKEWMINUTESDEFAULT: u32 = 10u32;
pub const CC_DEFAULTCONFIG: CERT_GET_CONFIG_FLAGS = 0i32;
pub const CC_FIRSTCONFIG: CERT_GET_CONFIG_FLAGS = 2i32;
pub const CC_LOCALACTIVECONFIG: CERT_GET_CONFIG_FLAGS = 4i32;
pub const CC_LOCALCONFIG: CERT_GET_CONFIG_FLAGS = 3i32;
pub const CC_UIPICKCONFIG: CERT_GET_CONFIG_FLAGS = 1i32;
pub const CC_UIPICKCONFIGSKIPLOCALCA: CERT_GET_CONFIG_FLAGS = 5i32;
pub const CCertAdmin: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x37eabaf0_7fb6_11d0_8817_00a0c903b83c);
pub const CCertConfig: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x372fce38_4324_11d0_8810_00a0c903b83c);
pub const CCertEncodeAltName: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x1cfc4cda_1271_11d1_9bd4_00c04fb683fa);
pub const CCertEncodeBitString: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x6d6b3cd8_1278_11d1_9bd4_00c04fb683fa);
pub const CCertEncodeCRLDistInfo: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x01fa60a0_bbff_11d0_8825_00a0c903b83c);
pub const CCertEncodeDateArray: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x301f77b0_a470_11d0_8821_00a0c903b83c);
pub const CCertEncodeLongArray: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x4e0680a0_a0a2_11d0_8821_00a0c903b83c);
pub const CCertEncodeStringArray: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x19a76fe0_7494_11d0_8816_00a0c903b83c);
pub const CCertGetConfig: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0xc6cc49b0_ce17_11d0_8833_00a0c903b83c);
pub const CCertProperties: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202f_217d_11da_b2a4_000e7bbb2b09);
pub const CCertProperty: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202e_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyArchived: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2037_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyArchivedKeyHash: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e203b_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyAutoEnroll: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2032_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyBackedUp: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2038_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyDescription: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2031_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyEnrollment: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2039_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyEnrollmentPolicyServer: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e204c_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyFriendlyName: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2030_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyKeyProvInfo: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2036_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyRenewal: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e203a_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertyRequestOriginator: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2033_217d_11da_b2a4_000e7bbb2b09);
pub const CCertPropertySHA1Hash: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2034_217d_11da_b2a4_000e7bbb2b09);
pub const CCertRequest: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x98aff3f0_5524_11d0_8812_00a0c903b83c);
pub const CCertServerExit: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x4c4a5e40_732c_11d0_8816_00a0c903b83c);
pub const CCertServerPolicy: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0xaa000926_ffbe_11cf_8800_00a0c903b83c);
pub const CCertView: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0xa12d0f7a_1e84_11d1_9bd6_00c04fb683fa);
pub const CCertificateAttestationChallenge: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x1362ada1_eb60_456a_b6e1_118050db741b);
pub const CCertificatePolicies: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201f_217d_11da_b2a4_000e7bbb2b09);
pub const CCertificatePolicy: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201e_217d_11da_b2a4_000e7bbb2b09);
pub const CCryptAttribute: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202c_217d_11da_b2a4_000e7bbb2b09);
pub const CCryptAttributes: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202d_217d_11da_b2a4_000e7bbb2b09);
pub const CCspInformation: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2007_217d_11da_b2a4_000e7bbb2b09);
pub const CCspInformations: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2008_217d_11da_b2a4_000e7bbb2b09);
pub const CCspStatus: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2009_217d_11da_b2a4_000e7bbb2b09);
pub const CDR_EXPIRED: CERT_DELETE_ROW_FLAGS = 1i32;
pub const CDR_REQUEST_LAST_CHANGED: CERT_DELETE_ROW_FLAGS = 2i32;
pub const CERTENROLL_INDEX_BASE: u32 = 0u32;
pub const CERT_ALT_NAME_DIRECTORY_NAME: CERT_ALT_NAME = 5i32;
pub const CERT_ALT_NAME_DNS_NAME: CERT_ALT_NAME = 3i32;
pub const CERT_ALT_NAME_IP_ADDRESS: CERT_ALT_NAME = 8i32;
pub const CERT_ALT_NAME_OTHER_NAME: CERT_ALT_NAME = 1i32;
pub const CERT_ALT_NAME_REGISTERED_ID: CERT_ALT_NAME = 9i32;
pub const CERT_ALT_NAME_RFC822_NAME: CERT_ALT_NAME = 2i32;
pub const CERT_ALT_NAME_URL: CERT_ALT_NAME = 7i32;
pub const CEnroll: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x43f8f289_7a20_11d0_8f06_00c04fc295e1);
pub const CEnroll2: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x127698e4_e730_4e5c_a2b1_21490a70c8a1);
pub const CMM_READONLY: u32 = 2u32;
pub const CMM_REFRESHONLY: u32 = 1u32;
pub const CObjectId: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2000_217d_11da_b2a4_000e7bbb2b09);
pub const CObjectIds: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2001_217d_11da_b2a4_000e7bbb2b09);
pub const CPF_BADURL_ERROR: u32 = 32u32;
pub const CPF_BASE: u32 = 1u32;
pub const CPF_CASTORE_ERROR: u32 = 16u32;
pub const CPF_COMPLETE: u32 = 4u32;
pub const CPF_DELTA: u32 = 2u32;
pub const CPF_FILE_ERROR: u32 = 512u32;
pub const CPF_FTP_ERROR: u32 = 1024u32;
pub const CPF_HTTP_ERROR: u32 = 2048u32;
pub const CPF_LDAP_ERROR: u32 = 256u32;
pub const CPF_MANUAL: u32 = 64u32;
pub const CPF_POSTPONED_BASE_FILE_ERROR: u32 = 8192u32;
pub const CPF_POSTPONED_BASE_LDAP_ERROR: u32 = 4096u32;
pub const CPF_SHADOW: u32 = 8u32;
pub const CPF_SIGNATURE_ERROR: u32 = 128u32;
pub const CPolicyQualifier: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201c_217d_11da_b2a4_000e7bbb2b09);
pub const CPolicyQualifiers: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201d_217d_11da_b2a4_000e7bbb2b09);
pub const CRLF_ALLOW_REQUEST_ATTRIBUTE_SUBJECT: u32 = 65536u32;
pub const CRLF_BUILD_ROOTCA_CRLENTRIES_BASEDONKEY: u32 = 2097152u32;
pub const CRLF_CRLNUMBER_CRITICAL: u32 = 4u32;
pub const CRLF_DELETE_EXPIRED_CRLS: u32 = 2u32;
pub const CRLF_DELTA_USE_OLDEST_UNEXPIRED_BASE: u32 = 1u32;
pub const CRLF_DISABLE_CHAIN_VERIFICATION: u32 = 1048576u32;
pub const CRLF_DISABLE_RDN_REORDER: u32 = 2048u32;
pub const CRLF_DISABLE_ROOT_CROSS_CERTS: u32 = 4096u32;
pub const CRLF_ENFORCE_ENROLLMENT_AGENT: u32 = 1024u32;
pub const CRLF_IGNORE_CROSS_CERT_TRUST_ERROR: u32 = 256u32;
pub const CRLF_IGNORE_INVALID_POLICIES: u32 = 16u32;
pub const CRLF_IGNORE_UNKNOWN_CMC_ATTRIBUTES: u32 = 128u32;
pub const CRLF_LOG_FULL_RESPONSE: u32 = 8192u32;
pub const CRLF_PRESERVE_EXPIRED_CA_CERTS: u32 = 262144u32;
pub const CRLF_PRESERVE_REVOKED_CA_CERTS: u32 = 524288u32;
pub const CRLF_PUBLISH_EXPIRED_CERT_CRLS: u32 = 512u32;
pub const CRLF_REBUILD_MODIFIED_SUBJECT_ONLY: u32 = 32u32;
pub const CRLF_REVCHECK_IGNORE_NOREVCHECK: u32 = 131072u32;
pub const CRLF_REVCHECK_IGNORE_OFFLINE: u32 = 8u32;
pub const CRLF_SAVE_FAILED_CERTS: u32 = 64u32;
pub const CRLF_USE_CROSS_CERT_TEMPLATE: u32 = 32768u32;
pub const CRLF_USE_XCHG_CERT_TEMPLATE: u32 = 16384u32;
pub const CRYPT_ENUM_ALL_PROVIDERS: u32 = 1u32;
pub const CR_DISP_DENIED: CR_DISP = 2u32;
pub const CR_DISP_ERROR: CR_DISP = 1u32;
pub const CR_DISP_INCOMPLETE: CR_DISP = 0u32;
pub const CR_DISP_ISSUED: CR_DISP = 3u32;
pub const CR_DISP_ISSUED_OUT_OF_BAND: CR_DISP = 4u32;
pub const CR_DISP_REVOKED: u32 = 6u32;
pub const CR_DISP_UNDER_SUBMISSION: CR_DISP = 5u32;
pub const CR_FLG_CACROSSCERT: u32 = 128u32;
pub const CR_FLG_CAXCHGCERT: u32 = 8u32;
pub const CR_FLG_CHALLENGEPENDING: u32 = 1024u32;
pub const CR_FLG_CHALLENGESATISFIED: u32 = 2048u32;
pub const CR_FLG_DEFINEDCACERT: u32 = 512u32;
pub const CR_FLG_ENFORCEUTF8: u32 = 256u32;
pub const CR_FLG_ENROLLONBEHALFOF: u32 = 16u32;
pub const CR_FLG_FORCETELETEX: u32 = 1u32;
pub const CR_FLG_FORCEUTF8: u32 = 4u32;
pub const CR_FLG_PUBLISHERROR: u32 = 2147483648u32;
pub const CR_FLG_RENEWAL: u32 = 2u32;
pub const CR_FLG_SUBJECTUNMODIFIED: u32 = 32u32;
pub const CR_FLG_TRUSTEKCERT: u32 = 8192u32;
pub const CR_FLG_TRUSTEKKEY: u32 = 16384u32;
pub const CR_FLG_TRUSTONUSE: u32 = 4096u32;
pub const CR_FLG_VALIDENCRYPTEDKEYHASH: u32 = 64u32;
pub const CR_GEMT_DEFAULT: u32 = 0u32;
pub const CR_GEMT_HRESULT_STRING: u32 = 1u32;
pub const CR_GEMT_HTTP_ERROR: u32 = 2u32;
pub const CR_IN_BASE64: CERT_IMPORT_FLAGS = 1i32;
pub const CR_IN_BASE64HEADER: CERT_IMPORT_FLAGS = 0i32;
pub const CR_IN_BINARY: CERT_IMPORT_FLAGS = 2i32;
pub const CR_IN_CERTIFICATETRANSPARENCY: u32 = 67108864u32;
pub const CR_IN_CHALLENGERESPONSE: u32 = 1280u32;
pub const CR_IN_CLIENTIDNONE: u32 = 4194304u32;
pub const CR_IN_CMC: u32 = 1024u32;
pub const CR_IN_CONNECTONLY: u32 = 8388608u32;
pub const CR_IN_CRLS: u32 = 524288u32;
pub const CR_IN_ENCODEANY: u32 = 255u32;
pub const CR_IN_ENCODEMASK: u32 = 255u32;
pub const CR_IN_FORMATANY: u32 = 0u32;
pub const CR_IN_FORMATMASK: u32 = 65280u32;
pub const CR_IN_FULLRESPONSE: u32 = 262144u32;
pub const CR_IN_HTTP: u32 = 196608u32;
pub const CR_IN_KEYGEN: u32 = 512u32;
pub const CR_IN_MACHINE: u32 = 1048576u32;
pub const CR_IN_PKCS10: u32 = 256u32;
pub const CR_IN_PKCS7: u32 = 768u32;
pub const CR_IN_RETURNCHALLENGE: u32 = 16777216u32;
pub const CR_IN_ROBO: u32 = 2097152u32;
pub const CR_IN_RPC: u32 = 131072u32;
pub const CR_IN_SCEP: u32 = 65536u32;
pub const CR_IN_SCEPPOST: u32 = 33554432u32;
pub const CR_IN_SIGNEDCERTIFICATETIMESTAMPLIST: u32 = 1536u32;
pub const CR_OUT_BASE64: CERT_REQUEST_OUT_TYPE = 1i32;
pub const CR_OUT_BASE64HEADER: CERT_REQUEST_OUT_TYPE = 0i32;
pub const CR_OUT_BASE64REQUESTHEADER: u32 = 3u32;
pub const CR_OUT_BASE64X509CRLHEADER: u32 = 9u32;
pub const CR_OUT_BINARY: CERT_REQUEST_OUT_TYPE = 2i32;
pub const CR_OUT_CHAIN: u32 = 256u32;
pub const CR_OUT_CRLS: u32 = 512u32;
pub const CR_OUT_ENCODEMASK: u32 = 255u32;
pub const CR_OUT_HEX: u32 = 4u32;
pub const CR_OUT_HEXADDR: u32 = 10u32;
pub const CR_OUT_HEXASCII: u32 = 5u32;
pub const CR_OUT_HEXASCIIADDR: u32 = 11u32;
pub const CR_OUT_HEXRAW: u32 = 12u32;
pub const CR_OUT_NOCR: u32 = 2147483648u32;
pub const CR_OUT_NOCRLF: u32 = 1073741824u32;
pub const CR_PROP_ADVANCEDSERVER: u32 = 28u32;
pub const CR_PROP_BASECRL: u32 = 17u32;
pub const CR_PROP_BASECRLPUBLISHSTATUS: u32 = 30u32;
pub const CR_PROP_CABACKWARDCROSSCERT: u32 = 36u32;
pub const CR_PROP_CABACKWARDCROSSCERTSTATE: u32 = 38u32;
pub const CR_PROP_CACERTSTATE: u32 = 19u32;
pub const CR_PROP_CACERTSTATUSCODE: u32 = 34u32;
pub const CR_PROP_CACERTVERSION: u32 = 39u32;
pub const CR_PROP_CAFORWARDCROSSCERT: u32 = 35u32;
pub const CR_PROP_CAFORWARDCROSSCERTSTATE: u32 = 37u32;
pub const CR_PROP_CANAME: u32 = 6u32;
pub const CR_PROP_CAPROPIDMAX: u32 = 21u32;
pub const CR_PROP_CASIGCERT: u32 = 12u32;
pub const CR_PROP_CASIGCERTCHAIN: u32 = 13u32;
pub const CR_PROP_CASIGCERTCOUNT: u32 = 11u32;
pub const CR_PROP_CASIGCERTCRLCHAIN: u32 = 32u32;
pub const CR_PROP_CATYPE: u32 = 10u32;
pub const CR_PROP_CAXCHGCERT: u32 = 15u32;
pub const CR_PROP_CAXCHGCERTCHAIN: u32 = 16u32;
pub const CR_PROP_CAXCHGCERTCOUNT: u32 = 14u32;
pub const CR_PROP_CAXCHGCERTCRLCHAIN: u32 = 33u32;
pub const CR_PROP_CERTAIAOCSPURLS: u32 = 43u32;
pub const CR_PROP_CERTAIAURLS: u32 = 42u32;
pub const CR_PROP_CERTCDPURLS: u32 = 41u32;
pub const CR_PROP_CRLSTATE: u32 = 20u32;
pub const CR_PROP_DELTACRL: u32 = 18u32;
pub const CR_PROP_DELTACRLPUBLISHSTATUS: u32 = 31u32;
pub const CR_PROP_DNSNAME: u32 = 22u32;
pub const CR_PROP_EXITCOUNT: u32 = 3u32;
pub const CR_PROP_EXITDESCRIPTION: u32 = 4u32;
pub const CR_PROP_FILEVERSION: u32 = 1u32;
pub const CR_PROP_KRACERT: u32 = 26u32;
pub const CR_PROP_KRACERTCOUNT: u32 = 25u32;
pub const CR_PROP_KRACERTSTATE: u32 = 27u32;
pub const CR_PROP_KRACERTUSEDCOUNT: u32 = 24u32;
pub const CR_PROP_LOCALENAME: u32 = 44u32;
pub const CR_PROP_NONE: u32 = 0u32;
pub const CR_PROP_PARENTCA: u32 = 9u32;
pub const CR_PROP_POLICYDESCRIPTION: u32 = 5u32;
pub const CR_PROP_PRODUCTVERSION: u32 = 2u32;
pub const CR_PROP_ROLESEPARATIONENABLED: u32 = 23u32;
pub const CR_PROP_SANITIZEDCANAME: u32 = 7u32;
pub const CR_PROP_SANITIZEDCASHORTNAME: u32 = 40u32;
pub const CR_PROP_SCEPMAX: u32 = 1002u32;
pub const CR_PROP_SCEPMIN: u32 = 1000u32;
pub const CR_PROP_SCEPSERVERCAPABILITIES: u32 = 1001u32;
pub const CR_PROP_SCEPSERVERCERTS: u32 = 1000u32;
pub const CR_PROP_SCEPSERVERCERTSCHAIN: u32 = 1002u32;
pub const CR_PROP_SHAREDFOLDER: u32 = 8u32;
pub const CR_PROP_SUBJECTTEMPLATE_OIDS: u32 = 45u32;
pub const CR_PROP_TEMPLATES: u32 = 29u32;
pub const CSBACKUP_DISABLE_INCREMENTAL: u32 = 4294967295u32;
pub const CSBACKUP_TYPE_FULL: CSBACKUP_TYPE = 1u32;
pub const CSBACKUP_TYPE_LOGS_ONLY: CSBACKUP_TYPE = 2u32;
pub const CSBACKUP_TYPE_MASK: u32 = 3u32;
pub const CSBFT_DATABASE_DIRECTORY: u32 = 64u32;
pub const CSBFT_DIRECTORY: u32 = 128u32;
pub const CSBFT_LOG_DIRECTORY: u32 = 32u32;
pub const CSCONTROL_RESTART: u64 = 3u64;
pub const CSCONTROL_SHUTDOWN: u64 = 1u64;
pub const CSCONTROL_SUSPEND: u64 = 2u64;
pub const CSRESTORE_TYPE_CATCHUP: u32 = 4u32;
pub const CSRESTORE_TYPE_FULL: u32 = 1u32;
pub const CSRESTORE_TYPE_MASK: u32 = 5u32;
pub const CSRESTORE_TYPE_ONLINE: u32 = 2u32;
pub const CSURL_ADDTOCERTCDP: u32 = 2u32;
pub const CSURL_ADDTOCERTOCSP: u32 = 32u32;
pub const CSURL_ADDTOCRLCDP: u32 = 8u32;
pub const CSURL_ADDTOFRESHESTCRL: u32 = 4u32;
pub const CSURL_ADDTOIDP: u32 = 128u32;
pub const CSURL_PUBLISHRETRY: u32 = 16u32;
pub const CSURL_SERVERPUBLISH: u32 = 1u32;
pub const CSURL_SERVERPUBLISHDELTA: u32 = 64u32;
pub const CSVER_MAJOR: u32 = 7u32;
pub const CSVER_MAJOR_LONGHORN: u32 = 3u32;
pub const CSVER_MAJOR_THRESHOLD: u32 = 7u32;
pub const CSVER_MAJOR_WHISTLER: u32 = 2u32;
pub const CSVER_MAJOR_WIN2K: u32 = 1u32;
pub const CSVER_MAJOR_WIN7: u32 = 4u32;
pub const CSVER_MAJOR_WIN8: u32 = 5u32;
pub const CSVER_MAJOR_WINBLUE: u32 = 6u32;
pub const CSVER_MINOR: u32 = 1u32;
pub const CSVER_MINOR_LONGHORN_BETA1: u32 = 1u32;
pub const CSVER_MINOR_THRESHOLD: u32 = 1u32;
pub const CSVER_MINOR_WHISTLER_BETA2: u32 = 1u32;
pub const CSVER_MINOR_WHISTLER_BETA3: u32 = 2u32;
pub const CSVER_MINOR_WIN2K: u32 = 1u32;
pub const CSVER_MINOR_WIN7: u32 = 1u32;
pub const CSVER_MINOR_WIN8: u32 = 1u32;
pub const CSVER_MINOR_WINBLUE: u32 = 1u32;
pub const CSignerCertificate: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e203d_217d_11da_b2a4_000e7bbb2b09);
pub const CSmimeCapabilities: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201a_217d_11da_b2a4_000e7bbb2b09);
pub const CSmimeCapability: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2019_217d_11da_b2a4_000e7bbb2b09);
pub const CVIEWAGEMINUTESDEFAULT: u32 = 16u32;
pub const CVRC_COLUMN_MASK: CVRC_COLUMN = 4095i32;
pub const CVRC_COLUMN_RESULT: CVRC_COLUMN = 1i32;
pub const CVRC_COLUMN_SCHEMA: CVRC_COLUMN = 0i32;
pub const CVRC_COLUMN_VALUE: CVRC_COLUMN = 2i32;
pub const CVRC_TABLE_ATTRIBUTES: CVRC_TABLE = 16384i32;
pub const CVRC_TABLE_CRL: CVRC_TABLE = 20480i32;
pub const CVRC_TABLE_EXTENSIONS: CVRC_TABLE = 12288i32;
pub const CVRC_TABLE_MASK: u32 = 61440u32;
pub const CVRC_TABLE_REQCERT: CVRC_TABLE = 0i32;
pub const CVRC_TABLE_SHIFT: u32 = 12u32;
pub const CVR_SEEK_EQ: CERT_VIEW_SEEK_OPERATOR_FLAGS = 1i32;
pub const CVR_SEEK_GE: CERT_VIEW_SEEK_OPERATOR_FLAGS = 8i32;
pub const CVR_SEEK_GT: CERT_VIEW_SEEK_OPERATOR_FLAGS = 16i32;
pub const CVR_SEEK_LE: CERT_VIEW_SEEK_OPERATOR_FLAGS = 4i32;
pub const CVR_SEEK_LT: CERT_VIEW_SEEK_OPERATOR_FLAGS = 2i32;
pub const CVR_SEEK_MASK: u32 = 255u32;
pub const CVR_SEEK_NODELTA: u32 = 4096u32;
pub const CVR_SEEK_NONE: u32 = 0u32;
pub const CVR_SORT_ASCEND: u32 = 1u32;
pub const CVR_SORT_DESCEND: u32 = 2u32;
pub const CVR_SORT_NONE: u32 = 0u32;
pub const CV_COLUMN_ATTRIBUTE_DEFAULT: i32 = -5i32;
pub const CV_COLUMN_CRL_DEFAULT: i32 = -6i32;
pub const CV_COLUMN_EXTENSION_DEFAULT: i32 = -4i32;
pub const CV_COLUMN_LOG_DEFAULT: CERT_VIEW_COLUMN_INDEX = -2i32;
pub const CV_COLUMN_LOG_FAILED_DEFAULT: CERT_VIEW_COLUMN_INDEX = -3i32;
pub const CV_COLUMN_LOG_REVOKED_DEFAULT: i32 = -7i32;
pub const CV_COLUMN_QUEUE_DEFAULT: CERT_VIEW_COLUMN_INDEX = -1i32;
pub const CV_OUT_BASE64: ENUM_CERT_COLUMN_VALUE_FLAGS = 1i32;
pub const CV_OUT_BASE64HEADER: ENUM_CERT_COLUMN_VALUE_FLAGS = 0i32;
pub const CV_OUT_BASE64REQUESTHEADER: ENUM_CERT_COLUMN_VALUE_FLAGS = 3i32;
pub const CV_OUT_BASE64X509CRLHEADER: ENUM_CERT_COLUMN_VALUE_FLAGS = 9i32;
pub const CV_OUT_BINARY: ENUM_CERT_COLUMN_VALUE_FLAGS = 2i32;
pub const CV_OUT_ENCODEMASK: u32 = 255u32;
pub const CV_OUT_HEX: ENUM_CERT_COLUMN_VALUE_FLAGS = 4i32;
pub const CV_OUT_HEXADDR: ENUM_CERT_COLUMN_VALUE_FLAGS = 10i32;
pub const CV_OUT_HEXASCII: ENUM_CERT_COLUMN_VALUE_FLAGS = 5i32;
pub const CV_OUT_HEXASCIIADDR: ENUM_CERT_COLUMN_VALUE_FLAGS = 11i32;
pub const CV_OUT_HEXRAW: u32 = 12u32;
pub const CV_OUT_NOCR: u32 = 2147483648u32;
pub const CV_OUT_NOCRLF: u32 = 1073741824u32;
pub const CX500DistinguishedName: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2003_217d_11da_b2a4_000e7bbb2b09);
pub const CX509Attribute: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2022_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeArchiveKey: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2027_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeArchiveKeyHash: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2028_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeClientId: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2025_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeCspProvider: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202b_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeExtensions: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2024_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeOSVersion: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e202a_217d_11da_b2a4_000e7bbb2b09);
pub const CX509AttributeRenewalCertificate: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2026_217d_11da_b2a4_000e7bbb2b09);
pub const CX509Attributes: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2023_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRequestCertificate: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2043_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRequestCmc: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2045_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRequestPkcs10: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2042_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRequestPkcs7: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2044_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRevocationList: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2060_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRevocationListEntries: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e205f_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateRevocationListEntry: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e205e_217d_11da_b2a4_000e7bbb2b09);
pub const CX509CertificateTemplateADWritable: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x8336e323_2e6a_4a04_937c_548f681839b3);
pub const CX509EndorsementKey: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x11a25a1d_b9a3_4edd_af83_3b59adbed361);
pub const CX509Enrollment: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2046_217d_11da_b2a4_000e7bbb2b09);
pub const CX509EnrollmentHelper: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2050_217d_11da_b2a4_000e7bbb2b09);
pub const CX509EnrollmentPolicyActiveDirectory: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x91f39027_217f_11da_b2a4_000e7bbb2b09);
pub const CX509EnrollmentPolicyWebService: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x91f39028_217f_11da_b2a4_000e7bbb2b09);
pub const CX509EnrollmentWebClassFactory: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2049_217d_11da_b2a4_000e7bbb2b09);
pub const CX509Extension: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e200d_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionAlternativeNames: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2015_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionAuthorityKeyIdentifier: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2018_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionBasicConstraints: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2016_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionCertificatePolicies: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2020_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionEnhancedKeyUsage: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2010_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionKeyUsage: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e200f_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionMSApplicationPolicies: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2021_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionSmimeCapabilities: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e201b_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionSubjectKeyIdentifier: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2017_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionTemplate: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2012_217d_11da_b2a4_000e7bbb2b09);
pub const CX509ExtensionTemplateName: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2011_217d_11da_b2a4_000e7bbb2b09);
pub const CX509Extensions: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e200e_217d_11da_b2a4_000e7bbb2b09);
pub const CX509MachineEnrollmentFactory: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2051_217d_11da_b2a4_000e7bbb2b09);
pub const CX509NameValuePair: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e203f_217d_11da_b2a4_000e7bbb2b09);
pub const CX509PolicyServerListManager: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x91f39029_217f_11da_b2a4_000e7bbb2b09);
pub const CX509PolicyServerUrl: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x91f3902a_217f_11da_b2a4_000e7bbb2b09);
pub const CX509PrivateKey: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e200c_217d_11da_b2a4_000e7bbb2b09);
pub const CX509PublicKey: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e200b_217d_11da_b2a4_000e7bbb2b09);
pub const CX509SCEPEnrollment: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2061_217d_11da_b2a4_000e7bbb2b09);
pub const CX509SCEPEnrollmentHelper: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0x884e2062_217d_11da_b2a4_000e7bbb2b09);
pub const ClientIdAutoEnroll: RequestClientInfoClientId = 6i32;
pub const ClientIdAutoEnroll2003: RequestClientInfoClientId = 2i32;
pub const ClientIdCertReq: RequestClientInfoClientId = 9i32;
pub const ClientIdCertReq2003: RequestClientInfoClientId = 4i32;
pub const ClientIdDefaultRequest: RequestClientInfoClientId = 5i32;
pub const ClientIdEOBO: RequestClientInfoClientId = 8i32;
pub const ClientIdNone: RequestClientInfoClientId = 0i32;
pub const ClientIdRequestWizard: RequestClientInfoClientId = 7i32;
pub const ClientIdTest: RequestClientInfoClientId = 10i32;
pub const ClientIdUserStart: RequestClientInfoClientId = 1000i32;
pub const ClientIdWinRT: RequestClientInfoClientId = 11i32;
pub const ClientIdWizard2003: RequestClientInfoClientId = 3i32;
pub const ClientIdXEnroll2003: RequestClientInfoClientId = 1i32;
pub const CommitFlagDeleteTemplate: CommitTemplateFlags = 4i32;
pub const CommitFlagSaveTemplateGenerateOID: CommitTemplateFlags = 1i32;
pub const CommitFlagSaveTemplateOverwrite: CommitTemplateFlags = 3i32;
pub const CommitFlagSaveTemplateUseCurrentOID: CommitTemplateFlags = 2i32;
pub const ContextAdministratorForceMachine: X509CertificateEnrollmentContext = 3i32;
pub const ContextMachine: X509CertificateEnrollmentContext = 2i32;
pub const ContextNone: X509CertificateEnrollmentContext = 0i32;
pub const ContextUser: X509CertificateEnrollmentContext = 1i32;
pub const DBFLAGS_CHECKPOINTDEPTH60MB: u32 = 32u32;
pub const DBFLAGS_CIRCULARLOGGING: u32 = 4u32;
pub const DBFLAGS_CREATEIFNEEDED: u32 = 2u32;
pub const DBFLAGS_DISABLESNAPSHOTBACKUP: u32 = 1024u32;
pub const DBFLAGS_ENABLEVOLATILEREQUESTS: u32 = 2048u32;
pub const DBFLAGS_LAZYFLUSH: u32 = 8u32;
pub const DBFLAGS_LOGBUFFERSHUGE: u32 = 128u32;
pub const DBFLAGS_LOGBUFFERSLARGE: u32 = 64u32;
pub const DBFLAGS_LOGFILESIZE16MB: u32 = 256u32;
pub const DBFLAGS_MAXCACHESIZEX100: u32 = 16u32;
pub const DBFLAGS_MULTITHREADTRANSACTIONS: u32 = 512u32;
pub const DBFLAGS_READONLY: u32 = 1u32;
pub const DBG_CERTSRV: u32 = 1u32;
pub const DBSESSIONCOUNTDEFAULT: u32 = 100u32;
pub const DB_DISP_ACTIVE: u32 = 8u32;
pub const DB_DISP_CA_CERT: u32 = 15u32;
pub const DB_DISP_CA_CERT_CHAIN: u32 = 16u32;
pub const DB_DISP_DENIED: u32 = 31u32;
pub const DB_DISP_ERROR: u32 = 30u32;
pub const DB_DISP_FOREIGN: u32 = 12u32;
pub const DB_DISP_ISSUED: u32 = 20u32;
pub const DB_DISP_KRA_CERT: u32 = 17u32;
pub const DB_DISP_LOG_FAILED_MIN: u32 = 30u32;
pub const DB_DISP_LOG_MIN: u32 = 20u32;
pub const DB_DISP_PENDING: u32 = 9u32;
pub const DB_DISP_QUEUE_MAX: u32 = 9u32;
pub const DB_DISP_REVOKED: u32 = 21u32;
pub const DefaultNone: EnrollmentPolicyServerPropertyFlags = 0i32;
pub const DefaultPolicyServer: EnrollmentPolicyServerPropertyFlags = 1i32;
pub const DelayRetryLong: DelayRetryAction = 3i32;
pub const DelayRetryNone: DelayRetryAction = 1i32;
pub const DelayRetryPastSuccess: DelayRetryAction = 5i32;
pub const DelayRetryShort: DelayRetryAction = 2i32;
pub const DelayRetrySuccess: DelayRetryAction = 4i32;
pub const DelayRetryUnknown: DelayRetryAction = 0i32;
pub const DisableGroupPolicyList: EnrollmentPolicyFlags = 2i32;
pub const DisableUserServerList: EnrollmentPolicyFlags = 4i32;
pub const DisplayNo: EnrollmentDisplayStatus = 0i32;
pub const DisplayYes: EnrollmentDisplayStatus = 1i32;
pub const EANR_SUPPRESS_IA5CONVERSION: u32 = 2147483648u32;
pub const EAN_NAMEOBJECTID: u32 = 2147483648u32;
pub const EDITF_ADDOLDCERTTYPE: u32 = 16u32;
pub const EDITF_ADDOLDKEYUSAGE: u32 = 8u32;
pub const EDITF_ATTRIBUTECA: u32 = 512u32;
pub const EDITF_ATTRIBUTEEKU: u32 = 32768u32;
pub const EDITF_ATTRIBUTEENDDATE: u32 = 32u32;
pub const EDITF_ATTRIBUTESUBJECTALTNAME2: u32 = 262144u32;
pub const EDITF_AUDITCERTTEMPLATELOAD: u32 = 2097152u32;
pub const EDITF_BASICCONSTRAINTSCA: u32 = 128u32;
pub const EDITF_BASICCONSTRAINTSCRITICAL: u32 = 64u32;
pub const EDITF_DISABLEEXTENSIONLIST: u32 = 4u32;
pub const EDITF_DISABLELDAPPACKAGELIST: u32 = 8388608u32;
pub const EDITF_DISABLEOLDOSCNUPN: u32 = 4194304u32;
pub const EDITF_EMAILOPTIONAL: u32 = 131072u32;
pub const EDITF_ENABLEAKICRITICAL: u32 = 8192u32;
pub const EDITF_ENABLEAKIISSUERNAME: u32 = 2048u32;
pub const EDITF_ENABLEAKIISSUERSERIAL: u32 = 4096u32;
pub const EDITF_ENABLEAKIKEYID: u32 = 256u32;
pub const EDITF_ENABLECHASECLIENTDC: u32 = 1048576u32;
pub const EDITF_ENABLEDEFAULTSMIME: u32 = 65536u32;
pub const EDITF_ENABLEKEYENCIPHERMENTCACERT: u32 = 134217728u32;
pub const EDITF_ENABLELDAPREFERRALS: u32 = 524288u32;
pub const EDITF_ENABLEOCSPREVNOCHECK: u32 = 33554432u32;
pub const EDITF_ENABLERENEWONBEHALFOF: u32 = 67108864u32;
pub const EDITF_ENABLEREQUESTEXTENSIONS: u32 = 1u32;
pub const EDITF_ENABLEUPNMAP: u32 = 16777216u32;
pub const EDITF_IGNOREREQUESTERGROUP: u32 = 1024u32;
pub const EDITF_REQUESTEXTENSIONLIST: u32 = 2u32;
pub const EDITF_SERVERUPGRADED: u32 = 16384u32;
pub const ENUMEXT_OBJECTID: u32 = 1u32;
pub const ENUM_ENTERPRISE_ROOTCA: ENUM_CATYPES = 0i32;
pub const ENUM_ENTERPRISE_SUBCA: ENUM_CATYPES = 1i32;
pub const ENUM_STANDALONE_ROOTCA: ENUM_CATYPES = 3i32;
pub const ENUM_STANDALONE_SUBCA: ENUM_CATYPES = 4i32;
pub const ENUM_UNKNOWN_CA: ENUM_CATYPES = 5i32;
pub const EXITEVENT_CERTDENIED: CERT_EXIT_EVENT_MASK = 4u32;
pub const EXITEVENT_CERTIMPORTED: u32 = 512u32;
pub const EXITEVENT_CERTISSUED: CERT_EXIT_EVENT_MASK = 1u32;
pub const EXITEVENT_CERTPENDING: CERT_EXIT_EVENT_MASK = 2u32;
pub const EXITEVENT_CERTRETRIEVEPENDING: CERT_EXIT_EVENT_MASK = 16u32;
pub const EXITEVENT_CERTREVOKED: CERT_EXIT_EVENT_MASK = 8u32;
pub const EXITEVENT_CRLISSUED: CERT_EXIT_EVENT_MASK = 32u32;
pub const EXITEVENT_INVALID: u32 = 0u32;
pub const EXITEVENT_SHUTDOWN: CERT_EXIT_EVENT_MASK = 64u32;
pub const EXITEVENT_STARTUP: u32 = 128u32;
pub const EXITPUB_ACTIVEDIRECTORY: u32 = 2u32;
pub const EXITPUB_DEFAULT_ENTERPRISE: u32 = 2u32;
pub const EXITPUB_DEFAULT_STANDALONE: u32 = 1u32;
pub const EXITPUB_FILE: u32 = 1u32;
pub const EXITPUB_REMOVEOLDCERTS: u32 = 16u32;
pub const EXTENSION_CRITICAL_FLAG: u32 = 1u32;
pub const EXTENSION_DELETE_FLAG: u32 = 4u32;
pub const EXTENSION_DISABLE_FLAG: u32 = 2u32;
pub const EXTENSION_ORIGIN_ADMIN: u32 = 196608u32;
pub const EXTENSION_ORIGIN_CACERT: u32 = 589824u32;
pub const EXTENSION_ORIGIN_CMC: u32 = 524288u32;
pub const EXTENSION_ORIGIN_IMPORTEDCERT: u32 = 393216u32;
pub const EXTENSION_ORIGIN_MASK: u32 = 983040u32;
pub const EXTENSION_ORIGIN_PKCS7: u32 = 458752u32;
pub const EXTENSION_ORIGIN_POLICY: u32 = 131072u32;
pub const EXTENSION_ORIGIN_RENEWALCERT: u32 = 327680u32;
pub const EXTENSION_ORIGIN_REQUEST: u32 = 65536u32;
pub const EXTENSION_ORIGIN_SERVER: u32 = 262144u32;
pub const EXTENSION_POLICY_MASK: u32 = 65535u32;
pub const EnrollDenied: EnrollmentEnrollStatus = 256i32;
pub const EnrollError: EnrollmentEnrollStatus = 16i32;
pub const EnrollPended: EnrollmentEnrollStatus = 2i32;
pub const EnrollPrompt: WebEnrollmentFlags = 1i32;
pub const EnrollSkipped: EnrollmentEnrollStatus = 64i32;
pub const EnrollUIDeferredEnrollmentRequired: EnrollmentEnrollStatus = 4i32;
pub const EnrollUnknown: EnrollmentEnrollStatus = 32i32;
pub const Enrolled: EnrollmentEnrollStatus = 1i32;
pub const EnrollmentAddOCSPNoCheck: X509CertificateTemplateEnrollmentFlag = 4096i32;
pub const EnrollmentAddTemplateName: X509CertificateTemplateEnrollmentFlag = 512i32;
pub const EnrollmentAllowEnrollOnBehalfOf: X509CertificateTemplateEnrollmentFlag = 2048i32;
pub const EnrollmentAutoEnrollment: X509CertificateTemplateEnrollmentFlag = 32i32;
pub const EnrollmentAutoEnrollmentCheckUserDSCertificate: X509CertificateTemplateEnrollmentFlag = 16i32;
pub const EnrollmentCertificateIssuancePoliciesFromRequest: X509CertificateTemplateEnrollmentFlag = 131072i32;
pub const EnrollmentDomainAuthenticationNotRequired: X509CertificateTemplateEnrollmentFlag = 128i32;
pub const EnrollmentIncludeBasicConstraintsForEECerts: X509CertificateTemplateEnrollmentFlag = 32768i32;
pub const EnrollmentIncludeSymmetricAlgorithms: X509CertificateTemplateEnrollmentFlag = 1i32;
pub const EnrollmentNoRevocationInfoInCerts: X509CertificateTemplateEnrollmentFlag = 16384i32;
pub const EnrollmentPendAllRequests: X509CertificateTemplateEnrollmentFlag = 2i32;
pub const EnrollmentPreviousApprovalKeyBasedValidateReenrollment: X509CertificateTemplateEnrollmentFlag = 65536i32;
pub const EnrollmentPreviousApprovalValidateReenrollment: X509CertificateTemplateEnrollmentFlag = 64i32;
pub const EnrollmentPublishToDS: X509CertificateTemplateEnrollmentFlag = 8i32;
pub const EnrollmentPublishToKRAContainer: X509CertificateTemplateEnrollmentFlag = 4i32;
pub const EnrollmentRemoveInvalidCertificateFromPersonalStore: X509CertificateTemplateEnrollmentFlag = 1024i32;
pub const EnrollmentReuseKeyOnFullSmartCard: X509CertificateTemplateEnrollmentFlag = 8192i32;
pub const EnrollmentSkipAutoRenewal: X509CertificateTemplateEnrollmentFlag = 262144i32;
pub const EnrollmentUserInteractionRequired: X509CertificateTemplateEnrollmentFlag = 256i32;
pub const ExportCAs: X509EnrollmentPolicyExportFlags = 4i32;
pub const ExportOIDs: X509EnrollmentPolicyExportFlags = 2i32;
pub const ExportTemplates: X509EnrollmentPolicyExportFlags = 1i32;
pub const FR_PROP_ATTESTATIONCHALLENGE: FULL_RESPONSE_PROPERTY_ID = 20i32;
pub const FR_PROP_ATTESTATIONPROVIDERNAME: FULL_RESPONSE_PROPERTY_ID = 21i32;
pub const FR_PROP_BODYPARTSTRING: FULL_RESPONSE_PROPERTY_ID = 3i32;
pub const FR_PROP_CAEXCHANGECERTIFICATE: FULL_RESPONSE_PROPERTY_ID = 17i32;
pub const FR_PROP_CAEXCHANGECERTIFICATECHAIN: FULL_RESPONSE_PROPERTY_ID = 18i32;
pub const FR_PROP_CAEXCHANGECERTIFICATECRLCHAIN: FULL_RESPONSE_PROPERTY_ID = 19i32;
pub const FR_PROP_CAEXCHANGECERTIFICATEHASH: FULL_RESPONSE_PROPERTY_ID = 16i32;
pub const FR_PROP_CLAIMCHALLENGE: u32 = 22u32;
pub const FR_PROP_ENCRYPTEDKEYHASH: FULL_RESPONSE_PROPERTY_ID = 14i32;
pub const FR_PROP_FAILINFO: FULL_RESPONSE_PROPERTY_ID = 7i32;
pub const FR_PROP_FULLRESPONSE: FULL_RESPONSE_PROPERTY_ID = 1i32;
pub const FR_PROP_FULLRESPONSENOPKCS7: FULL_RESPONSE_PROPERTY_ID = 15i32;
pub const FR_PROP_ISSUEDCERTIFICATE: FULL_RESPONSE_PROPERTY_ID = 11i32;
pub const FR_PROP_ISSUEDCERTIFICATECHAIN: FULL_RESPONSE_PROPERTY_ID = 12i32;
pub const FR_PROP_ISSUEDCERTIFICATECRLCHAIN: FULL_RESPONSE_PROPERTY_ID = 13i32;
pub const FR_PROP_ISSUEDCERTIFICATEHASH: FULL_RESPONSE_PROPERTY_ID = 10i32;
pub const FR_PROP_NONE: FULL_RESPONSE_PROPERTY_ID = 0i32;
pub const FR_PROP_OTHERINFOCHOICE: FULL_RESPONSE_PROPERTY_ID = 6i32;
pub const FR_PROP_PENDINFOTIME: FULL_RESPONSE_PROPERTY_ID = 9i32;
pub const FR_PROP_PENDINFOTOKEN: FULL_RESPONSE_PROPERTY_ID = 8i32;
pub const FR_PROP_STATUS: FULL_RESPONSE_PROPERTY_ID = 4i32;
pub const FR_PROP_STATUSINFOCOUNT: FULL_RESPONSE_PROPERTY_ID = 2i32;
pub const FR_PROP_STATUSSTRING: FULL_RESPONSE_PROPERTY_ID = 5i32;
pub const GeneralCA: X509CertificateTemplateGeneralFlag = 128i32;
pub const GeneralCrossCA: X509CertificateTemplateGeneralFlag = 2048i32;
pub const GeneralDefault: X509CertificateTemplateGeneralFlag = 65536i32;
pub const GeneralDonotPersist: X509CertificateTemplateGeneralFlag = 4096i32;
pub const GeneralMachineType: X509CertificateTemplateGeneralFlag = 64i32;
pub const GeneralModified: X509CertificateTemplateGeneralFlag = 131072i32;
pub const ICF_ALLOWFOREIGN: u32 = 65536u32;
pub const ICF_EXISTINGROW: u32 = 131072u32;
pub const IF_ENABLEADMINASAUDITOR: u32 = 4096u32;
pub const IF_ENABLEEXITKEYRETRIEVAL: u32 = 2048u32;
pub const IF_ENFORCEENCRYPTICERTADMIN: u32 = 1024u32;
pub const IF_ENFORCEENCRYPTICERTREQUEST: u32 = 512u32;
pub const IF_LOCKICERTREQUEST: u32 = 1u32;
pub const IF_NOLOCALICERTADMIN: u32 = 32u32;
pub const IF_NOLOCALICERTADMINBACKUP: u32 = 128u32;
pub const IF_NOLOCALICERTREQUEST: u32 = 4u32;
pub const IF_NOREMOTEICERTADMIN: u32 = 16u32;
pub const IF_NOREMOTEICERTADMINBACKUP: u32 = 64u32;
pub const IF_NOREMOTEICERTREQUEST: u32 = 2u32;
pub const IF_NORPCICERTREQUEST: u32 = 8u32;
pub const IF_NOSNAPSHOTBACKUP: u32 = 256u32;
pub const IKF_OVERWRITE: u32 = 65536u32;
pub const ISSCERT_DEFAULT_DS: u32 = 256u32;
pub const ISSCERT_DEFAULT_NODS: u32 = 256u32;
pub const ISSCERT_ENABLE: u32 = 256u32;
pub const ISSCERT_FILEURL_OLD: u32 = 8u32;
pub const ISSCERT_FTPURL_OLD: u32 = 4u32;
pub const ISSCERT_HTTPURL_OLD: u32 = 2u32;
pub const ISSCERT_LDAPURL_OLD: u32 = 1u32;
pub const ISSCERT_URLMASK_OLD: u32 = 255u32;
pub const ImportExportable: ImportPFXFlags = 16i32;
pub const ImportExportableEncrypted: ImportPFXFlags = 32i32;
pub const ImportForceOverwrite: ImportPFXFlags = 2i32;
pub const ImportInstallCertificate: ImportPFXFlags = 512i32;
pub const ImportInstallChain: ImportPFXFlags = 1024i32;
pub const ImportInstallChainAndRoot: ImportPFXFlags = 2048i32;
pub const ImportMachineContext: ImportPFXFlags = 1i32;
pub const ImportNoUserProtected: ImportPFXFlags = 64i32;
pub const ImportNone: ImportPFXFlags = 0i32;
pub const ImportSaveProperties: ImportPFXFlags = 8i32;
pub const ImportSilent: ImportPFXFlags = 4i32;
pub const ImportUserProtected: ImportPFXFlags = 128i32;
pub const ImportUserProtectedHigh: ImportPFXFlags = 256i32;
pub const InheritDefault: X509RequestInheritOptions = 0i32;
pub const InheritExtensionsFlag: X509RequestInheritOptions = 256i32;
pub const InheritKeyMask: X509RequestInheritOptions = 15i32;
pub const InheritNewDefaultKey: X509RequestInheritOptions = 1i32;
pub const InheritNewSimilarKey: X509RequestInheritOptions = 2i32;
pub const InheritNone: X509RequestInheritOptions = 16i32;
pub const InheritPrivateKey: X509RequestInheritOptions = 3i32;
pub const InheritPublicKey: X509RequestInheritOptions = 4i32;
pub const InheritRenewalCertificateFlag: X509RequestInheritOptions = 32i32;
pub const InheritReserved80000000: X509RequestInheritOptions = -2147483648i32;
pub const InheritSubjectAltNameFlag: X509RequestInheritOptions = 512i32;
pub const InheritSubjectFlag: X509RequestInheritOptions = 128i32;
pub const InheritTemplateFlag: X509RequestInheritOptions = 64i32;
pub const InheritValidityPeriodFlag: X509RequestInheritOptions = 1024i32;
pub const KRAF_DISABLEUSEDEFAULTPROVIDER: u32 = 8u32;
pub const KRAF_ENABLEARCHIVEALL: u32 = 4u32;
pub const KRAF_ENABLEFOREIGN: u32 = 1u32;
pub const KRAF_SAVEBADREQUESTKEY: u32 = 2u32;
pub const KRA_DISP_EXPIRED: u32 = 0u32;
pub const KRA_DISP_INVALID: u32 = 4u32;
pub const KRA_DISP_NOTFOUND: u32 = 1u32;
pub const KRA_DISP_NOTLOADED: u32 = 6u32;
pub const KRA_DISP_REVOKED: u32 = 2u32;
pub const KRA_DISP_UNTRUSTED: u32 = 5u32;
pub const KRA_DISP_VALID: u32 = 3u32;
pub const KR_ENABLE_MACHINE: u32 = 1u32;
pub const KR_ENABLE_USER: u32 = 2u32;
pub const LDAPF_SIGNDISABLE: u32 = 2u32;
pub const LDAPF_SSLENABLE: u32 = 1u32;
pub const LevelInnermost: InnerRequestLevel = 0i32;
pub const LevelNext: InnerRequestLevel = 1i32;
pub const LevelSafe: WebSecurityLevel = 1i32;
pub const LevelUnsafe: WebSecurityLevel = 0i32;
pub const LoadOptionCacheOnly: X509EnrollmentPolicyLoadOption = 1i32;
pub const LoadOptionDefault: X509EnrollmentPolicyLoadOption = 0i32;
pub const LoadOptionRegisterForADChanges: X509EnrollmentPolicyLoadOption = 4i32;
pub const LoadOptionReload: X509EnrollmentPolicyLoadOption = 2i32;
pub const OCSPAdmin: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0xd3f73511_92c9_47cb_8ff2_8d891a7c4de4);
pub const OCSPPropertyCollection: ::windows_sys::core::GUID = ::windows_sys::core::GUID::from_u128(0xf935a528_ba8a_4dd9_ba79_f283275cb2de);
pub const OCSP_RF_REJECT_SIGNED_REQUESTS: OCSPRequestFlag = 1i32;
pub const OCSP_SF_ALLOW_NONCE_EXTENSION: OCSPSigningFlag = 256i32;
pub const OCSP_SF_ALLOW_SIGNINGCERT_AUTOENROLLMENT: OCSPSigningFlag = 512i32;
pub const OCSP_SF_ALLOW_SIGNINGCERT_AUTORENEWAL: OCSPSigningFlag = 4i32;
pub const OCSP_SF_AUTODISCOVER_SIGNINGCERT: OCSPSigningFlag = 16i32;
pub const OCSP_SF_FORCE_SIGNINGCERT_ISSUER_ISCA: OCSPSigningFlag = 8i32;
pub const OCSP_SF_MANUAL_ASSIGN_SIGNINGCERT: OCSPSigningFlag = 32i32;
pub const OCSP_SF_RESPONDER_ID_KEYHASH: OCSPSigningFlag = 64i32;
pub const OCSP_SF_RESPONDER_ID_NAME: OCSPSigningFlag = 128i32;
pub const OCSP_SF_SILENT: OCSPSigningFlag = 1i32;
pub const OCSP_SF_USE_CACERT: OCSPSigningFlag = 2i32;
pub const PFXExportChainNoRoot: PFXExportOptions = 1i32;
pub const PFXExportChainWithRoot: PFXExportOptions = 2i32;
pub const PFXExportEEOnly: PFXExportOptions = 0i32;
pub const PROCFLG_ENFORCEGOODKEYS: u32 = 1u32;
pub const PROCFLG_NONE: u32 = 0u32;
pub const PROPCALLER_ADMIN: u32 = 1024u32;
pub const PROPCALLER_EXIT: u32 = 768u32;
pub const PROPCALLER_MASK: u32 = 3840u32;
pub const PROPCALLER_POLICY: u32 = 512u32;
pub const PROPCALLER_REQUEST: u32 = 1280u32;
pub const PROPCALLER_SERVER: u32 = 256u32;
pub const PROPFLAGS_INDEXED: u32 = 65536u32;
pub const PROPTYPE_BINARY: CERT_PROPERTY_TYPE = 3i32;
pub const PROPTYPE_DATE: CERT_PROPERTY_TYPE = 2i32;
pub const PROPTYPE_LONG: CERT_PROPERTY_TYPE = 1i32;
pub const PROPTYPE_MASK: u32 = 255u32;
pub const PROPTYPE_STRING: CERT_PROPERTY_TYPE = 4i32;
pub const PolicyQualifierTypeFlags: PolicyQualifierType = 3i32;
pub const PolicyQualifierTypeUnknown: PolicyQualifierType = 0i32;
pub const PolicyQualifierTypeUrl: PolicyQualifierType = 1i32;
pub const PolicyQualifierTypeUserNotice: PolicyQualifierType = 2i32;
pub const PrivateKeyAttestMask: X509CertificateTemplatePrivateKeyFlag = 12288i32;
pub const PrivateKeyAttestNone: X509CertificateTemplatePrivateKeyFlag = 0i32;
pub const PrivateKeyAttestPreferred: X509CertificateTemplatePrivateKeyFlag = 4096i32;
pub const PrivateKeyAttestRequired: X509CertificateTemplatePrivateKeyFlag = 8192i32;
pub const PrivateKeyAttestWithoutPolicy: X509CertificateTemplatePrivateKeyFlag = 16384i32;
pub const PrivateKeyClientVersionMask: X509CertificateTemplatePrivateKeyFlag = 251658240i32;
pub const PrivateKeyClientVersionShift: X509CertificateTemplatePrivateKeyFlag = 24i32;
pub const PrivateKeyEKTrustOnUse: X509CertificateTemplatePrivateKeyFlag = 512i32;
pub const PrivateKeyEKValidateCert: X509CertificateTemplatePrivateKeyFlag = 1024i32;
pub const PrivateKeyEKValidateKey: X509CertificateTemplatePrivateKeyFlag = 2048i32;
pub const PrivateKeyExportable: X509CertificateTemplatePrivateKeyFlag = 16i32;
pub const PrivateKeyHelloKspKey: X509CertificateTemplatePrivateKeyFlag = 1048576i32;
pub const PrivateKeyHelloLogonKey: X509CertificateTemplatePrivateKeyFlag = 2097152i32;
pub const PrivateKeyRequireAlternateSignatureAlgorithm: X509CertificateTemplatePrivateKeyFlag = 64i32;
pub const PrivateKeyRequireArchival: X509CertificateTemplatePrivateKeyFlag = 1i32;
pub const PrivateKeyRequireSameKeyRenewal: X509CertificateTemplatePrivateKeyFlag = 128i32;
pub const PrivateKeyRequireStrongKeyProtection: X509CertificateTemplatePrivateKeyFlag = 32i32;
pub const PrivateKeyServerVersionMask: X509CertificateTemplatePrivateKeyFlag = 983040i32;
pub const PrivateKeyServerVersionShift: X509CertificateTemplatePrivateKeyFlag = 16i32;
pub const PrivateKeyUseLegacyProvider: X509CertificateTemplatePrivateKeyFlag = 256i32;
pub const PsFriendlyName: PolicyServerUrlPropertyID = 1i32;
pub const PsPolicyID: PolicyServerUrlPropertyID = 0i32;
pub const PsfAllowUnTrustedCA: PolicyServerUrlFlags = 32i32;
pub const PsfAutoEnrollmentEnabled: PolicyServerUrlFlags = 16i32;
pub const PsfLocationGroupPolicy: PolicyServerUrlFlags = 1i32;
pub const PsfLocationRegistry: PolicyServerUrlFlags = 2i32;
pub const PsfNone: PolicyServerUrlFlags = 0i32;
pub const PsfUseClientId: PolicyServerUrlFlags = 4i32;
pub const REQDISP_DEFAULT_ENTERPRISE: u32 = 1u32;
pub const REQDISP_DENY: u32 = 2u32;
pub const REQDISP_ISSUE: u32 = 1u32;
pub const REQDISP_MASK: u32 = 255u32;
pub const REQDISP_PENDING: u32 = 0u32;
pub const REQDISP_PENDINGFIRST: u32 = 256u32;
pub const REQDISP_USEREQUESTATTRIBUTE: u32 = 3u32;
pub const REVEXT_ASPENABLE: u32 = 512u32;
pub const REVEXT_CDPENABLE: u32 = 256u32;
pub const REVEXT_CDPFILEURL_OLD: u32 = 8u32;
pub const REVEXT_CDPFTPURL_OLD: u32 = 4u32;
pub const REVEXT_CDPHTTPURL_OLD: u32 = 2u32;
pub const REVEXT_CDPLDAPURL_OLD: u32 = 1u32;
pub const REVEXT_CDPURLMASK_OLD: u32 = 255u32;
pub const REVEXT_DEFAULT_DS: u32 = 256u32;
pub const REVEXT_DEFAULT_NODS: u32 = 256u32;
pub const SCEPDispositionFailure: X509SCEPDisposition = 2i32;
pub const SCEPDispositionPending: X509SCEPDisposition = 3i32;
pub const SCEPDispositionPendingChallenge: X509SCEPDisposition = 11i32;
pub const SCEPDispositionSuccess: X509SCEPDisposition = 0i32;
pub const SCEPDispositionUnknown: X509SCEPDisposition = -1i32;
pub const SCEPFailBadAlgorithm: X509SCEPFailInfo = 0i32;
pub const SCEPFailBadCertId: X509SCEPFailInfo = 4i32;
pub const SCEPFailBadMessageCheck: X509SCEPFailInfo = 1i32;
pub const SCEPFailBadRequest: X509SCEPFailInfo = 2i32;
pub const SCEPFailBadTime: X509SCEPFailInfo = 3i32;
pub const SCEPFailUnknown: X509SCEPFailInfo = -1i32;
pub const SCEPMessageCertResponse: X509SCEPMessageType = 3i32;
pub const SCEPMessageClaimChallengeAnswer: X509SCEPMessageType = 41i32;
pub const SCEPMessageGetCRL: X509SCEPMessageType = 22i32;
pub const SCEPMessageGetCert: X509SCEPMessageType = 21i32;
pub const SCEPMessageGetCertInitial: X509SCEPMessageType = 20i32;
pub const SCEPMessagePKCSRequest: X509SCEPMessageType = 19i32;
pub const SCEPMessageUnknown: X509SCEPMessageType = -1i32;
pub const SCEPProcessDefault: X509SCEPProcessMessageFlags = 0i32;
pub const SCEPProcessSkipCertInstall: X509SCEPProcessMessageFlags = 1i32;
pub const SETUP_ATTEMPT_VROOT_CREATE: u32 = 128u32;
pub const SETUP_CLIENT_FLAG: u32 = 2u32;
pub const SETUP_CREATEDB_FLAG: u32 = 64u32;
pub const SETUP_DCOM_SECURITY_UPDATED_FLAG: u32 = 8192u32;
pub const SETUP_DENIED_FLAG: u32 = 32u32;
pub const SETUP_FORCECRL_FLAG: u32 = 256u32;
pub const SETUP_ONLINE_FLAG: u32 = 16u32;
pub const SETUP_REQUEST_FLAG: u32 = 8u32;
pub const SETUP_SECURITY_CHANGED: u32 = 4096u32;
pub const SETUP_SERVER_FLAG: u32 = 1u32;
pub const SETUP_SERVER_IS_UP_TO_DATE_FLAG: u32 = 16384u32;
pub const SETUP_SERVER_UPGRADED_FLAG: u32 = 1024u32;
pub const SETUP_SUSPEND_FLAG: u32 = 4u32;
pub const SETUP_UPDATE_CAOBJECT_SVRTYPE: u32 = 512u32;
pub const SETUP_W2K_SECURITY_NOT_UPGRADED_FLAG: u32 = 2048u32;
pub const SKIHashCapiSha1: KeyIdentifierHashAlgorithm = 2i32;
pub const SKIHashDefault: KeyIdentifierHashAlgorithm = 0i32;
pub const SKIHashHPKP: KeyIdentifierHashAlgorithm = 5i32;
pub const SKIHashSha1: KeyIdentifierHashAlgorithm = 1i32;
pub const SKIHashSha256: KeyIdentifierHashAlgorithm = 3i32;
pub const SelectedNo: EnrollmentSelectionStatus = 0i32;
pub const SelectedYes: EnrollmentSelectionStatus = 1i32;
pub const SubjectAlternativeNameEnrolleeSupplies: X509CertificateTemplateSubjectNameFlag = 65536i32;
pub const SubjectAlternativeNameRequireDNS: X509CertificateTemplateSubjectNameFlag = 134217728i32;
pub const SubjectAlternativeNameRequireDirectoryGUID: X509CertificateTemplateSubjectNameFlag = 16777216i32;
pub const SubjectAlternativeNameRequireDomainDNS: X509CertificateTemplateSubjectNameFlag = 4194304i32;
pub const SubjectAlternativeNameRequireEmail: X509CertificateTemplateSubjectNameFlag = 67108864i32;
pub const SubjectAlternativeNameRequireSPN: X509CertificateTemplateSubjectNameFlag = 8388608i32;
pub const SubjectAlternativeNameRequireUPN: X509CertificateTemplateSubjectNameFlag = 33554432i32;
pub const SubjectNameAndAlternativeNameOldCertSupplies: X509CertificateTemplateSubjectNameFlag = 8i32;
pub const SubjectNameEnrolleeSupplies: X509CertificateTemplateSubjectNameFlag = 1i32;
pub const SubjectNameRequireCommonName: X509CertificateTemplateSubjectNameFlag = 1073741824i32;
pub const SubjectNameRequireDNS: X509CertificateTemplateSubjectNameFlag = 268435456i32;
pub const SubjectNameRequireDirectoryPath: X509CertificateTemplateSubjectNameFlag = -2147483648i32;
pub const SubjectNameRequireEmail: X509CertificateTemplateSubjectNameFlag = 536870912i32;
pub const TP_MACHINEPOLICY: u32 = 1u32;
pub const TemplatePropAsymmetricAlgorithm: EnrollmentTemplateProperty = 18i32;
pub const TemplatePropCertificatePolicies: EnrollmentTemplateProperty = 16i32;
pub const TemplatePropCommonName: EnrollmentTemplateProperty = 1i32;
pub const TemplatePropCryptoProviders: EnrollmentTemplateProperty = 4i32;
pub const TemplatePropDescription: EnrollmentTemplateProperty = 6i32;
pub const TemplatePropEKUs: EnrollmentTemplateProperty = 3i32;
pub const TemplatePropEnrollmentFlags: EnrollmentTemplateProperty = 24i32;
pub const TemplatePropExtensions: EnrollmentTemplateProperty = 29i32;
pub const TemplatePropFriendlyName: EnrollmentTemplateProperty = 2i32;
pub const TemplatePropGeneralFlags: EnrollmentTemplateProperty = 27i32;
pub const TemplatePropHashAlgorithm: EnrollmentTemplateProperty = 22i32;
pub const TemplatePropKeySecurityDescriptor: EnrollmentTemplateProperty = 19i32;
pub const TemplatePropKeySpec: EnrollmentTemplateProperty = 7i32;
pub const TemplatePropKeyUsage: EnrollmentTemplateProperty = 23i32;
pub const TemplatePropMajorRevision: EnrollmentTemplateProperty = 5i32;
pub const TemplatePropMinimumKeySize: EnrollmentTemplateProperty = 11i32;
pub const TemplatePropMinorRevision: EnrollmentTemplateProperty = 9i32;
pub const TemplatePropOID: EnrollmentTemplateProperty = 12i32;
pub const TemplatePropPrivateKeyFlags: EnrollmentTemplateProperty = 26i32;
pub const TemplatePropRACertificatePolicies: EnrollmentTemplateProperty = 14i32;
pub const TemplatePropRAEKUs: EnrollmentTemplateProperty = 15i32;
pub const TemplatePropRASignatureCount: EnrollmentTemplateProperty = 10i32;
pub const TemplatePropRenewalPeriod: EnrollmentTemplateProperty = 31i32;
pub const TemplatePropSchemaVersion: EnrollmentTemplateProperty = 8i32;
pub const TemplatePropSecurityDescriptor: EnrollmentTemplateProperty = 28i32;
pub const TemplatePropSubjectNameFlags: EnrollmentTemplateProperty = 25i32;
pub const TemplatePropSupersede: EnrollmentTemplateProperty = 13i32;
pub const TemplatePropSymmetricAlgorithm: EnrollmentTemplateProperty = 20i32;
pub const TemplatePropSymmetricKeyLength: EnrollmentTemplateProperty = 21i32;
pub const TemplatePropV1ApplicationPolicy: EnrollmentTemplateProperty = 17i32;
pub const TemplatePropValidityPeriod: EnrollmentTemplateProperty = 30i32;
pub const TypeAny: X509RequestType = 0i32;
pub const TypeCertificate: X509RequestType = 4i32;
pub const TypeCmc: X509RequestType = 3i32;
pub const TypePkcs10: X509RequestType = 1i32;
pub const TypePkcs7: X509RequestType = 2i32;
pub const VR_INSTANT_BAD: u32 = 2u32;
pub const VR_INSTANT_OK: u32 = 1u32;
pub const VR_PENDING: u32 = 0u32;
pub const VerifyAllowUI: X509PrivateKeyVerify = 4i32;
pub const VerifyNone: X509PrivateKeyVerify = 0i32;
pub const VerifySilent: X509PrivateKeyVerify = 1i32;
pub const VerifySmartCardNone: X509PrivateKeyVerify = 2i32;
pub const VerifySmartCardSilent: X509PrivateKeyVerify = 3i32;
pub const X509AuthAnonymous: X509EnrollmentAuthFlags = 1i32;
pub const X509AuthCertificate: X509EnrollmentAuthFlags = 8i32;
pub const X509AuthKerberos: X509EnrollmentAuthFlags = 2i32;
pub const X509AuthNone: X509EnrollmentAuthFlags = 0i32;
pub const X509AuthUsername: X509EnrollmentAuthFlags = 4i32;
pub const XCN_AT_KEYEXCHANGE: X509KeySpec = 1i32;
pub const XCN_AT_NONE: X509KeySpec = 0i32;
pub const XCN_AT_SIGNATURE: X509KeySpec = 2i32;
pub const XCN_BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE: AlgorithmType = 3i32;
pub const XCN_BCRYPT_CIPHER_INTERFACE: AlgorithmType = 1i32;
pub const XCN_BCRYPT_HASH_INTERFACE: AlgorithmType = 2i32;
pub const XCN_BCRYPT_KEY_DERIVATION_INTERFACE: AlgorithmType = 7i32;
pub const XCN_BCRYPT_RNG_INTERFACE: AlgorithmType = 6i32;
pub const XCN_BCRYPT_SECRET_AGREEMENT_INTERFACE: AlgorithmType = 4i32;
pub const XCN_BCRYPT_SIGNATURE_INTERFACE: AlgorithmType = 5i32;
pub const XCN_BCRYPT_UNKNOWN_INTERFACE: AlgorithmType = 0i32;
pub const XCN_CERT_ACCESS_STATE_PROP_ID: CERTENROLL_PROPERTYID = 14i32;
pub const XCN_CERT_AIA_URL_RETRIEVED_PROP_ID: CERTENROLL_PROPERTYID = 67i32;
pub const XCN_CERT_ALT_NAME_DIRECTORY_NAME: AlternativeNameType = 5i32;
pub const XCN_CERT_ALT_NAME_DNS_NAME: AlternativeNameType = 3i32;
pub const XCN_CERT_ALT_NAME_EDI_PARTY_NAME: AlternativeNameType = 6i32;
pub const XCN_CERT_ALT_NAME_GUID: AlternativeNameType = 10i32;
pub const XCN_CERT_ALT_NAME_IP_ADDRESS: AlternativeNameType = 8i32;
pub const XCN_CERT_ALT_NAME_OTHER_NAME: AlternativeNameType = 1i32;
pub const XCN_CERT_ALT_NAME_REGISTERED_ID: AlternativeNameType = 9i32;
pub const XCN_CERT_ALT_NAME_RFC822_NAME: AlternativeNameType = 2i32;
pub const XCN_CERT_ALT_NAME_UNKNOWN: AlternativeNameType = 0i32;
pub const XCN_CERT_ALT_NAME_URL: AlternativeNameType = 7i32;
pub const XCN_CERT_ALT_NAME_USER_PRINCIPLE_NAME: AlternativeNameType = 11i32;
pub const XCN_CERT_ALT_NAME_X400_ADDRESS: AlternativeNameType = 4i32;
pub const XCN_CERT_ARCHIVED_KEY_HASH_PROP_ID: CERTENROLL_PROPERTYID = 65i32;
pub const XCN_CERT_ARCHIVED_PROP_ID: CERTENROLL_PROPERTYID = 19i32;
pub const XCN_CERT_AUTHORITY_INFO_ACCESS_PROP_ID: CERTENROLL_PROPERTYID = 68i32;
pub const XCN_CERT_AUTH_ROOT_SHA256_HASH_PROP_ID: CERTENROLL_PROPERTYID = 98i32;
pub const XCN_CERT_AUTO_ENROLL_PROP_ID: CERTENROLL_PROPERTYID = 21i32;
pub const XCN_CERT_AUTO_ENROLL_RETRY_PROP_ID: CERTENROLL_PROPERTYID = 66i32;
pub const XCN_CERT_BACKED_UP_PROP_ID: CERTENROLL_PROPERTYID = 69i32;
pub const XCN_CERT_CA_DISABLE_CRL_PROP_ID: CERTENROLL_PROPERTYID = 82i32;
pub const XCN_CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: CERTENROLL_PROPERTYID = 81i32;
pub const XCN_CERT_CEP_PROP_ID: CERTENROLL_PROPERTYID = 87i32;
pub const XCN_CERT_CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID: CERTENROLL_PROPERTYID = 127i32;
pub const XCN_CERT_CLR_DELETE_KEY_PROP_ID: CERTENROLL_PROPERTYID = 125i32;
pub const XCN_CERT_CRL_SIGN_KEY_USAGE: X509KeyUsageFlags = 2i32;
pub const XCN_CERT_CROSS_CERT_DIST_POINTS_PROP_ID: CERTENROLL_PROPERTYID = 23i32;
pub const XCN_CERT_CTL_USAGE_PROP_ID: CERTENROLL_PROPERTYID = 9i32;
pub const XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE: X509KeyUsageFlags = 16i32;
pub const XCN_CERT_DATE_STAMP_PROP_ID: CERTENROLL_PROPERTYID = 27i32;
pub const XCN_CERT_DECIPHER_ONLY_KEY_USAGE: X509KeyUsageFlags = 32768i32;
pub const XCN_CERT_DESCRIPTION_PROP_ID: CERTENROLL_PROPERTYID = 13i32;
pub const XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE: X509KeyUsageFlags = 128i32;
pub const XCN_CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID: CERTENROLL_PROPERTYID = 122i32;
pub const XCN_CERT_DISALLOWED_FILETIME_PROP_ID: CERTENROLL_PROPERTYID = 104i32;
pub const XCN_CERT_EFS_PROP_ID: CERTENROLL_PROPERTYID = 17i32;
pub const XCN_CERT_ENCIPHER_ONLY_KEY_USAGE: X509KeyUsageFlags = 1i32;
pub const XCN_CERT_ENHKEY_USAGE_PROP_ID: CERTENROLL_PROPERTYID = 9i32;
pub const XCN_CERT_ENROLLMENT_PROP_ID: CERTENROLL_PROPERTYID = 26i32;
pub const XCN_CERT_EXTENDED_ERROR_INFO_PROP_ID: CERTENROLL_PROPERTYID = 30i32;
pub const XCN_CERT_FIRST_RESERVED_PROP_ID: CERTENROLL_PROPERTYID = 129i32;
pub const XCN_CERT_FIRST_USER_PROP_ID: CERTENROLL_PROPERTYID = 32768i32;
pub const XCN_CERT_FORTEZZA_DATA_PROP_ID: CERTENROLL_PROPERTYID = 18i32;
pub const XCN_CERT_FRIENDLY_NAME_PROP_ID: CERTENROLL_PROPERTYID = 11i32;
pub const XCN_CERT_HASH_PROP_ID: CERTENROLL_PROPERTYID = 3i32;
pub const XCN_CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID: CERTENROLL_PROPERTYID = 79i32;
pub const XCN_CERT_HCRYPTPROV_TRANSFER_PROP_ID: CERTENROLL_PROPERTYID = 100i32;
pub const XCN_CERT_IE30_RESERVED_PROP_ID: CERTENROLL_PROPERTYID = 7i32;
pub const XCN_CERT_ISOLATED_KEY_PROP_ID: CERTENROLL_PROPERTYID = 118i32;
pub const XCN_CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: CERTENROLL_PROPERTYID = 96i32;
pub const XCN_CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID: CERTENROLL_PROPERTYID = 95i32;
pub const XCN_CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID: CERTENROLL_PROPERTYID = 24i32;
pub const XCN_CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID: CERTENROLL_PROPERTYID = 94i32;
pub const XCN_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: CERTENROLL_PROPERTYID = 28i32;
pub const XCN_CERT_KEY_AGREEMENT_KEY_USAGE: X509KeyUsageFlags = 8i32;
pub const XCN_CERT_KEY_CERT_SIGN_KEY_USAGE: X509KeyUsageFlags = 4i32;
pub const XCN_CERT_KEY_CLASSIFICATION_PROP_ID: CERTENROLL_PROPERTYID = 120i32;
pub const XCN_CERT_KEY_CONTEXT_PROP_ID: CERTENROLL_PROPERTYID = 5i32;
pub const XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE: X509KeyUsageFlags = 32i32;
pub const XCN_CERT_KEY_IDENTIFIER_PROP_ID: CERTENROLL_PROPERTYID = 20i32;
pub const XCN_CERT_KEY_PROV_HANDLE_PROP_ID: CERTENROLL_PROPERTYID = 1i32;
pub const XCN_CERT_KEY_PROV_INFO_PROP_ID: CERTENROLL_PROPERTYID = 2i32;
pub const XCN_CERT_KEY_REPAIR_ATTEMPTED_PROP_ID: CERTENROLL_PROPERTYID = 103i32;
pub const XCN_CERT_KEY_SPEC_PROP_ID: CERTENROLL_PROPERTYID = 6i32;
pub const XCN_CERT_LAST_RESERVED_PROP_ID: CERTENROLL_PROPERTYID = 32767i32;
pub const XCN_CERT_LAST_USER_PROP_ID: CERTENROLL_PROPERTYID = 65535i32;
pub const XCN_CERT_MD5_HASH_PROP_ID: CERTENROLL_PROPERTYID = 4i32;
pub const XCN_CERT_NAME_STR_AMBIGUOUS_SEPARATOR_FLAGS: X500NameFlags = 1275068416i32;
pub const XCN_CERT_NAME_STR_COMMA_FLAG: X500NameFlags = 67108864i32;
pub const XCN_CERT_NAME_STR_CRLF_FLAG: X500NameFlags = 134217728i32;
pub const XCN_CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG: X500NameFlags = 65536i32;
pub const XCN_CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG: X500NameFlags = 1048576i32;
pub const XCN_CERT_NAME_STR_DS_ESCAPED: X500NameFlags = 8388608i32;
pub const XCN_CERT_NAME_STR_ENABLE_PUNYCODE_FLAG: X500NameFlags = 2097152i32;
pub const XCN_CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG: X500NameFlags = 131072i32;
pub const XCN_CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG: X500NameFlags = 262144i32;
pub const XCN_CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG: X500NameFlags = 524288i32;
pub const XCN_CERT_NAME_STR_FORWARD_FLAG: X500NameFlags = 16777216i32;
pub const XCN_CERT_NAME_STR_NONE: X500NameFlags = 0i32;
pub const XCN_CERT_NAME_STR_NO_PLUS_FLAG: X500NameFlags = 536870912i32;
pub const XCN_CERT_NAME_STR_NO_QUOTING_FLAG: X500NameFlags = 268435456i32;
pub const XCN_CERT_NAME_STR_REVERSE_FLAG: X500NameFlags = 33554432i32;
pub const XCN_CERT_NAME_STR_SEMICOLON_FLAG: X500NameFlags = 1073741824i32;
pub const XCN_CERT_NCRYPT_KEY_HANDLE_PROP_ID: CERTENROLL_PROPERTYID = 78i32;
pub const XCN_CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID: CERTENROLL_PROPERTYID = 99i32;
pub const XCN_CERT_NEW_KEY_PROP_ID: CERTENROLL_PROPERTYID = 74i32;
pub const XCN_CERT_NEXT_UPDATE_LOCATION_PROP_ID: CERTENROLL_PROPERTYID = 10i32;
pub const XCN_CERT_NONCOMPLIANT_ROOT_URL_PROP_ID: CERTENROLL_PROPERTYID = 123i32;
pub const XCN_CERT_NON_REPUDIATION_KEY_USAGE: X509KeyUsageFlags = 64i32;
pub const XCN_CERT_NOT_BEFORE_FILETIME_PROP_ID: CERTENROLL_PROPERTYID = 126i32;
pub const XCN_CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID: CERTENROLL_PROPERTYID = 77i32;
pub const XCN_CERT_NO_EXPIRE_NOTIFICATION_PROP_ID: CERTENROLL_PROPERTYID = 97i32;
pub const XCN_CERT_NO_KEY_USAGE: X509KeyUsageFlags = 0i32;
pub const XCN_CERT_OCSP_CACHE_PREFIX_PROP_ID: CERTENROLL_PROPERTYID = 75i32;
pub const XCN_CERT_OCSP_RESPONSE_PROP_ID: CERTENROLL_PROPERTYID = 70i32;
pub const XCN_CERT_OFFLINE_CRL_SIGN_KEY_USAGE: X509KeyUsageFlags = 2i32;
pub const XCN_CERT_OID_NAME_STR: X500NameFlags = 2i32;
pub const XCN_CERT_PIN_SHA256_HASH_PROP_ID: CERTENROLL_PROPERTYID = 124i32;
pub const XCN_CERT_PUBKEY_ALG_PARA_PROP_ID: CERTENROLL_PROPERTYID = 22i32;
pub const XCN_CERT_PUBKEY_HASH_RESERVED_PROP_ID: CERTENROLL_PROPERTYID = 8i32;
pub const XCN_CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: CERTENROLL_PROPERTYID = 93i32;
pub const XCN_CERT_PVK_FILE_PROP_ID: CERTENROLL_PROPERTYID = 12i32;
pub const XCN_CERT_RENEWAL_PROP_ID: CERTENROLL_PROPERTYID = 64i32;
pub const XCN_CERT_REQUEST_ORIGINATOR_PROP_ID: CERTENROLL_PROPERTYID = 71i32;
pub const XCN_CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID: CERTENROLL_PROPERTYID = 83i32;
pub const XCN_CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID: CERTENROLL_PROPERTYID = 105i32;
pub const XCN_CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID: CERTENROLL_PROPERTYID = 84i32;
pub const XCN_CERT_SCARD_PIN_ID_PROP_ID: CERTENROLL_PROPERTYID = 90i32;
pub const XCN_CERT_SCARD_PIN_INFO_PROP_ID: CERTENROLL_PROPERTYID = 91i32;
pub const XCN_CERT_SCEP_CA_CERT_PROP_ID: CERTENROLL_PROPERTYID = 111i32;
pub const XCN_CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID: CERTENROLL_PROPERTYID = 114i32;
pub const XCN_CERT_SCEP_FLAGS_PROP_ID: CERTENROLL_PROPERTYID = 115i32;
pub const XCN_CERT_SCEP_GUID_PROP_ID: CERTENROLL_PROPERTYID = 116i32;
pub const XCN_CERT_SCEP_NONCE_PROP_ID: CERTENROLL_PROPERTYID = 113i32;
pub const XCN_CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID: CERTENROLL_PROPERTYID = 110i32;
pub const XCN_CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID: CERTENROLL_PROPERTYID = 109i32;
pub const XCN_CERT_SCEP_SERVER_CERTS_PROP_ID: CERTENROLL_PROPERTYID = 108i32;
pub const XCN_CERT_SCEP_SIGNER_CERT_PROP_ID: CERTENROLL_PROPERTYID = 112i32;
pub const XCN_CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID: CERTENROLL_PROPERTYID = 102i32;
pub const XCN_CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID: CERTENROLL_PROPERTYID = 117i32;
pub const XCN_CERT_SERIAL_CHAIN_PROP_ID: CERTENROLL_PROPERTYID = 119i32;
pub const XCN_CERT_SHA1_HASH_PROP_ID: CERTENROLL_PROPERTYID = 3i32;
pub const XCN_CERT_SHA256_HASH_PROP_ID: CERTENROLL_PROPERTYID = 107i32;
pub const XCN_CERT_SIGNATURE_HASH_PROP_ID: CERTENROLL_PROPERTYID = 15i32;
pub const XCN_CERT_SIGN_HASH_CNG_ALG_PROP_ID: CERTENROLL_PROPERTYID = 89i32;
pub const XCN_CERT_SIMPLE_NAME_STR: X500NameFlags = 1i32;
pub const XCN_CERT_SMART_CARD_DATA_PROP_ID: CERTENROLL_PROPERTYID = 16i32;
pub const XCN_CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID: CERTENROLL_PROPERTYID = 106i32;
pub const XCN_CERT_SMART_CARD_READER_PROP_ID: CERTENROLL_PROPERTYID = 101i32;
pub const XCN_CERT_SMART_CARD_ROOT_INFO_PROP_ID: CERTENROLL_PROPERTYID = 76i32;
pub const XCN_CERT_SOURCE_LOCATION_PROP_ID: CERTENROLL_PROPERTYID = 72i32;
pub const XCN_CERT_SOURCE_URL_PROP_ID: CERTENROLL_PROPERTYID = 73i32;
pub const XCN_CERT_STORE_LOCALIZED_NAME_PROP_ID: CERTENROLL_PROPERTYID = 4096i32;
pub const XCN_CERT_SUBJECT_DISABLE_CRL_PROP_ID: CERTENROLL_PROPERTYID = 86i32;
pub const XCN_CERT_SUBJECT_INFO_ACCESS_PROP_ID: CERTENROLL_PROPERTYID = 80i32;
pub const XCN_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: CERTENROLL_PROPERTYID = 29i32;
pub const XCN_CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: CERTENROLL_PROPERTYID = 85i32;
pub const XCN_CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID: CERTENROLL_PROPERTYID = 25i32;
pub const XCN_CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID: CERTENROLL_PROPERTYID = 92i32;
pub const XCN_CERT_X500_NAME_STR: X500NameFlags = 3i32;
pub const XCN_CERT_XML_NAME_STR: X500NameFlags = 4i32;
pub const XCN_CRL_REASON_AA_COMPROMISE: CRLRevocationReason = 10i32;
pub const XCN_CRL_REASON_AFFILIATION_CHANGED: CRLRevocationReason = 3i32;
pub const XCN_CRL_REASON_CA_COMPROMISE: CRLRevocationReason = 2i32;
pub const XCN_CRL_REASON_CERTIFICATE_HOLD: CRLRevocationReason = 6i32;
pub const XCN_CRL_REASON_CESSATION_OF_OPERATION: CRLRevocationReason = 5i32;
pub const XCN_CRL_REASON_KEY_COMPROMISE: CRLRevocationReason = 1i32;
pub const XCN_CRL_REASON_PRIVILEGE_WITHDRAWN: CRLRevocationReason = 9i32;
pub const XCN_CRL_REASON_REMOVE_FROM_CRL: CRLRevocationReason = 8i32;
pub const XCN_CRL_REASON_SUPERSEDED: CRLRevocationReason = 4i32;
pub const XCN_CRL_REASON_UNSPECIFIED: CRLRevocationReason = 0i32;
pub const XCN_CRYPT_ANY_GROUP_ID: ObjectIdGroupId = 0i32;
pub const XCN_CRYPT_ENCRYPT_ALG_OID_GROUP_ID: ObjectIdGroupId = 2i32;
pub const XCN_CRYPT_ENHKEY_USAGE_OID_GROUP_ID: ObjectIdGroupId = 7i32;
pub const XCN_CRYPT_EXT_OR_ATTR_OID_GROUP_ID: ObjectIdGroupId = 6i32;
pub const XCN_CRYPT_FIRST_ALG_OID_GROUP_ID: ObjectIdGroupId = 1i32;
pub const XCN_CRYPT_GROUP_ID_MASK: ObjectIdGroupId = 65535i32;
pub const XCN_CRYPT_HASH_ALG_OID_GROUP_ID: ObjectIdGroupId = 1i32;
pub const XCN_CRYPT_KDF_OID_GROUP_ID: ObjectIdGroupId = 10i32;
pub const XCN_CRYPT_KEY_LENGTH_MASK: ObjectIdGroupId = 268369920i32;
pub const XCN_CRYPT_LAST_ALG_OID_GROUP_ID: ObjectIdGroupId = 4i32;
pub const XCN_CRYPT_LAST_OID_GROUP_ID: ObjectIdGroupId = 10i32;
pub const XCN_CRYPT_OID_DISABLE_SEARCH_DS_FLAG: ObjectIdGroupId = -2147483648i32;
pub const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK: ObjectIdGroupId = 268369920i32;
pub const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT: ObjectIdGroupId = 16i32;
pub const XCN_CRYPT_OID_INFO_PUBKEY_ANY: ObjectIdPublicKeyFlags = 0i32;
pub const XCN_CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG: ObjectIdPublicKeyFlags = 1073741824i32;
pub const XCN_CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG: ObjectIdPublicKeyFlags = -2147483648i32;
pub const XCN_CRYPT_OID_PREFER_CNG_ALGID_FLAG: ObjectIdGroupId = 1073741824i32;
pub const XCN_CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG: X509KeyParametersExportType = 536870912i32;
pub const XCN_CRYPT_OID_USE_CURVE_NONE: X509KeyParametersExportType = 0i32;
pub const XCN_CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG: X509KeyParametersExportType = 268435456i32;
pub const XCN_CRYPT_POLICY_OID_GROUP_ID: ObjectIdGroupId = 8i32;
pub const XCN_CRYPT_PUBKEY_ALG_OID_GROUP_ID: ObjectIdGroupId = 3i32;
pub const XCN_CRYPT_RDN_ATTR_OID_GROUP_ID: ObjectIdGroupId = 5i32;
pub const XCN_CRYPT_SIGN_ALG_OID_GROUP_ID: ObjectIdGroupId = 4i32;
pub const XCN_CRYPT_STRING_ANY: EncodingType = 7i32;
pub const XCN_CRYPT_STRING_BASE64: EncodingType = 1i32;
pub const XCN_CRYPT_STRING_BASE64HEADER: EncodingType = 0i32;
pub const XCN_CRYPT_STRING_BASE64REQUESTHEADER: EncodingType = 3i32;
pub const XCN_CRYPT_STRING_BASE64URI: EncodingType = 13i32;
pub const XCN_CRYPT_STRING_BASE64X509CRLHEADER: EncodingType = 9i32;
pub const XCN_CRYPT_STRING_BASE64_ANY: EncodingType = 6i32;
pub const XCN_CRYPT_STRING_BINARY: EncodingType = 2i32;
pub const XCN_CRYPT_STRING_CHAIN: EncodingType = 256i32;
pub const XCN_CRYPT_STRING_ENCODEMASK: EncodingType = 255i32;
pub const XCN_CRYPT_STRING_HASHDATA: EncodingType = 268435456i32;
pub const XCN_CRYPT_STRING_HEX: EncodingType = 4i32;
pub const XCN_CRYPT_STRING_HEXADDR: EncodingType = 10i32;
pub const XCN_CRYPT_STRING_HEXASCII: EncodingType = 5i32;
pub const XCN_CRYPT_STRING_HEXASCIIADDR: EncodingType = 11i32;
pub const XCN_CRYPT_STRING_HEXRAW: EncodingType = 12i32;
pub const XCN_CRYPT_STRING_HEX_ANY: EncodingType = 8i32;
pub const XCN_CRYPT_STRING_NOCR: EncodingType = -2147483648i32;
pub const XCN_CRYPT_STRING_NOCRLF: EncodingType = 1073741824i32;
pub const XCN_CRYPT_STRING_PERCENTESCAPE: EncodingType = 134217728i32;
pub const XCN_CRYPT_STRING_STRICT: EncodingType = 536870912i32;
pub const XCN_CRYPT_STRING_TEXT: EncodingType = 512i32;
pub const XCN_CRYPT_TEMPLATE_OID_GROUP_ID: ObjectIdGroupId = 9i32;
pub const XCN_NCRYPT_ALLOW_ALL_USAGES: X509PrivateKeyUsageFlags = 16777215i32;
pub const XCN_NCRYPT_ALLOW_ARCHIVING_FLAG: X509PrivateKeyExportFlags = 4i32;
pub const XCN_NCRYPT_ALLOW_DECRYPT_FLAG: X509PrivateKeyUsageFlags = 1i32;
pub const XCN_NCRYPT_ALLOW_EXPORT_FLAG: X509PrivateKeyExportFlags = 1i32;
pub const XCN_NCRYPT_ALLOW_EXPORT_NONE: X509PrivateKeyExportFlags = 0i32;
pub const XCN_NCRYPT_ALLOW_KEY_AGREEMENT_FLAG: X509PrivateKeyUsageFlags = 4i32;
pub const XCN_NCRYPT_ALLOW_KEY_IMPORT_FLAG: X509PrivateKeyUsageFlags = 8i32;
pub const XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG: X509PrivateKeyExportFlags = 8i32;
pub const XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG: X509PrivateKeyExportFlags = 2i32;
pub const XCN_NCRYPT_ALLOW_SIGNING_FLAG: X509PrivateKeyUsageFlags = 2i32;
pub const XCN_NCRYPT_ALLOW_USAGES_NONE: X509PrivateKeyUsageFlags = 0i32;
pub const XCN_NCRYPT_ANY_ASYMMETRIC_OPERATION: AlgorithmOperationFlags = 28i32;
pub const XCN_NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION: AlgorithmOperationFlags = 4i32;
pub const XCN_NCRYPT_CIPHER_OPERATION: AlgorithmOperationFlags = 1i32;
pub const XCN_NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT: KeyAttestationClaimType = 3i32;
pub const XCN_NCRYPT_CLAIM_AUTHORITY_ONLY: KeyAttestationClaimType = 1i32;
pub const XCN_NCRYPT_CLAIM_NONE: KeyAttestationClaimType = 0i32;
pub const XCN_NCRYPT_CLAIM_SUBJECT_ONLY: KeyAttestationClaimType = 2i32;
pub const XCN_NCRYPT_CLAIM_UNKNOWN: KeyAttestationClaimType = 4096i32;
pub const XCN_NCRYPT_EXACT_MATCH_OPERATION: AlgorithmOperationFlags = 8388608i32;
pub const XCN_NCRYPT_HASH_OPERATION: AlgorithmOperationFlags = 2i32;
pub const XCN_NCRYPT_KEY_DERIVATION_OPERATION: AlgorithmOperationFlags = 64i32;
pub const XCN_NCRYPT_NO_OPERATION: AlgorithmOperationFlags = 0i32;
pub const XCN_NCRYPT_PCP_ENCRYPTION_KEY: X509HardwareKeyUsageFlags = 2i32;
pub const XCN_NCRYPT_PCP_GENERIC_KEY: X509HardwareKeyUsageFlags = 3i32;
pub const XCN_NCRYPT_PCP_IDENTITY_KEY: X509HardwareKeyUsageFlags = 8i32;
pub const XCN_NCRYPT_PCP_NONE: X509HardwareKeyUsageFlags = 0i32;
pub const XCN_NCRYPT_PCP_SIGNATURE_KEY: X509HardwareKeyUsageFlags = 1i32;
pub const XCN_NCRYPT_PCP_STORAGE_KEY: X509HardwareKeyUsageFlags = 4i32;
pub const XCN_NCRYPT_PREFERENCE_MASK_OPERATION: AlgorithmOperationFlags = 14680064i32;
pub const XCN_NCRYPT_PREFER_NON_SIGNATURE_OPERATION: AlgorithmOperationFlags = 4194304i32;
pub const XCN_NCRYPT_PREFER_SIGNATURE_ONLY_OPERATION: AlgorithmOperationFlags = 2097152i32;
pub const XCN_NCRYPT_RNG_OPERATION: AlgorithmOperationFlags = 32i32;
pub const XCN_NCRYPT_SECRET_AGREEMENT_OPERATION: AlgorithmOperationFlags = 8i32;
pub const XCN_NCRYPT_SIGNATURE_OPERATION: AlgorithmOperationFlags = 16i32;
pub const XCN_NCRYPT_TPM12_PROVIDER: X509HardwareKeyUsageFlags = 65536i32;
pub const XCN_NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG: X509PrivateKeyProtection = 8i32;
pub const XCN_NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG: X509PrivateKeyProtection = 4i32;
pub const XCN_NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG: X509PrivateKeyProtection = 2i32;
pub const XCN_NCRYPT_UI_NO_PROTECTION_FLAG: X509PrivateKeyProtection = 0i32;
pub const XCN_NCRYPT_UI_PROTECT_KEY_FLAG: X509PrivateKeyProtection = 1i32;
pub const XCN_OIDVerisign_FailInfo: CERTENROLL_OBJECTID = 431i32;
pub const XCN_OIDVerisign_MessageType: CERTENROLL_OBJECTID = 429i32;
pub const XCN_OIDVerisign_PkiStatus: CERTENROLL_OBJECTID = 430i32;
pub const XCN_OIDVerisign_RecipientNonce: CERTENROLL_OBJECTID = 433i32;
pub const XCN_OIDVerisign_SenderNonce: CERTENROLL_OBJECTID = 432i32;
pub const XCN_OIDVerisign_TransactionID: CERTENROLL_OBJECTID = 434i32;
pub const XCN_OID_ANSI_X942: CERTENROLL_OBJECTID = 53i32;
pub const XCN_OID_ANSI_X942_DH: CERTENROLL_OBJECTID = 54i32;
pub const XCN_OID_ANY_APPLICATION_POLICY: CERTENROLL_OBJECTID = 216i32;
pub const XCN_OID_ANY_CERT_POLICY: CERTENROLL_OBJECTID = 180i32;
pub const XCN_OID_ANY_ENHANCED_KEY_USAGE: CERTENROLL_OBJECTID = 352i32;
pub const XCN_OID_APPLICATION_CERT_POLICIES: CERTENROLL_OBJECTID = 229i32;
pub const XCN_OID_APPLICATION_POLICY_CONSTRAINTS: CERTENROLL_OBJECTID = 231i32;
pub const XCN_OID_APPLICATION_POLICY_MAPPINGS: CERTENROLL_OBJECTID = 230i32;
pub const XCN_OID_ARCHIVED_KEY_ATTR: CERTENROLL_OBJECTID = 232i32;
pub const XCN_OID_ARCHIVED_KEY_CERT_HASH: CERTENROLL_OBJECTID = 235i32;
pub const XCN_OID_ATTR_SUPPORTED_ALGORITHMS: CERTENROLL_OBJECTID = 355i32;
pub const XCN_OID_ATTR_TPM_SECURITY_ASSERTIONS: CERTENROLL_OBJECTID = 356i32;
pub const XCN_OID_ATTR_TPM_SPECIFICATION: CERTENROLL_OBJECTID = 357i32;
pub const XCN_OID_AUTHORITY_INFO_ACCESS: CERTENROLL_OBJECTID = 204i32;
pub const XCN_OID_AUTHORITY_KEY_IDENTIFIER: CERTENROLL_OBJECTID = 169i32;
pub const XCN_OID_AUTHORITY_KEY_IDENTIFIER2: CERTENROLL_OBJECTID = 181i32;
pub const XCN_OID_AUTHORITY_REVOCATION_LIST: CERTENROLL_OBJECTID = 156i32;
pub const XCN_OID_AUTO_ENROLL_CTL_USAGE: CERTENROLL_OBJECTID = 217i32;
pub const XCN_OID_BACKGROUND_OTHER_LOGOTYPE: CERTENROLL_OBJECTID = 327i32;
pub const XCN_OID_BASIC_CONSTRAINTS: CERTENROLL_OBJECTID = 175i32;
pub const XCN_OID_BASIC_CONSTRAINTS2: CERTENROLL_OBJECTID = 178i32;
pub const XCN_OID_BIOMETRIC_EXT: CERTENROLL_OBJECTID = 205i32;
pub const XCN_OID_BUSINESS_CATEGORY: CERTENROLL_OBJECTID = 133i32;
pub const XCN_OID_CA_CERTIFICATE: CERTENROLL_OBJECTID = 155i32;
pub const XCN_OID_CERTIFICATE_REVOCATION_LIST: CERTENROLL_OBJECTID = 157i32;
pub const XCN_OID_CERTIFICATE_TEMPLATE: CERTENROLL_OBJECTID = 226i32;
pub const XCN_OID_CERTSRV_CA_VERSION: CERTENROLL_OBJECTID = 220i32;
pub const XCN_OID_CERTSRV_CROSSCA_VERSION: CERTENROLL_OBJECTID = 240i32;
pub const XCN_OID_CERTSRV_PREVIOUS_CERT_HASH: CERTENROLL_OBJECTID = 221i32;
pub const XCN_OID_CERT_DISALLOWED_FILETIME_PROP_ID: CERTENROLL_OBJECTID = 358i32;
pub const XCN_OID_CERT_EXTENSIONS: CERTENROLL_OBJECTID = 207i32;
pub const XCN_OID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: CERTENROLL_OBJECTID = 339i32;
pub const XCN_OID_CERT_KEY_IDENTIFIER_PROP_ID: CERTENROLL_OBJECTID = 338i32;
pub const XCN_OID_CERT_MANIFOLD: CERTENROLL_OBJECTID = 219i32;
pub const XCN_OID_CERT_MD5_HASH_PROP_ID: CERTENROLL_OBJECTID = 341i32;
pub const XCN_OID_CERT_POLICIES: CERTENROLL_OBJECTID = 179i32;
pub const XCN_OID_CERT_POLICIES_95: CERTENROLL_OBJECTID = 171i32;
pub const XCN_OID_CERT_POLICIES_95_QUALIFIER1: CERTENROLL_OBJECTID = 281i32;
pub const XCN_OID_CERT_PROP_ID_PREFIX: CERTENROLL_OBJECTID = 337i32;
pub const XCN_OID_CERT_SIGNATURE_HASH_PROP_ID: CERTENROLL_OBJECTID = 359i32;
pub const XCN_OID_CERT_STRONG_KEY_OS_1: CERTENROLL_OBJECTID = 360i32;
pub const XCN_OID_CERT_STRONG_KEY_OS_CURRENT: CERTENROLL_OBJECTID = 361i32;
pub const XCN_OID_CERT_STRONG_KEY_OS_PREFIX: CERTENROLL_OBJECTID = 362i32;
pub const XCN_OID_CERT_STRONG_SIGN_OS_1: CERTENROLL_OBJECTID = 363i32;
pub const XCN_OID_CERT_STRONG_SIGN_OS_CURRENT: CERTENROLL_OBJECTID = 364i32;
pub const XCN_OID_CERT_STRONG_SIGN_OS_PREFIX: CERTENROLL_OBJECTID = 365i32;
pub const XCN_OID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: CERTENROLL_OBJECTID = 340i32;
pub const XCN_OID_CMC: CERTENROLL_OBJECTID = 304i32;
pub const XCN_OID_CMC_ADD_ATTRIBUTES: CERTENROLL_OBJECTID = 325i32;
pub const XCN_OID_CMC_ADD_EXTENSIONS: CERTENROLL_OBJECTID = 312i32;
pub const XCN_OID_CMC_DATA_RETURN: CERTENROLL_OBJECTID = 308i32;
pub const XCN_OID_CMC_DECRYPTED_POP: CERTENROLL_OBJECTID = 314i32;
pub const XCN_OID_CMC_ENCRYPTED_POP: CERTENROLL_OBJECTID = 313i32;
pub const XCN_OID_CMC_GET_CERT: CERTENROLL_OBJECTID = 316i32;
pub const XCN_OID_CMC_GET_CRL: CERTENROLL_OBJECTID = 317i32;
pub const XCN_OID_CMC_IDENTIFICATION: CERTENROLL_OBJECTID = 306i32;
pub const XCN_OID_CMC_IDENTITY_PROOF: CERTENROLL_OBJECTID = 307i32;
pub const XCN_OID_CMC_ID_CONFIRM_CERT_ACCEPTANCE: CERTENROLL_OBJECTID = 324i32;
pub const XCN_OID_CMC_ID_POP_LINK_RANDOM: CERTENROLL_OBJECTID = 322i32;
pub const XCN_OID_CMC_ID_POP_LINK_WITNESS: CERTENROLL_OBJECTID = 323i32;
pub const XCN_OID_CMC_LRA_POP_WITNESS: CERTENROLL_OBJECTID = 315i32;
pub const XCN_OID_CMC_QUERY_PENDING: CERTENROLL_OBJECTID = 321i32;
pub const XCN_OID_CMC_RECIPIENT_NONCE: CERTENROLL_OBJECTID = 311i32;
pub const XCN_OID_CMC_REG_INFO: CERTENROLL_OBJECTID = 319i32;
pub const XCN_OID_CMC_RESPONSE_INFO: CERTENROLL_OBJECTID = 320i32;
pub const XCN_OID_CMC_REVOKE_REQUEST: CERTENROLL_OBJECTID = 318i32;
pub const XCN_OID_CMC_SENDER_NONCE: CERTENROLL_OBJECTID = 310i32;
pub const XCN_OID_CMC_STATUS_INFO: CERTENROLL_OBJECTID = 305i32;
pub const XCN_OID_CMC_TRANSACTION_ID: CERTENROLL_OBJECTID = 309i32;
pub const XCN_OID_COMMON_NAME: CERTENROLL_OBJECTID = 121i32;
pub const XCN_OID_COUNTRY_NAME: CERTENROLL_OBJECTID = 124i32;
pub const XCN_OID_CRL_DIST_POINTS: CERTENROLL_OBJECTID = 187i32;
pub const XCN_OID_CRL_NEXT_PUBLISH: CERTENROLL_OBJECTID = 223i32;
pub const XCN_OID_CRL_NUMBER: CERTENROLL_OBJECTID = 189i32;
pub const XCN_OID_CRL_REASON_CODE: CERTENROLL_OBJECTID = 185i32;
pub const XCN_OID_CRL_SELF_CDP: CERTENROLL_OBJECTID = 233i32;
pub const XCN_OID_CRL_VIRTUAL_BASE: CERTENROLL_OBJECTID = 222i32;
pub const XCN_OID_CROSS_CERTIFICATE_PAIR: CERTENROLL_OBJECTID = 158i32;
pub const XCN_OID_CROSS_CERT_DIST_POINTS: CERTENROLL_OBJECTID = 210i32;
pub const XCN_OID_CTL: CERTENROLL_OBJECTID = 211i32;
pub const XCN_OID_CT_PKI_DATA: CERTENROLL_OBJECTID = 301i32;
pub const XCN_OID_CT_PKI_RESPONSE: CERTENROLL_OBJECTID = 302i32;
pub const XCN_OID_DELTA_CRL_INDICATOR: CERTENROLL_OBJECTID = 190i32;
pub const XCN_OID_DESCRIPTION: CERTENROLL_OBJECTID = 131i32;
pub const XCN_OID_DESTINATION_INDICATOR: CERTENROLL_OBJECTID = 145i32;
pub const XCN_OID_DEVICE_SERIAL_NUMBER: CERTENROLL_OBJECTID = 123i32;
pub const XCN_OID_DH_SINGLE_PASS_STDDH_SHA1_KDF: CERTENROLL_OBJECTID = 366i32;
pub const XCN_OID_DH_SINGLE_PASS_STDDH_SHA256_KDF: CERTENROLL_OBJECTID = 367i32;
pub const XCN_OID_DH_SINGLE_PASS_STDDH_SHA384_KDF: CERTENROLL_OBJECTID = 368i32;
pub const XCN_OID_DISALLOWED_HASH: CERTENROLL_OBJECTID = 369i32;
pub const XCN_OID_DISALLOWED_LIST: CERTENROLL_OBJECTID = 370i32;
pub const XCN_OID_DN_QUALIFIER: CERTENROLL_OBJECTID = 161i32;
pub const XCN_OID_DOMAIN_COMPONENT: CERTENROLL_OBJECTID = 162i32;
pub const XCN_OID_DRM: CERTENROLL_OBJECTID = 273i32;
pub const XCN_OID_DRM_INDIVIDUALIZATION: CERTENROLL_OBJECTID = 274i32;
pub const XCN_OID_DS: CERTENROLL_OBJECTID = 58i32;
pub const XCN_OID_DSALG: CERTENROLL_OBJECTID = 59i32;
pub const XCN_OID_DSALG_CRPT: CERTENROLL_OBJECTID = 60i32;
pub const XCN_OID_DSALG_HASH: CERTENROLL_OBJECTID = 61i32;
pub const XCN_OID_DSALG_RSA: CERTENROLL_OBJECTID = 63i32;
pub const XCN_OID_DSALG_SIGN: CERTENROLL_OBJECTID = 62i32;
pub const XCN_OID_DS_EMAIL_REPLICATION: CERTENROLL_OBJECTID = 237i32;
pub const XCN_OID_ECC_CURVE_P256: CERTENROLL_OBJECTID = 371i32;
pub const XCN_OID_ECC_CURVE_P384: CERTENROLL_OBJECTID = 372i32;
pub const XCN_OID_ECC_CURVE_P521: CERTENROLL_OBJECTID = 373i32;
pub const XCN_OID_ECC_PUBLIC_KEY: CERTENROLL_OBJECTID = 349i32;
pub const XCN_OID_ECDSA_SHA1: CERTENROLL_OBJECTID = 350i32;
pub const XCN_OID_ECDSA_SHA256: CERTENROLL_OBJECTID = 374i32;
pub const XCN_OID_ECDSA_SHA384: CERTENROLL_OBJECTID = 375i32;
pub const XCN_OID_ECDSA_SHA512: CERTENROLL_OBJECTID = 376i32;
pub const XCN_OID_ECDSA_SPECIFIED: CERTENROLL_OBJECTID = 351i32;
pub const XCN_OID_EFS_RECOVERY: CERTENROLL_OBJECTID = 260i32;
pub const XCN_OID_EMBEDDED_NT_CRYPTO: CERTENROLL_OBJECTID = 264i32;
pub const XCN_OID_ENCRYPTED_KEY_HASH: CERTENROLL_OBJECTID = 239i32;
pub const XCN_OID_ENHANCED_KEY_USAGE: CERTENROLL_OBJECTID = 188i32;
pub const XCN_OID_ENROLLMENT_AGENT: CERTENROLL_OBJECTID = 201i32;
pub const XCN_OID_ENROLLMENT_CSP_PROVIDER: CERTENROLL_OBJECTID = 199i32;
pub const XCN_OID_ENROLLMENT_NAME_VALUE_PAIR: CERTENROLL_OBJECTID = 198i32;
pub const XCN_OID_ENROLL_ATTESTATION_CHALLENGE: CERTENROLL_OBJECTID = 435i32;
pub const XCN_OID_ENROLL_ATTESTATION_STATEMENT: CERTENROLL_OBJECTID = 436i32;
pub const XCN_OID_ENROLL_CAXCHGCERT_HASH: CERTENROLL_OBJECTID = 377i32;
pub const XCN_OID_ENROLL_CERTTYPE_EXTENSION: CERTENROLL_OBJECTID = 218i32;
pub const XCN_OID_ENROLL_EKPUB_CHALLENGE: CERTENROLL_OBJECTID = 379i32;
pub const XCN_OID_ENROLL_EKVERIFYCERT: CERTENROLL_OBJECTID = 380i32;
pub const XCN_OID_ENROLL_EKVERIFYCREDS: CERTENROLL_OBJECTID = 381i32;
pub const XCN_OID_ENROLL_EKVERIFYKEY: CERTENROLL_OBJECTID = 382i32;
pub const XCN_OID_ENROLL_EK_INFO: CERTENROLL_OBJECTID = 378i32;
pub const XCN_OID_ENROLL_ENCRYPTION_ALGORITHM: CERTENROLL_OBJECTID = 437i32;
pub const XCN_OID_ENROLL_KSP_NAME: CERTENROLL_OBJECTID = 438i32;
pub const XCN_OID_ENROLL_SCEP_ERROR: CERTENROLL_OBJECTID = 428i32;
pub const XCN_OID_ENTERPRISE_OID_ROOT: CERTENROLL_OBJECTID = 227i32;
pub const XCN_OID_EV_RDN_COUNTRY: CERTENROLL_OBJECTID = 383i32;
pub const XCN_OID_EV_RDN_LOCALE: CERTENROLL_OBJECTID = 384i32;
pub const XCN_OID_EV_RDN_STATE_OR_PROVINCE: CERTENROLL_OBJECTID = 385i32;
pub const XCN_OID_FACSIMILE_TELEPHONE_NUMBER: CERTENROLL_OBJECTID = 141i32;
pub const XCN_OID_FRESHEST_CRL: CERTENROLL_OBJECTID = 192i32;
pub const XCN_OID_GIVEN_NAME: CERTENROLL_OBJECTID = 159i32;
pub const XCN_OID_INFOSEC: CERTENROLL_OBJECTID = 99i32;
pub const XCN_OID_INFOSEC_SuiteAConfidentiality: CERTENROLL_OBJECTID = 113i32;
pub const XCN_OID_INFOSEC_SuiteAIntegrity: CERTENROLL_OBJECTID = 114i32;
pub const XCN_OID_INFOSEC_SuiteAKMandSig: CERTENROLL_OBJECTID = 117i32;
pub const XCN_OID_INFOSEC_SuiteAKeyManagement: CERTENROLL_OBJECTID = 116i32;
pub const XCN_OID_INFOSEC_SuiteASignature: CERTENROLL_OBJECTID = 112i32;
pub const XCN_OID_INFOSEC_SuiteATokenProtection: CERTENROLL_OBJECTID = 115i32;
pub const XCN_OID_INFOSEC_mosaicConfidentiality: CERTENROLL_OBJECTID = 103i32;
pub const XCN_OID_INFOSEC_mosaicIntegrity: CERTENROLL_OBJECTID = 105i32;
pub const XCN_OID_INFOSEC_mosaicKMandSig: CERTENROLL_OBJECTID = 111i32;
pub const XCN_OID_INFOSEC_mosaicKMandUpdSig: CERTENROLL_OBJECTID = 119i32;
pub const XCN_OID_INFOSEC_mosaicKeyManagement: CERTENROLL_OBJECTID = 109i32;
pub const XCN_OID_INFOSEC_mosaicSignature: CERTENROLL_OBJECTID = 101i32;
pub const XCN_OID_INFOSEC_mosaicTokenProtection: CERTENROLL_OBJECTID = 107i32;
pub const XCN_OID_INFOSEC_mosaicUpdatedInteg: CERTENROLL_OBJECTID = 120i32;
pub const XCN_OID_INFOSEC_mosaicUpdatedSig: CERTENROLL_OBJECTID = 118i32;
pub const XCN_OID_INFOSEC_sdnsConfidentiality: CERTENROLL_OBJECTID = 102i32;
pub const XCN_OID_INFOSEC_sdnsIntegrity: CERTENROLL_OBJECTID = 104i32;
pub const XCN_OID_INFOSEC_sdnsKMandSig: CERTENROLL_OBJECTID = 110i32;
pub const XCN_OID_INFOSEC_sdnsKeyManagement: CERTENROLL_OBJECTID = 108i32;
pub const XCN_OID_INFOSEC_sdnsSignature: CERTENROLL_OBJECTID = 100i32;
pub const XCN_OID_INFOSEC_sdnsTokenProtection: CERTENROLL_OBJECTID = 106i32;
pub const XCN_OID_INHIBIT_ANY_POLICY: CERTENROLL_OBJECTID = 386i32;
pub const XCN_OID_INITIALS: CERTENROLL_OBJECTID = 160i32;
pub const XCN_OID_INTERNATIONALIZED_EMAIL_ADDRESS: CERTENROLL_OBJECTID = 387i32;
pub const XCN_OID_INTERNATIONAL_ISDN_NUMBER: CERTENROLL_OBJECTID = 143i32;
pub const XCN_OID_IPSEC_KP_IKE_INTERMEDIATE: CERTENROLL_OBJECTID = 254i32;
pub const XCN_OID_ISSUED_CERT_HASH: CERTENROLL_OBJECTID = 236i32;
pub const XCN_OID_ISSUER_ALT_NAME: CERTENROLL_OBJECTID = 174i32;
pub const XCN_OID_ISSUER_ALT_NAME2: CERTENROLL_OBJECTID = 184i32;
pub const XCN_OID_ISSUING_DIST_POINT: CERTENROLL_OBJECTID = 191i32;
pub const XCN_OID_KEYID_RDN: CERTENROLL_OBJECTID = 168i32;
pub const XCN_OID_KEY_ATTRIBUTES: CERTENROLL_OBJECTID = 170i32;
pub const XCN_OID_KEY_USAGE: CERTENROLL_OBJECTID = 176i32;
pub const XCN_OID_KEY_USAGE_RESTRICTION: CERTENROLL_OBJECTID = 172i32;
pub const XCN_OID_KP_CA_EXCHANGE: CERTENROLL_OBJECTID = 224i32;
pub const XCN_OID_KP_CSP_SIGNATURE: CERTENROLL_OBJECTID = 272i32;
pub const XCN_OID_KP_CTL_USAGE_SIGNING: CERTENROLL_OBJECTID = 255i32;
pub const XCN_OID_KP_DOCUMENT_SIGNING: CERTENROLL_OBJECTID = 268i32;
pub const XCN_OID_KP_EFS: CERTENROLL_OBJECTID = 259i32;
pub const XCN_OID_KP_KERNEL_MODE_CODE_SIGNING: CERTENROLL_OBJECTID = 388i32;
pub const XCN_OID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING: CERTENROLL_OBJECTID = 389i32;
pub const XCN_OID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING: CERTENROLL_OBJECTID = 390i32;
pub const XCN_OID_KP_KEY_RECOVERY: CERTENROLL_OBJECTID = 267i32;
pub const XCN_OID_KP_KEY_RECOVERY_AGENT: CERTENROLL_OBJECTID = 225i32;
pub const XCN_OID_KP_LIFETIME_SIGNING: CERTENROLL_OBJECTID = 269i32;
pub const XCN_OID_KP_MOBILE_DEVICE_SOFTWARE: CERTENROLL_OBJECTID = 270i32;
pub const XCN_OID_KP_QUALIFIED_SUBORDINATION: CERTENROLL_OBJECTID = 266i32;
pub const XCN_OID_KP_SMARTCARD_LOGON: CERTENROLL_OBJECTID = 277i32;
pub const XCN_OID_KP_SMART_DISPLAY: CERTENROLL_OBJECTID = 271i32;
pub const XCN_OID_KP_TIME_STAMP_SIGNING: CERTENROLL_OBJECTID = 256i32;
pub const XCN_OID_KP_TPM_AIK_CERTIFICATE: CERTENROLL_OBJECTID = 391i32;
pub const XCN_OID_KP_TPM_EK_CERTIFICATE: CERTENROLL_OBJECTID = 392i32;
pub const XCN_OID_KP_TPM_PLATFORM_CERTIFICATE: CERTENROLL_OBJECTID = 393i32;
pub const XCN_OID_LEGACY_POLICY_MAPPINGS: CERTENROLL_OBJECTID = 195i32;
pub const XCN_OID_LICENSES: CERTENROLL_OBJECTID = 275i32;
pub const XCN_OID_LICENSE_SERVER: CERTENROLL_OBJECTID = 276i32;
pub const XCN_OID_LOCALITY_NAME: CERTENROLL_OBJECTID = 125i32;
pub const XCN_OID_LOCAL_MACHINE_KEYSET: CERTENROLL_OBJECTID = 166i32;
pub const XCN_OID_LOGOTYPE_EXT: CERTENROLL_OBJECTID = 206i32;
pub const XCN_OID_LOYALTY_OTHER_LOGOTYPE: CERTENROLL_OBJECTID = 326i32;
pub const XCN_OID_MEMBER: CERTENROLL_OBJECTID = 149i32;
pub const XCN_OID_NAME_CONSTRAINTS: CERTENROLL_OBJECTID = 193i32;
pub const XCN_OID_NETSCAPE: CERTENROLL_OBJECTID = 289i32;
pub const XCN_OID_NETSCAPE_BASE_URL: CERTENROLL_OBJECTID = 292i32;
pub const XCN_OID_NETSCAPE_CA_POLICY_URL: CERTENROLL_OBJECTID = 296i32;
pub const XCN_OID_NETSCAPE_CA_REVOCATION_URL: CERTENROLL_OBJECTID = 294i32;
pub const XCN_OID_NETSCAPE_CERT_EXTENSION: CERTENROLL_OBJECTID = 290i32;
pub const XCN_OID_NETSCAPE_CERT_RENEWAL_URL: CERTENROLL_OBJECTID = 295i32;
pub const XCN_OID_NETSCAPE_CERT_SEQUENCE: CERTENROLL_OBJECTID = 300i32;
pub const XCN_OID_NETSCAPE_CERT_TYPE: CERTENROLL_OBJECTID = 291i32;
pub const XCN_OID_NETSCAPE_COMMENT: CERTENROLL_OBJECTID = 298i32;
pub const XCN_OID_NETSCAPE_DATA_TYPE: CERTENROLL_OBJECTID = 299i32;
pub const XCN_OID_NETSCAPE_REVOCATION_URL: CERTENROLL_OBJECTID = 293i32;
pub const XCN_OID_NETSCAPE_SSL_SERVER_NAME: CERTENROLL_OBJECTID = 297i32;
pub const XCN_OID_NEXT_UPDATE_LOCATION: CERTENROLL_OBJECTID = 208i32;
pub const XCN_OID_NIST_AES128_CBC: CERTENROLL_OBJECTID = 394i32;
pub const XCN_OID_NIST_AES128_WRAP: CERTENROLL_OBJECTID = 395i32;
pub const XCN_OID_NIST_AES192_CBC: CERTENROLL_OBJECTID = 396i32;
pub const XCN_OID_NIST_AES192_WRAP: CERTENROLL_OBJECTID = 397i32;
pub const XCN_OID_NIST_AES256_CBC: CERTENROLL_OBJECTID = 398i32;
pub const XCN_OID_NIST_AES256_WRAP: CERTENROLL_OBJECTID = 399i32;
pub const XCN_OID_NIST_sha256: CERTENROLL_OBJECTID = 345i32;
pub const XCN_OID_NIST_sha384: CERTENROLL_OBJECTID = 346i32;
pub const XCN_OID_NIST_sha512: CERTENROLL_OBJECTID = 347i32;
pub const XCN_OID_NONE: CERTENROLL_OBJECTID = 0i32;
pub const XCN_OID_NT5_CRYPTO: CERTENROLL_OBJECTID = 262i32;
pub const XCN_OID_NTDS_REPLICATION: CERTENROLL_OBJECTID = 241i32;
pub const XCN_OID_NT_PRINCIPAL_NAME: CERTENROLL_OBJECTID = 214i32;
pub const XCN_OID_OEM_WHQL_CRYPTO: CERTENROLL_OBJECTID = 263i32;
pub const XCN_OID_OIW: CERTENROLL_OBJECTID = 64i32;
pub const XCN_OID_OIWDIR: CERTENROLL_OBJECTID = 93i32;
pub const XCN_OID_OIWDIR_CRPT: CERTENROLL_OBJECTID = 94i32;
pub const XCN_OID_OIWDIR_HASH: CERTENROLL_OBJECTID = 95i32;
pub const XCN_OID_OIWDIR_SIGN: CERTENROLL_OBJECTID = 96i32;
pub const XCN_OID_OIWDIR_md2: CERTENROLL_OBJECTID = 97i32;
pub const XCN_OID_OIWDIR_md2RSA: CERTENROLL_OBJECTID = 98i32;
pub const XCN_OID_OIWSEC: CERTENROLL_OBJECTID = 65i32;
pub const XCN_OID_OIWSEC_desCBC: CERTENROLL_OBJECTID = 70i32;
pub const XCN_OID_OIWSEC_desCFB: CERTENROLL_OBJECTID = 72i32;
pub const XCN_OID_OIWSEC_desECB: CERTENROLL_OBJECTID = 69i32;
pub const XCN_OID_OIWSEC_desEDE: CERTENROLL_OBJECTID = 80i32;
pub const XCN_OID_OIWSEC_desMAC: CERTENROLL_OBJECTID = 73i32;
pub const XCN_OID_OIWSEC_desOFB: CERTENROLL_OBJECTID = 71i32;
pub const XCN_OID_OIWSEC_dhCommMod: CERTENROLL_OBJECTID = 79i32;
pub const XCN_OID_OIWSEC_dsa: CERTENROLL_OBJECTID = 75i32;
pub const XCN_OID_OIWSEC_dsaComm: CERTENROLL_OBJECTID = 83i32;
pub const XCN_OID_OIWSEC_dsaCommSHA: CERTENROLL_OBJECTID = 84i32;
pub const XCN_OID_OIWSEC_dsaCommSHA1: CERTENROLL_OBJECTID = 91i32;
pub const XCN_OID_OIWSEC_dsaSHA1: CERTENROLL_OBJECTID = 90i32;
pub const XCN_OID_OIWSEC_keyHashSeal: CERTENROLL_OBJECTID = 86i32;
pub const XCN_OID_OIWSEC_md2RSASign: CERTENROLL_OBJECTID = 87i32;
pub const XCN_OID_OIWSEC_md4RSA: CERTENROLL_OBJECTID = 66i32;
pub const XCN_OID_OIWSEC_md4RSA2: CERTENROLL_OBJECTID = 68i32;
pub const XCN_OID_OIWSEC_md5RSA: CERTENROLL_OBJECTID = 67i32;
pub const XCN_OID_OIWSEC_md5RSASign: CERTENROLL_OBJECTID = 88i32;
pub const XCN_OID_OIWSEC_mdc2: CERTENROLL_OBJECTID = 82i32;
pub const XCN_OID_OIWSEC_mdc2RSA: CERTENROLL_OBJECTID = 77i32;
pub const XCN_OID_OIWSEC_rsaSign: CERTENROLL_OBJECTID = 74i32;
pub const XCN_OID_OIWSEC_rsaXchg: CERTENROLL_OBJECTID = 85i32;
pub const XCN_OID_OIWSEC_sha: CERTENROLL_OBJECTID = 81i32;
pub const XCN_OID_OIWSEC_sha1: CERTENROLL_OBJECTID = 89i32;
pub const XCN_OID_OIWSEC_sha1RSASign: CERTENROLL_OBJECTID = 92i32;
pub const XCN_OID_OIWSEC_shaDSA: CERTENROLL_OBJECTID = 76i32;
pub const XCN_OID_OIWSEC_shaRSA: CERTENROLL_OBJECTID = 78i32;
pub const XCN_OID_ORGANIZATIONAL_UNIT_NAME: CERTENROLL_OBJECTID = 129i32;
pub const XCN_OID_ORGANIZATION_NAME: CERTENROLL_OBJECTID = 128i32;
pub const XCN_OID_OS_VERSION: CERTENROLL_OBJECTID = 200i32;
pub const XCN_OID_OWNER: CERTENROLL_OBJECTID = 150i32;
pub const XCN_OID_PHYSICAL_DELIVERY_OFFICE_NAME: CERTENROLL_OBJECTID = 137i32;
pub const XCN_OID_PKCS: CERTENROLL_OBJECTID = 2i32;
pub const XCN_OID_PKCS_1: CERTENROLL_OBJECTID = 5i32;
pub const XCN_OID_PKCS_10: CERTENROLL_OBJECTID = 14i32;
pub const XCN_OID_PKCS_12: CERTENROLL_OBJECTID = 15i32;
pub const XCN_OID_PKCS_12_EXTENDED_ATTRIBUTES: CERTENROLL_OBJECTID = 167i32;
pub const XCN_OID_PKCS_12_FRIENDLY_NAME_ATTR: CERTENROLL_OBJECTID = 163i32;
pub const XCN_OID_PKCS_12_KEY_PROVIDER_NAME_ATTR: CERTENROLL_OBJECTID = 165i32;
pub const XCN_OID_PKCS_12_LOCAL_KEY_ID: CERTENROLL_OBJECTID = 164i32;
pub const XCN_OID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID: CERTENROLL_OBJECTID = 407i32;
pub const XCN_OID_PKCS_12_PbeIds: CERTENROLL_OBJECTID = 400i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC2: CERTENROLL_OBJECTID = 401i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC4: CERTENROLL_OBJECTID = 402i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And2KeyTripleDES: CERTENROLL_OBJECTID = 403i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And3KeyTripleDES: CERTENROLL_OBJECTID = 404i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC2: CERTENROLL_OBJECTID = 405i32;
pub const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC4: CERTENROLL_OBJECTID = 406i32;
pub const XCN_OID_PKCS_2: CERTENROLL_OBJECTID = 6i32;
pub const XCN_OID_PKCS_3: CERTENROLL_OBJECTID = 7i32;
pub const XCN_OID_PKCS_4: CERTENROLL_OBJECTID = 8i32;
pub const XCN_OID_PKCS_5: CERTENROLL_OBJECTID = 9i32;
pub const XCN_OID_PKCS_6: CERTENROLL_OBJECTID = 10i32;
pub const XCN_OID_PKCS_7: CERTENROLL_OBJECTID = 11i32;
pub const XCN_OID_PKCS_7_DATA: CERTENROLL_OBJECTID = 329i32;
pub const XCN_OID_PKCS_7_DIGESTED: CERTENROLL_OBJECTID = 333i32;
pub const XCN_OID_PKCS_7_ENCRYPTED: CERTENROLL_OBJECTID = 334i32;
pub const XCN_OID_PKCS_7_ENVELOPED: CERTENROLL_OBJECTID = 331i32;
pub const XCN_OID_PKCS_7_SIGNED: CERTENROLL_OBJECTID = 330i32;
pub const XCN_OID_PKCS_7_SIGNEDANDENVELOPED: CERTENROLL_OBJECTID = 332i32;
pub const XCN_OID_PKCS_8: CERTENROLL_OBJECTID = 12i32;
pub const XCN_OID_PKCS_9: CERTENROLL_OBJECTID = 13i32;
pub const XCN_OID_PKCS_9_CONTENT_TYPE: CERTENROLL_OBJECTID = 335i32;
pub const XCN_OID_PKCS_9_MESSAGE_DIGEST: CERTENROLL_OBJECTID = 336i32;
pub const XCN_OID_PKINIT_KP_KDC: CERTENROLL_OBJECTID = 408i32;
pub const XCN_OID_PKIX: CERTENROLL_OBJECTID = 202i32;
pub const XCN_OID_PKIX_ACC_DESCR: CERTENROLL_OBJECTID = 282i32;
pub const XCN_OID_PKIX_CA_ISSUERS: CERTENROLL_OBJECTID = 284i32;
pub const XCN_OID_PKIX_CA_REPOSITORY: CERTENROLL_OBJECTID = 409i32;
pub const XCN_OID_PKIX_KP: CERTENROLL_OBJECTID = 243i32;
pub const XCN_OID_PKIX_KP_CLIENT_AUTH: CERTENROLL_OBJECTID = 245i32;
pub const XCN_OID_PKIX_KP_CODE_SIGNING: CERTENROLL_OBJECTID = 246i32;
pub const XCN_OID_PKIX_KP_EMAIL_PROTECTION: CERTENROLL_OBJECTID = 247i32;
pub const XCN_OID_PKIX_KP_IPSEC_END_SYSTEM: CERTENROLL_OBJECTID = 248i32;
pub const XCN_OID_PKIX_KP_IPSEC_TUNNEL: CERTENROLL_OBJECTID = 249i32;
pub const XCN_OID_PKIX_KP_IPSEC_USER: CERTENROLL_OBJECTID = 250i32;
pub const XCN_OID_PKIX_KP_OCSP_SIGNING: CERTENROLL_OBJECTID = 252i32;
pub const XCN_OID_PKIX_KP_SERVER_AUTH: CERTENROLL_OBJECTID = 244i32;
pub const XCN_OID_PKIX_KP_TIMESTAMP_SIGNING: CERTENROLL_OBJECTID = 251i32;
pub const XCN_OID_PKIX_NO_SIGNATURE: CERTENROLL_OBJECTID = 303i32;
pub const XCN_OID_PKIX_OCSP: CERTENROLL_OBJECTID = 283i32;
pub const XCN_OID_PKIX_OCSP_BASIC_SIGNED_RESPONSE: CERTENROLL_OBJECTID = 328i32;
pub const XCN_OID_PKIX_OCSP_NOCHECK: CERTENROLL_OBJECTID = 253i32;
pub const XCN_OID_PKIX_OCSP_NONCE: CERTENROLL_OBJECTID = 410i32;
pub const XCN_OID_PKIX_PE: CERTENROLL_OBJECTID = 203i32;
pub const XCN_OID_PKIX_POLICY_QUALIFIER_CPS: CERTENROLL_OBJECTID = 279i32;
pub const XCN_OID_PKIX_POLICY_QUALIFIER_USERNOTICE: CERTENROLL_OBJECTID = 280i32;
pub const XCN_OID_PKIX_TIME_STAMPING: CERTENROLL_OBJECTID = 411i32;
pub const XCN_OID_POLICY_CONSTRAINTS: CERTENROLL_OBJECTID = 196i32;
pub const XCN_OID_POLICY_MAPPINGS: CERTENROLL_OBJECTID = 194i32;
pub const XCN_OID_POSTAL_ADDRESS: CERTENROLL_OBJECTID = 134i32;
pub const XCN_OID_POSTAL_CODE: CERTENROLL_OBJECTID = 135i32;
pub const XCN_OID_POST_OFFICE_BOX: CERTENROLL_OBJECTID = 136i32;
pub const XCN_OID_PREFERRED_DELIVERY_METHOD: CERTENROLL_OBJECTID = 146i32;
pub const XCN_OID_PRESENTATION_ADDRESS: CERTENROLL_OBJECTID = 147i32;
pub const XCN_OID_PRIVATEKEY_USAGE_PERIOD: CERTENROLL_OBJECTID = 177i32;
pub const XCN_OID_PRODUCT_UPDATE: CERTENROLL_OBJECTID = 215i32;
pub const XCN_OID_QC_EU_COMPLIANCE: CERTENROLL_OBJECTID = 412i32;
pub const XCN_OID_QC_SSCD: CERTENROLL_OBJECTID = 413i32;
pub const XCN_OID_QC_STATEMENTS_EXT: CERTENROLL_OBJECTID = 414i32;
pub const XCN_OID_RDN_DUMMY_SIGNER: CERTENROLL_OBJECTID = 228i32;
pub const XCN_OID_RDN_TPM_MANUFACTURER: CERTENROLL_OBJECTID = 415i32;
pub const XCN_OID_RDN_TPM_MODEL: CERTENROLL_OBJECTID = 416i32;
pub const XCN_OID_RDN_TPM_VERSION: CERTENROLL_OBJECTID = 417i32;
pub const XCN_OID_REASON_CODE_HOLD: CERTENROLL_OBJECTID = 186i32;
pub const XCN_OID_REGISTERED_ADDRESS: CERTENROLL_OBJECTID = 144i32;
pub const XCN_OID_REMOVE_CERTIFICATE: CERTENROLL_OBJECTID = 209i32;
pub const XCN_OID_RENEWAL_CERTIFICATE: CERTENROLL_OBJECTID = 197i32;
pub const XCN_OID_REQUEST_CLIENT_INFO: CERTENROLL_OBJECTID = 238i32;
pub const XCN_OID_REQUIRE_CERT_CHAIN_POLICY: CERTENROLL_OBJECTID = 234i32;
pub const XCN_OID_REVOKED_LIST_SIGNER: CERTENROLL_OBJECTID = 418i32;
pub const XCN_OID_RFC3161_counterSign: CERTENROLL_OBJECTID = 419i32;
pub const XCN_OID_ROLE_OCCUPANT: CERTENROLL_OBJECTID = 151i32;
pub const XCN_OID_ROOT_LIST_SIGNER: CERTENROLL_OBJECTID = 265i32;
pub const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION: CERTENROLL_OBJECTID = 420i32;
pub const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION: CERTENROLL_OBJECTID = 421i32;
pub const XCN_OID_ROOT_PROGRAM_FLAGS: CERTENROLL_OBJECTID = 422i32;
pub const XCN_OID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL: CERTENROLL_OBJECTID = 423i32;
pub const XCN_OID_RSA: CERTENROLL_OBJECTID = 1i32;
pub const XCN_OID_RSAES_OAEP: CERTENROLL_OBJECTID = 425i32;
pub const XCN_OID_RSA_DES_EDE3_CBC: CERTENROLL_OBJECTID = 51i32;
pub const XCN_OID_RSA_DH: CERTENROLL_OBJECTID = 22i32;
pub const XCN_OID_RSA_ENCRYPT: CERTENROLL_OBJECTID = 4i32;
pub const XCN_OID_RSA_HASH: CERTENROLL_OBJECTID = 3i32;
pub const XCN_OID_RSA_MD2: CERTENROLL_OBJECTID = 46i32;
pub const XCN_OID_RSA_MD2RSA: CERTENROLL_OBJECTID = 17i32;
pub const XCN_OID_RSA_MD4: CERTENROLL_OBJECTID = 47i32;
pub const XCN_OID_RSA_MD4RSA: CERTENROLL_OBJECTID = 18i32;
pub const XCN_OID_RSA_MD5: CERTENROLL_OBJECTID = 48i32;
pub const XCN_OID_RSA_MD5RSA: CERTENROLL_OBJECTID = 19i32;
pub const XCN_OID_RSA_MGF1: CERTENROLL_OBJECTID = 348i32;
pub const XCN_OID_RSA_PSPECIFIED: CERTENROLL_OBJECTID = 424i32;
pub const XCN_OID_RSA_RC2CBC: CERTENROLL_OBJECTID = 49i32;
pub const XCN_OID_RSA_RC4: CERTENROLL_OBJECTID = 50i32;
pub const XCN_OID_RSA_RC5_CBCPad: CERTENROLL_OBJECTID = 52i32;
pub const XCN_OID_RSA_RSA: CERTENROLL_OBJECTID = 16i32;
pub const XCN_OID_RSA_SETOAEP_RSA: CERTENROLL_OBJECTID = 21i32;
pub const XCN_OID_RSA_SHA1RSA: CERTENROLL_OBJECTID = 20i32;
pub const XCN_OID_RSA_SHA256RSA: CERTENROLL_OBJECTID = 342i32;
pub const XCN_OID_RSA_SHA384RSA: CERTENROLL_OBJECTID = 343i32;
pub const XCN_OID_RSA_SHA512RSA: CERTENROLL_OBJECTID = 344i32;
pub const XCN_OID_RSA_SMIMECapabilities: CERTENROLL_OBJECTID = 40i32;
pub const XCN_OID_RSA_SMIMEalg: CERTENROLL_OBJECTID = 42i32;
pub const XCN_OID_RSA_SMIMEalgCMS3DESwrap: CERTENROLL_OBJECTID = 44i32;
pub const XCN_OID_RSA_SMIMEalgCMSRC2wrap: CERTENROLL_OBJECTID = 45i32;
pub const XCN_OID_RSA_SMIMEalgESDH: CERTENROLL_OBJECTID = 43i32;
pub const XCN_OID_RSA_SSA_PSS: CERTENROLL_OBJECTID = 353i32;
pub const XCN_OID_RSA_certExtensions: CERTENROLL_OBJECTID = 39i32;
pub const XCN_OID_RSA_challengePwd: CERTENROLL_OBJECTID = 36i32;
pub const XCN_OID_RSA_contentType: CERTENROLL_OBJECTID = 32i32;
pub const XCN_OID_RSA_counterSign: CERTENROLL_OBJECTID = 35i32;
pub const XCN_OID_RSA_data: CERTENROLL_OBJECTID = 23i32;
pub const XCN_OID_RSA_digestedData: CERTENROLL_OBJECTID = 27i32;
pub const XCN_OID_RSA_emailAddr: CERTENROLL_OBJECTID = 30i32;
pub const XCN_OID_RSA_encryptedData: CERTENROLL_OBJECTID = 29i32;
pub const XCN_OID_RSA_envelopedData: CERTENROLL_OBJECTID = 25i32;
pub const XCN_OID_RSA_extCertAttrs: CERTENROLL_OBJECTID = 38i32;
pub const XCN_OID_RSA_hashedData: CERTENROLL_OBJECTID = 28i32;
pub const XCN_OID_RSA_messageDigest: CERTENROLL_OBJECTID = 33i32;
pub const XCN_OID_RSA_preferSignedData: CERTENROLL_OBJECTID = 41i32;
pub const XCN_OID_RSA_signEnvData: CERTENROLL_OBJECTID = 26i32;
pub const XCN_OID_RSA_signedData: CERTENROLL_OBJECTID = 24i32;
pub const XCN_OID_RSA_signingTime: CERTENROLL_OBJECTID = 34i32;
pub const XCN_OID_RSA_unstructAddr: CERTENROLL_OBJECTID = 37i32;
pub const XCN_OID_RSA_unstructName: CERTENROLL_OBJECTID = 31i32;
pub const XCN_OID_SEARCH_GUIDE: CERTENROLL_OBJECTID = 132i32;
pub const XCN_OID_SEE_ALSO: CERTENROLL_OBJECTID = 152i32;
pub const XCN_OID_SERIALIZED: CERTENROLL_OBJECTID = 213i32;
pub const XCN_OID_SERVER_GATED_CRYPTO: CERTENROLL_OBJECTID = 257i32;
pub const XCN_OID_SGC_NETSCAPE: CERTENROLL_OBJECTID = 258i32;
pub const XCN_OID_SORTED_CTL: CERTENROLL_OBJECTID = 212i32;
pub const XCN_OID_STATE_OR_PROVINCE_NAME: CERTENROLL_OBJECTID = 126i32;
pub const XCN_OID_STREET_ADDRESS: CERTENROLL_OBJECTID = 127i32;
pub const XCN_OID_SUBJECT_ALT_NAME: CERTENROLL_OBJECTID = 173i32;
pub const XCN_OID_SUBJECT_ALT_NAME2: CERTENROLL_OBJECTID = 183i32;
pub const XCN_OID_SUBJECT_DIR_ATTRS: CERTENROLL_OBJECTID = 242i32;
pub const XCN_OID_SUBJECT_INFO_ACCESS: CERTENROLL_OBJECTID = 426i32;
pub const XCN_OID_SUBJECT_KEY_IDENTIFIER: CERTENROLL_OBJECTID = 182i32;
pub const XCN_OID_SUPPORTED_APPLICATION_CONTEXT: CERTENROLL_OBJECTID = 148i32;
pub const XCN_OID_SUR_NAME: CERTENROLL_OBJECTID = 122i32;
pub const XCN_OID_TELEPHONE_NUMBER: CERTENROLL_OBJECTID = 138i32;
pub const XCN_OID_TELETEXT_TERMINAL_IDENTIFIER: CERTENROLL_OBJECTID = 140i32;
pub const XCN_OID_TELEX_NUMBER: CERTENROLL_OBJECTID = 139i32;
pub const XCN_OID_TIMESTAMP_TOKEN: CERTENROLL_OBJECTID = 427i32;
pub const XCN_OID_TITLE: CERTENROLL_OBJECTID = 130i32;
pub const XCN_OID_USER_CERTIFICATE: CERTENROLL_OBJECTID = 154i32;
pub const XCN_OID_USER_PASSWORD: CERTENROLL_OBJECTID = 153i32;
pub const XCN_OID_VERISIGN_BITSTRING_6_13: CERTENROLL_OBJECTID = 287i32;
pub const XCN_OID_VERISIGN_ISS_STRONG_CRYPTO: CERTENROLL_OBJECTID = 288i32;
pub const XCN_OID_VERISIGN_ONSITE_JURISDICTION_HASH: CERTENROLL_OBJECTID = 286i32;
pub const XCN_OID_VERISIGN_PRIVATE_6_9: CERTENROLL_OBJECTID = 285i32;
pub const XCN_OID_WHQL_CRYPTO: CERTENROLL_OBJECTID = 261i32;
pub const XCN_OID_X21_ADDRESS: CERTENROLL_OBJECTID = 142i32;
pub const XCN_OID_X957: CERTENROLL_OBJECTID = 55i32;
pub const XCN_OID_X957_DSA: CERTENROLL_OBJECTID = 56i32;
pub const XCN_OID_X957_SHA1DSA: CERTENROLL_OBJECTID = 57i32;
pub const XCN_OID_YESNO_TRUST_ATTR: CERTENROLL_OBJECTID = 278i32;
pub const XCN_PROPERTYID_NONE: CERTENROLL_PROPERTYID = 0i32;
pub const XCN_PROV_DH_SCHANNEL: X509ProviderType = 18i32;
pub const XCN_PROV_DSS: X509ProviderType = 3i32;
pub const XCN_PROV_DSS_DH: X509ProviderType = 13i32;
pub const XCN_PROV_EC_ECDSA_FULL: X509ProviderType = 16i32;
pub const XCN_PROV_EC_ECDSA_SIG: X509ProviderType = 14i32;
pub const XCN_PROV_EC_ECNRA_FULL: X509ProviderType = 17i32;
pub const XCN_PROV_EC_ECNRA_SIG: X509ProviderType = 15i32;
pub const XCN_PROV_FORTEZZA: X509ProviderType = 4i32;
pub const XCN_PROV_INTEL_SEC: X509ProviderType = 22i32;
pub const XCN_PROV_MS_EXCHANGE: X509ProviderType = 5i32;
pub const XCN_PROV_NONE: X509ProviderType = 0i32;
pub const XCN_PROV_REPLACE_OWF: X509ProviderType = 23i32;
pub const XCN_PROV_RNG: X509ProviderType = 21i32;
pub const XCN_PROV_RSA_AES: X509ProviderType = 24i32;
pub const XCN_PROV_RSA_FULL: X509ProviderType = 1i32;
pub const XCN_PROV_RSA_SCHANNEL: X509ProviderType = 12i32;
pub const XCN_PROV_RSA_SIG: X509ProviderType = 2i32;
pub const XCN_PROV_SPYRUS_LYNKS: X509ProviderType = 20i32;
pub const XCN_PROV_SSL: X509ProviderType = 6i32;
pub const XECI_AUTOENROLL: u32 = 2u32;
pub const XECI_CERTREQ: u32 = 4u32;
pub const XECI_DISABLE: u32 = 0u32;
pub const XECI_REQWIZARD: u32 = 3u32;
pub const XECI_XENROLL: u32 = 1u32;
pub const XECP_STRING_PROPERTY: u32 = 1u32;
pub const XECR_CMC: CERT_CREATE_REQUEST_FLAGS = 3i32;
pub const XECR_PKCS10_V1_5: CERT_CREATE_REQUEST_FLAGS = 4i32;
pub const XECR_PKCS10_V2_0: CERT_CREATE_REQUEST_FLAGS = 1i32;
pub const XECR_PKCS7: CERT_CREATE_REQUEST_FLAGS = 2i32;
pub const XECT_EXTENSION_V1: ADDED_CERT_TYPE = 1i32;
pub const XECT_EXTENSION_V2: ADDED_CERT_TYPE = 2i32;
pub const XEKL_KEYSIZE_DEFAULT: u32 = 4u32;
pub const XEKL_KEYSIZE_INC: XEKL_KEYSIZE = 3i32;
pub const XEKL_KEYSIZE_MAX: XEKL_KEYSIZE = 2i32;
pub const XEKL_KEYSIZE_MIN: XEKL_KEYSIZE = 1i32;
pub const XEKL_KEYSPEC_KEYX: XEKL_KEYSPEC = 1i32;
pub const XEKL_KEYSPEC_SIG: XEKL_KEYSPEC = 2i32;
pub const XEPR_CADNS: PENDING_REQUEST_DESIRED_PROPERTY = 1i32;
pub const XEPR_CAFRIENDLYNAME: PENDING_REQUEST_DESIRED_PROPERTY = 3i32;
pub const XEPR_CANAME: PENDING_REQUEST_DESIRED_PROPERTY = 2i32;
pub const XEPR_DATE: u32 = 5u32;
pub const XEPR_ENUM_FIRST: i32 = -1i32;
pub const XEPR_HASH: PENDING_REQUEST_DESIRED_PROPERTY = 8i32;
pub const XEPR_REQUESTID: PENDING_REQUEST_DESIRED_PROPERTY = 4i32;
pub const XEPR_TEMPLATENAME: u32 = 6u32;
pub const XEPR_V1TEMPLATENAME: u32 = 9u32;
pub const XEPR_V2TEMPLATEOID: u32 = 16u32;
pub const XEPR_VERSION: u32 = 7u32;
pub const dwCAXCHGOVERLAPPERIODCOUNTDEFAULT: u32 = 1u32;
pub const dwCAXCHGVALIDITYPERIODCOUNTDEFAULT: u32 = 1u32;
pub const dwCRLDELTAOVERLAPPERIODCOUNTDEFAULT: u32 = 0u32;
pub const dwCRLDELTAPERIODCOUNTDEFAULT: u32 = 1u32;
pub const dwCRLOVERLAPPERIODCOUNTDEFAULT: u32 = 0u32;
pub const dwCRLPERIODCOUNTDEFAULT: u32 = 1u32;
pub const dwVALIDITYPERIODCOUNTDEFAULT_ENTERPRISE: u32 = 2u32;
pub const dwVALIDITYPERIODCOUNTDEFAULT_ROOT: u32 = 5u32;
pub const dwVALIDITYPERIODCOUNTDEFAULT_STANDALONE: u32 = 1u32;
pub const szBACKUPANNOTATION: ::windows_sys::core::PCSTR = ::windows_sys::core::s!("Cert Server Backup Interface");
pub const szDBBASENAMEPARM: ::windows_sys::core::PCSTR = ::windows_sys::core::s!("edb");
pub const szNAMESEPARATORDEFAULT: ::windows_sys::core::PCSTR = ::windows_sys::core::s!("\n");
pub const szPROPASNTAG: ::windows_sys::core::PCSTR = ::windows_sys::core::s!("{asn}");
pub const szRESTOREANNOTATION: ::windows_sys::core::PCSTR = ::windows_sys::core::s!("Cert Server Restore Interface");
pub const wszAT_EKCERTINF: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("@EKCert");
pub const wszAT_TESTROOT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("@TestRoot");
pub const wszCAPOLICYFILE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAPolicy.inf");
pub const wszCERTEXITMODULE_POSTFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".Exit");
pub const wszCERTIFICATETRANSPARENCYFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateTransparencyFlags");
pub const wszCERTMANAGE_SUFFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Manage");
pub const wszCERTPOLICYMODULE_POSTFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".Policy");
pub const wszCERT_TYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestType");
pub const wszCERT_TYPE_CLIENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Client");
pub const wszCERT_TYPE_CODESIGN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CodeSign");
pub const wszCERT_TYPE_CUSTOMER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SetCustomer");
pub const wszCERT_TYPE_MERCHANT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SetMerchant");
pub const wszCERT_TYPE_PAYMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SetPayment");
pub const wszCERT_TYPE_SERVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Server");
pub const wszCERT_VERSION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Version");
pub const wszCERT_VERSION_1: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("1");
pub const wszCERT_VERSION_2: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("2");
pub const wszCERT_VERSION_3: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("3");
pub const wszCLASS_CERTADMIN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.Admin");
pub const wszCLASS_CERTCONFIG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.Config");
pub const wszCLASS_CERTDBMEM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.DBMem");
pub const wszCLASS_CERTENCODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.Encode");
pub const wszCLASS_CERTGETCONFIG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.GetConfig");
pub const wszCLASS_CERTREQUEST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.Request");
pub const wszCLASS_CERTSERVEREXIT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.ServerExit");
pub const wszCLASS_CERTSERVERPOLICY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.ServerPolicy");
pub const wszCLASS_CERTVIEW: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority.View");
pub const wszCMM_PROP_COPYRIGHT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Copyright");
pub const wszCMM_PROP_DESCRIPTION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Description");
pub const wszCMM_PROP_DISPLAY_HWND: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HWND");
pub const wszCMM_PROP_FILEVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("File Version");
pub const wszCMM_PROP_ISMULTITHREADED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("IsMultiThreaded");
pub const wszCMM_PROP_NAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Name");
pub const wszCMM_PROP_PRODUCTVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Product Version");
pub const wszCNGENCRYPTIONALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CNGEncryptionAlgorithm");
pub const wszCNGHASHALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CNGHashAlgorithm");
pub const wszCNGPUBLICKEYALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CNGPublicKeyAlgorithm");
pub const wszCONFIG_AUTHORITY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Authority");
pub const wszCONFIG_COMMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Comment");
pub const wszCONFIG_COMMONNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CommonName");
pub const wszCONFIG_CONFIG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Config");
pub const wszCONFIG_COUNTRY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Country");
pub const wszCONFIG_DESCRIPTION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Description");
pub const wszCONFIG_EXCHANGECERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExchangeCertificate");
pub const wszCONFIG_FLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Flags");
pub const wszCONFIG_LOCALITY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Locality");
pub const wszCONFIG_ORGANIZATION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Organization");
pub const wszCONFIG_ORGUNIT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("OrgUnit");
pub const wszCONFIG_SANITIZEDNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SanitizedName");
pub const wszCONFIG_SANITIZEDSHORTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SanitizedShortName");
pub const wszCONFIG_SERVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Server");
pub const wszCONFIG_SHORTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ShortName");
pub const wszCONFIG_SIGNATURECERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SignatureCertificate");
pub const wszCONFIG_STATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("State");
pub const wszCONFIG_WEBENROLLMENTSERVERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("WebEnrollmentServers");
pub const wszCRLPUBLISHRETRYCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublishRetryCount");
pub const wszCRTFILENAMEEXT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".crt");
pub const wszDATFILENAMEEXT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".dat");
pub const wszDBBACKUPCERTBACKDAT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("certbkxp.dat");
pub const wszDBBACKUPSUBDIR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DataBase");
pub const wszDBFILENAMEEXT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".edb");
pub const wszENCRYPTIONALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EncryptionAlgorithm");
pub const wszENROLLMENTAGENTRIGHTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnrollmentAgentRights");
pub const wszHASHALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HashAlgorithm");
pub const wszINFKEY_ALTERNATESIGNATUREALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AlternateSignatureAlgorithm");
pub const wszINFKEY_ATTESTPRIVATEKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AttestPrivateKey");
pub const wszINFKEY_CACAPABILITIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACapabilities");
pub const wszINFKEY_CACERTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACerts");
pub const wszINFKEY_CATHUMBPRINT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAThumbprint");
pub const wszINFKEY_CCDPSYNCDELTATIME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SyncDeltaTime");
pub const wszINFKEY_CHALLENGEPASSWORD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ChallengePassword");
pub const wszINFKEY_CONTINUE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("_continue_");
pub const wszINFKEY_CRITICAL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Critical");
pub const wszINFKEY_CRLDELTAPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaPeriodUnits");
pub const wszINFKEY_CRLDELTAPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaPeriod");
pub const wszINFKEY_CRLPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPeriodUnits");
pub const wszINFKEY_CRLPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPeriod");
pub const wszINFKEY_DIRECTORYNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DirectoryName");
pub const wszINFKEY_DNS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DNS");
pub const wszINFKEY_ECCKEYPARAMETERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters");
pub const wszINFKEY_ECCKEYPARAMETERSTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParametersType");
pub const wszINFKEY_ECCKEYPARAMETERS_A: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_A");
pub const wszINFKEY_ECCKEYPARAMETERS_B: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_B");
pub const wszINFKEY_ECCKEYPARAMETERS_BASE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_Base");
pub const wszINFKEY_ECCKEYPARAMETERS_COFACTOR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_Cofactor");
pub const wszINFKEY_ECCKEYPARAMETERS_ORDER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_Order");
pub const wszINFKEY_ECCKEYPARAMETERS_P: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_P");
pub const wszINFKEY_ECCKEYPARAMETERS_SEED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EccKeyParameters_Seed");
pub const wszINFKEY_EMAIL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EMail");
pub const wszINFKEY_EMPTY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Empty");
pub const wszINFKEY_ENABLEKEYCOUNTING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnableKeyCounting");
pub const wszINFKEY_ENCRYPTIONALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EncryptionAlgorithm");
pub const wszINFKEY_ENCRYPTIONLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EncryptionLength");
pub const wszINFKEY_EXCLUDE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Exclude");
pub const wszINFKEY_EXPORTABLE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Exportable");
pub const wszINFKEY_EXPORTABLEENCRYPTED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExportableEncrypted");
pub const wszINFKEY_FLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Flags");
pub const wszINFKEY_FORCEUTF8: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ForceUTF8");
pub const wszINFKEY_FRIENDLYNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("FriendlyName");
pub const wszINFKEY_HASHALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HashAlgorithm");
pub const wszINFKEY_INCLUDE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Include");
pub const wszINFKEY_INHIBITPOLICYMAPPING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("InhibitPolicyMapping");
pub const wszINFKEY_IPADDRESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("IPAddress");
pub const wszINFKEY_KEYALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyAlgorithm");
pub const wszINFKEY_KEYALGORITHMPARMETERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyAlgorithmParameters");
pub const wszINFKEY_KEYCONTAINER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyContainer");
pub const wszINFKEY_KEYLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyLength");
pub const wszINFKEY_KEYPROTECTION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyProtection");
pub const wszINFKEY_KEYUSAGEEXTENSION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyUsage");
pub const wszINFKEY_KEYUSAGEPROPERTY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyUsageProperty");
pub const wszINFKEY_LEGACYKEYSPEC: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeySpec");
pub const wszINFKEY_LOADDEFAULTTEMPLATES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LoadDefaultTemplates");
pub const wszINFKEY_MACHINEKEYSET: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MachineKeySet");
pub const wszINFKEY_NOTAFTER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NotAfter");
pub const wszINFKEY_NOTBEFORE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NotBefore");
pub const wszINFKEY_NOTICE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Notice");
pub const wszINFKEY_OID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("OID");
pub const wszINFKEY_OTHERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("OtherName");
pub const wszINFKEY_PATHLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PathLength");
pub const wszINFKEY_POLICIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Policies");
pub const wszINFKEY_PRIVATEKEYARCHIVE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PrivateKeyArchive");
pub const wszINFKEY_PROVIDERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ProviderName");
pub const wszINFKEY_PROVIDERTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ProviderType");
pub const wszINFKEY_PUBLICKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublicKey");
pub const wszINFKEY_PUBLICKEYPARAMETERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublicKeyParameters");
pub const wszINFKEY_READERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ReaderName");
pub const wszINFKEY_REGISTEREDID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RegisteredId");
pub const wszINFKEY_RENEWALCERT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RenewalCert");
pub const wszINFKEY_RENEWALKEYLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RenewalKeyLength");
pub const wszINFKEY_RENEWALVALIDITYPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RenewalValidityPeriodUnits");
pub const wszINFKEY_RENEWALVALIDITYPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RenewalValidityPeriod");
pub const wszINFKEY_REQUESTTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestType");
pub const wszINFKEY_REQUIREEXPLICITPOLICY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequireExplicitPolicy");
pub const wszINFKEY_SECURITYDESCRIPTOR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SecurityDescriptor");
pub const wszINFKEY_SERIALNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SerialNumber");
pub const wszINFKEY_SHOWALLCSPS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ShowAllCSPs");
pub const wszINFKEY_SILENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Silent");
pub const wszINFKEY_SMIME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SMIME");
pub const wszINFKEY_SUBJECT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Subject");
pub const wszINFKEY_SUBJECTNAMEFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectNameFlags");
pub const wszINFKEY_SUBTREE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubTree");
pub const wszINFKEY_SUPPRESSDEFAULTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SuppressDefaults");
pub const wszINFKEY_UICONTEXTMESSAGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UIContextMessage");
pub const wszINFKEY_UPN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UPN");
pub const wszINFKEY_URL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("URL");
pub const wszINFKEY_USEEXISTINGKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UseExistingKeySet");
pub const wszINFKEY_USERPROTECTED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UserProtected");
pub const wszINFKEY_UTF8: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UTF8");
pub const wszINFKEY_X500NAMEFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("X500NameFlags");
pub const wszINFSECTION_AIA: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AuthorityInformationAccess");
pub const wszINFSECTION_APPLICATIONPOLICYCONSTRAINTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ApplicationPolicyConstraintsExtension");
pub const wszINFSECTION_APPLICATIONPOLICYMAPPINGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ApplicationPolicyMappingsExtension");
pub const wszINFSECTION_APPLICATIONPOLICYSTATEMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ApplicationPolicyStatementExtension");
pub const wszINFSECTION_BASICCONSTRAINTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BasicConstraintsExtension");
pub const wszINFSECTION_CAPOLICY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAPolicy");
pub const wszINFSECTION_CCDP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CrossCertificateDistributionPointsExtension");
pub const wszINFSECTION_CDP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDistributionPoint");
pub const wszINFSECTION_CERTSERVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("certsrv_server");
pub const wszINFSECTION_EKU: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnhancedKeyUsageExtension");
pub const wszINFSECTION_EXTENSIONS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Extensions");
pub const wszINFSECTION_NAMECONSTRAINTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NameConstraintsExtension");
pub const wszINFSECTION_NEWREQUEST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NewRequest");
pub const wszINFSECTION_POLICYCONSTRAINTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PolicyConstraintsExtension");
pub const wszINFSECTION_POLICYMAPPINGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PolicyMappingsExtension");
pub const wszINFSECTION_POLICYSTATEMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PolicyStatementExtension");
pub const wszINFSECTION_PROPERTIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Properties");
pub const wszINFSECTION_REQUESTATTRIBUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestAttributes");
pub const wszINFVALUE_ENDORSEMENTKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EndorsementKey");
pub const wszINFVALUE_REQUESTTYPE_CERT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Cert");
pub const wszINFVALUE_REQUESTTYPE_CMC: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CMC");
pub const wszINFVALUE_REQUESTTYPE_PKCS10: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PKCS10");
pub const wszINFVALUE_REQUESTTYPE_PKCS7: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PKCS7");
pub const wszINFVALUE_REQUESTTYPE_SCEP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SCEP");
pub const wszLDAPSESSIONOPTIONVALUE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPSessionOptionValue");
pub const wszLOCALIZEDTIMEPERIODUNITS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LocalizedTimePeriodUnits");
pub const wszLOGFILENAMEEXT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".log");
pub const wszLOGPATH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertLog");
pub const wszMACHINEKEYSET: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MachineKeyset");
pub const wszMICROSOFTCERTMODULE_PREFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateAuthority_MicrosoftDefault");
pub const wszNETSCAPEREVOCATIONTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Netscape");
pub const wszOCSPCAPROP_CACERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACertificate");
pub const wszOCSPCAPROP_CACONFIG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAConfig");
pub const wszOCSPCAPROP_CSPNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CSPName");
pub const wszOCSPCAPROP_ERRORCODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ErrorCode");
pub const wszOCSPCAPROP_HASHALGORITHMID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HashAlgorithmId");
pub const wszOCSPCAPROP_KEYSPEC: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeySpec");
pub const wszOCSPCAPROP_LOCALREVOCATIONINFORMATION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LocalRevocationInformation");
pub const wszOCSPCAPROP_PROVIDERCLSID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ProviderCLSID");
pub const wszOCSPCAPROP_PROVIDERPROPERTIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Provider");
pub const wszOCSPCAPROP_REMINDERDURATION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ReminderDuration");
pub const wszOCSPCAPROP_SIGNINGCERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SigningCertificate");
pub const wszOCSPCAPROP_SIGNINGCERTIFICATETEMPLATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SigningCertificateTemplate");
pub const wszOCSPCAPROP_SIGNINGFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SigningFlags");
pub const wszOCSPCOMMONPROP_MAXINCOMINGMESSAGESIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxIncomingMessageSize");
pub const wszOCSPCOMMONPROP_MAXNUMOFREQUESTENTRIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxNumOfRequestEntries");
pub const wszOCSPCOMMONPROP_REQFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestFlags");
pub const wszOCSPISAPIPROP_DEBUG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ISAPIDebug");
pub const wszOCSPISAPIPROP_MAXAGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxAge");
pub const wszOCSPISAPIPROP_MAXNUMOFCACHEENTRIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxNumOfCacheEntries");
pub const wszOCSPISAPIPROP_NUMOFBACKENDCONNECTIONS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NumOfBackendConnections");
pub const wszOCSPISAPIPROP_NUMOFTHREADS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NumOfThreads");
pub const wszOCSPISAPIPROP_REFRESHRATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RefreshRate");
pub const wszOCSPISAPIPROP_VIRTUALROOTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("VirtualRootName");
pub const wszOCSPPROP_ARRAYCONTROLLER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ArrayController");
pub const wszOCSPPROP_ARRAYMEMBERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ArrayMembers");
pub const wszOCSPPROP_AUDITFILTER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AuditFilter");
pub const wszOCSPPROP_DEBUG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Debug");
pub const wszOCSPPROP_ENROLLPOLLINTERVAL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnrollPollInterval");
pub const wszOCSPPROP_LOGLEVEL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LogLevel");
pub const wszOCSPREVPROP_BASECRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BaseCrl");
pub const wszOCSPREVPROP_BASECRLURLS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BaseCrlUrls");
pub const wszOCSPREVPROP_CRLURLTIMEOUT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CrlUrlTimeOut");
pub const wszOCSPREVPROP_DELTACRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DeltaCrl");
pub const wszOCSPREVPROP_DELTACRLURLS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DeltaCrlUrls");
pub const wszOCSPREVPROP_ERRORCODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevocationErrorCode");
pub const wszOCSPREVPROP_REFRESHTIMEOUT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RefreshTimeOut");
pub const wszOCSPREVPROP_SERIALNUMBERSDIRS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("IssuedSerialNumbersDirectories");
pub const wszPERIODDAYS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Days");
pub const wszPERIODHOURS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Hours");
pub const wszPERIODMINUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Minutes");
pub const wszPERIODMONTHS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Months");
pub const wszPERIODSECONDS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Seconds");
pub const wszPERIODWEEKS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Weeks");
pub const wszPERIODYEARS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Years");
pub const wszPFXFILENAMEEXT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!(".p12");
pub const wszPROPATTESTATIONCHALLENGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AttestationChallenge");
pub const wszPROPATTRIBNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AttributeName");
pub const wszPROPATTRIBREQUESTID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AttributeRequestId");
pub const wszPROPATTRIBVALUE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AttributeValue");
pub const wszPROPCALLERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CallerName");
pub const wszPROPCATYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAType");
pub const wszPROPCERTCLIENTMACHINE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ccm");
pub const wszPROPCERTCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertCount");
pub const wszPROPCERTIFICATEENROLLMENTFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnrollmentFlags");
pub const wszPROPCERTIFICATEGENERALFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("GeneralFlags");
pub const wszPROPCERTIFICATEHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateHash");
pub const wszPROPCERTIFICATENOTAFTERDATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NotAfter");
pub const wszPROPCERTIFICATENOTBEFOREDATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NotBefore");
pub const wszPROPCERTIFICATEPRIVATEKEYFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PrivatekeyFlags");
pub const wszPROPCERTIFICATEPUBLICKEYALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublicKeyAlgorithm");
pub const wszPROPCERTIFICATEPUBLICKEYLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublicKeyLength");
pub const wszPROPCERTIFICATERAWPUBLICKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawPublicKey");
pub const wszPROPCERTIFICATERAWPUBLICKEYALGORITHMPARAMETERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawPublicKeyAlgorithmParameters");
pub const wszPROPCERTIFICATERAWSMIMECAPABILITIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawSMIMECapabilities");
pub const wszPROPCERTIFICATEREQUESTID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestID");
pub const wszPROPCERTIFICATESERIALNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SerialNumber");
pub const wszPROPCERTIFICATESUBJECTKEYIDENTIFIER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectKeyIdentifier");
pub const wszPROPCERTIFICATETEMPLATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateTemplate");
pub const wszPROPCERTIFICATETYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateType");
pub const wszPROPCERTIFICATEUPN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UPN");
pub const wszPROPCERTSTATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertState");
pub const wszPROPCERTSUFFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertSuffix");
pub const wszPROPCERTTEMPLATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateTemplate");
pub const wszPROPCERTTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertType");
pub const wszPROPCERTUSAGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertificateUsage");
pub const wszPROPCHALLENGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Challenge");
pub const wszPROPCLIENTBROWSERMACHINE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("cbm");
pub const wszPROPCLIENTDCDNS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("cdc");
pub const wszPROPCOMMONNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CommonName");
pub const wszPROPCONFIGDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ConfigDN");
pub const wszPROPCOUNTRY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Country");
pub const wszPROPCRITICALTAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{critical}");
pub const wszPROPCRLCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLCount");
pub const wszPROPCRLEFFECTIVE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLEffective");
pub const wszPROPCRLINDEX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLIndex");
pub const wszPROPCRLLASTPUBLISHED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLLastPublished");
pub const wszPROPCRLMINBASE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLMinBase");
pub const wszPROPCRLNAMEID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLNameId");
pub const wszPROPCRLNEXTPUBLISH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLNextPublish");
pub const wszPROPCRLNEXTUPDATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLNextUpdate");
pub const wszPROPCRLNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLNumber");
pub const wszPROPCRLPROPAGATIONCOMPLETE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPropagationComplete");
pub const wszPROPCRLPUBLISHATTEMPTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublishAttempts");
pub const wszPROPCRLPUBLISHERROR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublishError");
pub const wszPROPCRLPUBLISHFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublishFlags");
pub const wszPROPCRLPUBLISHSTATUSCODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublishStatusCode");
pub const wszPROPCRLRAWCRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLRawCRL");
pub const wszPROPCRLROWID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLRowId");
pub const wszPROPCRLSTATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLState");
pub const wszPROPCRLSUFFIX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLSuffix");
pub const wszPROPCRLTHISPUBLISH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLThisPublish");
pub const wszPROPCRLTHISUPDATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLThisUpdate");
pub const wszPROPCROSSFOREST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CrossForest");
pub const wszPROPDCNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DCName");
pub const wszPROPDECIMALTAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{decimal}");
pub const wszPROPDELTACRLSDISABLED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("fDeltaCRLsDisabled");
pub const wszPROPDEVICESERIALNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DeviceSerialNumber");
pub const wszPROPDISPOSITION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Disposition");
pub const wszPROPDISPOSITIONDENY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Deny");
pub const wszPROPDISPOSITIONPENDING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Pending");
pub const wszPROPDISTINGUISHEDNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DistinguishedName");
pub const wszPROPDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("dn");
pub const wszPROPDNS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("dns");
pub const wszPROPDOMAINCOMPONENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DomainComponent");
pub const wszPROPDOMAINDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DomainDN");
pub const wszPROPEMAIL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EMail");
pub const wszPROPENDORSEMENTCERTIFICATEHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EndorsementCertificateHash");
pub const wszPROPENDORSEMENTKEYHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EndorsementKeyHash");
pub const wszPROPEVENTLOGERROR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventLogError");
pub const wszPROPEVENTLOGEXHAUSTIVE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventLogExhaustive");
pub const wszPROPEVENTLOGTERSE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventLogTerse");
pub const wszPROPEVENTLOGVERBOSE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventLogVerbose");
pub const wszPROPEVENTLOGWARNING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventLogWarning");
pub const wszPROPEXITCERTFILE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertFile");
pub const wszPROPEXPECTEDCHALLENGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExpectedChallenge");
pub const wszPROPEXPIRATIONDATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExpirationDate");
pub const wszPROPEXTFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExtensionFlags");
pub const wszPROPEXTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExtensionName");
pub const wszPROPEXTRAWVALUE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExtensionRawValue");
pub const wszPROPEXTREQUESTID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExtensionRequestId");
pub const wszPROPFILETAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{file}");
pub const wszPROPGIVENNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("GivenName");
pub const wszPROPGUID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("guid");
pub const wszPROPHEXTAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{hex}");
pub const wszPROPINITIALS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Initials");
pub const wszPROPIPADDRESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ipaddress");
pub const wszPROPKEYARCHIVED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyArchived");
pub const wszPROPLOCALITY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Locality");
pub const wszPROPLOGLEVEL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LogLevel");
pub const wszPROPMACHINEDNSNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MachineDNSName");
pub const wszPROPMODULEREGLOC: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ModuleRegistryLocation");
pub const wszPROPNAMETYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NameType");
pub const wszPROPOCTETTAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{octet}");
pub const wszPROPOFFICER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Officer");
pub const wszPROPOID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("oid");
pub const wszPROPORGANIZATION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Organization");
pub const wszPROPORGUNIT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("OrgUnit");
pub const wszPROPPUBLISHEXPIREDCERTINCRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublishExpiredCertInCRL");
pub const wszPROPRAWCACERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawCACertificate");
pub const wszPROPRAWCERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawCertificate");
pub const wszPROPRAWCRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawCRL");
pub const wszPROPRAWDELTACRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawDeltaCRL");
pub const wszPROPRAWNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawName");
pub const wszPROPRAWPRECERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawPrecertificate");
pub const wszPROPREQUESTARCHIVEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ArchivedKey");
pub const wszPROPREQUESTATTRIBUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestAttributes");
pub const wszPROPREQUESTCSPPROVIDER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestCSPProvider");
pub const wszPROPREQUESTDISPOSITION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Disposition");
pub const wszPROPREQUESTDISPOSITIONMESSAGE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DispositionMessage");
pub const wszPROPREQUESTDOT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Request.");
pub const wszPROPREQUESTERCAACCESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterCAAccess");
pub const wszPROPREQUESTERDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterDN");
pub const wszPROPREQUESTERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterName");
pub const wszPROPREQUESTERNAMEFROMOLDCERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterNameFromOldCertificate");
pub const wszPROPREQUESTERSAMNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterSAMName");
pub const wszPROPREQUESTERUPN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterUPN");
pub const wszPROPREQUESTFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestFlags");
pub const wszPROPREQUESTKEYRECOVERYHASHES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyRecoveryHashes");
pub const wszPROPREQUESTMACHINEDNS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("rmd");
pub const wszPROPREQUESTOSVERSION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestOSVersion");
pub const wszPROPREQUESTRAWARCHIVEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawArchivedKey");
pub const wszPROPREQUESTRAWOLDCERTIFICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawOldCertificate");
pub const wszPROPREQUESTRAWREQUEST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RawRequest");
pub const wszPROPREQUESTREQUESTID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestID");
pub const wszPROPREQUESTRESOLVEDWHEN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ResolvedWhen");
pub const wszPROPREQUESTREVOKEDEFFECTIVEWHEN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevokedEffectiveWhen");
pub const wszPROPREQUESTREVOKEDREASON: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevokedReason");
pub const wszPROPREQUESTREVOKEDWHEN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevokedWhen");
pub const wszPROPREQUESTSTATUSCODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("StatusCode");
pub const wszPROPREQUESTSUBMITTEDWHEN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubmittedWhen");
pub const wszPROPREQUESTTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestType");
pub const wszPROPSANITIZEDCANAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SanitizedCAName");
pub const wszPROPSANITIZEDSHORTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SanitizedShortName");
pub const wszPROPSEAUDITFILTER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SEAuditFilter");
pub const wszPROPSEAUDITID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SEAuditId");
pub const wszPROPSERVERUPGRADED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("fServerUpgraded");
pub const wszPROPSESSIONCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SessionCount");
pub const wszPROPSIGNERAPPLICATIONPOLICIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SignerApplicationPolicies");
pub const wszPROPSIGNERPOLICIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SignerPolicies");
pub const wszPROPSTATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("State");
pub const wszPROPSTREETADDRESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("StreetAddress");
pub const wszPROPSUBJECTALTNAME2: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("san");
pub const wszPROPSUBJECTDOT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Subject.");
pub const wszPROPSURNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SurName");
pub const wszPROPTEMPLATECHANGESEQUENCENUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("TemplateChangeSequenceNumber");
pub const wszPROPTEXTTAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{text}");
pub const wszPROPTITLE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Title");
pub const wszPROPUNSTRUCTUREDADDRESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UnstructuredAddress");
pub const wszPROPUNSTRUCTUREDNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UnstructuredName");
pub const wszPROPUPN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("upn");
pub const wszPROPURL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("url");
pub const wszPROPUSEDS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("fUseDS");
pub const wszPROPUSERDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UserDN");
pub const wszPROPUTF8TAG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("{utf8}");
pub const wszPROPVALIDITYPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ValidityPeriodUnits");
pub const wszPROPVALIDITYPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ValidityPeriod");
pub const wszPROPVOLATILEMODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("VolatileMode");
pub const wszREGACTIVE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Active");
pub const wszREGAELOGLEVEL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AEEventLogLevel");
pub const wszREGAIKCLOUDCAURL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AIKCloudCAURL");
pub const wszREGAIKKEYALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AIKKeyAlgorithm");
pub const wszREGAIKKEYLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AIKKeyLength");
pub const wszREGALLPROVIDERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("All");
pub const wszREGALTERNATEPUBLISHDOMAINS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AlternatePublishDomains");
pub const wszREGALTERNATESIGNATUREALGORITHM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AlternateSignatureAlgorithm");
pub const wszREGAUDITFILTER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("AuditFilter");
pub const wszREGB2ICERTMANAGEMODULE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ICertManageModule");
pub const wszREGBACKUPLOGDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BackupLogDirectory");
pub const wszREGCACERTFILENAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACertFileName");
pub const wszREGCACERTHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACertHash");
pub const wszREGCACERTPUBLICATIONURLS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACertPublicationURLs");
pub const wszREGCADESCRIPTION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CADescription");
pub const wszREGCAPATHLENGTH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAPathLength");
pub const wszREGCASECURITY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Security");
pub const wszREGCASERIALNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CACertSerialNumber");
pub const wszREGCASERVERNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAServerName");
pub const wszREGCATYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAType");
pub const wszREGCAUSEDS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UseDS");
pub const wszREGCAXCHGCERTHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAXchgCertHash");
pub const wszREGCAXCHGOVERLAPPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAXchgOverlapPeriodUnits");
pub const wszREGCAXCHGOVERLAPPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAXchgOverlapPeriod");
pub const wszREGCAXCHGVALIDITYPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAXchgValidityPeriodUnits");
pub const wszREGCAXCHGVALIDITYPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CAXchgValidityPeriod");
pub const wszREGCERTENROLLCOMPATIBLE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertEnrollCompatible");
pub const wszREGCERTIFICATETRANSPARENCYINFOOID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CTInformationExtensionOid");
pub const wszREGCERTPUBLISHFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PublishCertFlags");
pub const wszREGCERTSRVDEBUG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Debug");
pub const wszREGCHECKPOINTFILE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CheckPointFile");
pub const wszREGCLOCKSKEWMINUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ClockSkewMinutes");
pub const wszREGCOMMONNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CommonName");
pub const wszREGCRLATTEMPTREPUBLISH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLAttemptRepublish");
pub const wszREGCRLDELTANEXTPUBLISH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaNextPublish");
pub const wszREGCRLDELTAOVERLAPPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaOverlapUnits");
pub const wszREGCRLDELTAOVERLAPPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaOverlapPeriod");
pub const wszREGCRLDELTAPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaPeriodUnits");
pub const wszREGCRLDELTAPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLDeltaPeriod");
pub const wszREGCRLEDITFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLEditFlags");
pub const wszREGCRLFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLFlags");
pub const wszREGCRLNEXTPUBLISH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLNextPublish");
pub const wszREGCRLOVERLAPPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLOverlapUnits");
pub const wszREGCRLOVERLAPPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLOverlapPeriod");
pub const wszREGCRLPATH_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPath");
pub const wszREGCRLPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPeriodUnits");
pub const wszREGCRLPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPeriod");
pub const wszREGCRLPUBLICATIONURLS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLPublicationURLs");
pub const wszREGDATABASERECOVERED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DatabaseRecovered");
pub const wszREGDBDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBDirectory");
pub const wszREGDBFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBFlags");
pub const wszREGDBLASTFULLBACKUP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBLastFullBackup");
pub const wszREGDBLASTINCREMENTALBACKUP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBLastIncrementalBackup");
pub const wszREGDBLASTRECOVERY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBLastRecovery");
pub const wszREGDBLOGDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBLogDirectory");
pub const wszREGDBMAXREADSESSIONCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBMaxReadSessionCount");
pub const wszREGDBSESSIONCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBSessionCount");
pub const wszREGDBSYSDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBSystemDirectory");
pub const wszREGDBTEMPDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBTempDirectory");
pub const wszREGDEFAULTSMIME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DefaultSMIME");
pub const wszREGDIRECTORY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ConfigurationDirectory");
pub const wszREGDISABLEEXTENSIONLIST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DisableExtensionList");
pub const wszREGDISABLESECEXTENSION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DisableSecExtension");
pub const wszREGDSCONFIGDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DSConfigDN");
pub const wszREGDSDOMAINDN: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DSDomainDN");
pub const wszREGEDITFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EditFlags");
pub const wszREGEKPUBLISTDIRECTORIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EndorsementKeyListDirectories");
pub const wszREGEKUOIDSFORPUBLISHEXPIREDCERTINCRL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EKUOIDsForPublishExpiredCertInCRL");
pub const wszREGEKUOIDSFORVOLATILEREQUESTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EKUOIDsforVolatileRequests");
pub const wszREGENABLED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Enabled");
pub const wszREGENABLEDEKUFORDEFINEDCACERT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnabledEKUForDefinedCACert");
pub const wszREGENABLEENROLLEEREQUESTEXTENSIONLIST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnableEnrolleeRequestExtensionList");
pub const wszREGENABLEREQUESTEXTENSIONLIST: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnableRequestExtensionList");
pub const wszREGENFORCEX500NAMELENGTHS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnforceX500NameLengths");
pub const wszREGENROLLFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EnrollFlags");
pub const wszREGEXITBODYARG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BodyArg");
pub const wszREGEXITBODYFORMAT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("BodyFormat");
pub const wszREGEXITCRLISSUEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CRLIssued");
pub const wszREGEXITDENIEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Denied");
pub const wszREGEXITIMPORTEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Imported");
pub const wszREGEXITISSUEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Issued");
pub const wszREGEXITPENDINGKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Pending");
pub const wszREGEXITPROPNOTFOUND: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("???");
pub const wszREGEXITREVOKEDKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Revoked");
pub const wszREGEXITSHUTDOWNKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Shutdown");
pub const wszREGEXITSMTPAUTHENTICATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SMTPAuthenticate");
pub const wszREGEXITSMTPCC: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Cc");
pub const wszREGEXITSMTPEVENTFILTER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EventFilter");
pub const wszREGEXITSMTPFROM: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("From");
pub const wszREGEXITSMTPKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SMTP");
pub const wszREGEXITSMTPSERVER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SMTPServer");
pub const wszREGEXITSMTPTEMPLATES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Templates");
pub const wszREGEXITSMTPTO: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("To");
pub const wszREGEXITSTARTUPKEY: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Startup");
pub const wszREGEXITTITLEARG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("TitleArg");
pub const wszREGEXITTITLEFORMAT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("TitleFormat");
pub const wszREGFILEISSUERCERTURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("FileIssuerCertURL");
pub const wszREGFILEREVOCATIONCRLURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("FileRevocationCRLURL");
pub const wszREGFORCETELETEX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ForceTeletex");
pub const wszREGFTPISSUERCERTURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("FTPIssuerCertURL");
pub const wszREGFTPREVOCATIONCRLURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("FTPRevocationCRLURL");
pub const wszREGHIGHLOGNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HighLogNumber");
pub const wszREGHIGHSERIAL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("HighSerial");
pub const wszREGINTERFACEFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("InterfaceFlags");
pub const wszREGISSUERCERTURLFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("IssuerCertURLFlags");
pub const wszREGISSUERCERTURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("IssuerCertURL");
pub const wszREGKEYBASE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SYSTEM\\CurrentControlSet\\Services\\CertSvc");
pub const wszREGKEYCERTSVCPATH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SYSTEM\\CurrentControlSet\\Services\\CertSvc");
pub const wszREGKEYCONFIG: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Configuration");
pub const wszREGKEYCSP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CSP");
pub const wszREGKEYDBPARAMETERS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DBParameters");
pub const wszREGKEYENCRYPTIONCSP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("EncryptionCSP");
pub const wszREGKEYENROLLMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Software\\Microsoft\\Cryptography\\AutoEnrollment");
pub const wszREGKEYEXITMODULES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ExitModules");
pub const wszREGKEYGROUPPOLICYENROLLMENT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Software\\Policies\\Microsoft\\Cryptography\\AutoEnrollment");
pub const wszREGKEYNOSYSTEMCERTSVCPATH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CurrentControlSet\\Services\\CertSvc");
pub const wszREGKEYPOLICYMODULES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PolicyModules");
pub const wszREGKEYREPAIR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeyRepair");
pub const wszREGKEYRESTOREINPROGRESS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RestoreInProgress");
pub const wszREGKEYSIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeySize");
pub const wszREGKRACERTCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KRACertCount");
pub const wszREGKRACERTHASH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KRACertHash");
pub const wszREGKRAFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KRAFlags");
pub const wszREGLDAPFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPFlags");
pub const wszREGLDAPISSUERCERTURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPIssuerCertURL");
pub const wszREGLDAPREVOCATIONCRLURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPRevocationCRLURL");
pub const wszREGLDAPREVOCATIONDNTEMPLATE_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPRevocationDNTemplate");
pub const wszREGLDAPREVOCATIONDN_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPRevocationDN");
pub const wszREGLDAPSESSIONOPTIONS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LDAPSessionOptions");
pub const wszREGLOGLEVEL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LogLevel");
pub const wszREGLOGPATH: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LogPath");
pub const wszREGLOWLOGNUMBER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("LowLogNumber");
pub const wszREGMAXINCOMINGALLOCSIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxIncomingAllocSize");
pub const wszREGMAXINCOMINGMESSAGESIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxIncomingMessageSize");
pub const wszREGMAXPENDINGREQUESTDAYS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxPendingRequestDays");
pub const wszREGMAXSCTLISTSIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("MaxSCTListSize");
pub const wszREGNAMESEPARATOR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectNameSeparator");
pub const wszREGNETSCAPECERTTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("NetscapeCertType");
pub const wszREGOFFICERRIGHTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("OfficerRights");
pub const wszREGPARENTCAMACHINE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ParentCAMachine");
pub const wszREGPARENTCANAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ParentCAName");
pub const wszREGPOLICYFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PolicyFlags");
pub const wszREGPRESERVESCEPDUMMYCERTS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("PreserveSCEPDummyCerts");
pub const wszREGPROCESSINGFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ProcessingFlags");
pub const wszREGPROVIDER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Provider");
pub const wszREGPROVIDERTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ProviderType");
pub const wszREGREQUESTDISPOSITION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestDisposition");
pub const wszREGREQUESTFILENAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestFileName");
pub const wszREGREQUESTID: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestId");
pub const wszREGREQUESTKEYCONTAINER: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestKeyContainer");
pub const wszREGREQUESTKEYINDEX: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequestKeyIndex");
pub const wszREGRESTOREMAP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RestoreMap");
pub const wszREGRESTOREMAPCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RestoreMapCount");
pub const wszREGRESTORESTATUS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RestoreStatus");
pub const wszREGREVOCATIONCRLURL_OLD: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevocationCRLURL");
pub const wszREGREVOCATIONTYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevocationType");
pub const wszREGREVOCATIONURL: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RevocationURL");
pub const wszREGROLESEPARATIONENABLED: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RoleSeparationEnabled");
pub const wszREGSETUPSTATUS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SetupStatus");
pub const wszREGSP4DEFAULTCONFIGURATION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("DefaultConfiguration");
pub const wszREGSP4KEYSETNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("KeySetName");
pub const wszREGSP4NAMES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Names");
pub const wszREGSP4QUERIES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Queries");
pub const wszREGSP4SUBJECTNAMESEPARATOR: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectNameSeparator");
pub const wszREGSUBJECTALTNAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectAltName");
pub const wszREGSUBJECTALTNAME2: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectAltName2");
pub const wszREGSUBJECTTEMPLATE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SubjectTemplate");
pub const wszREGSYMMETRICKEYSIZE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SymmetricKeySize");
pub const wszREGUNICODE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Unicode");
pub const wszREGUPNMAP: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UPNMap");
pub const wszREGUSEDEFINEDCACERTINREQ: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("UseDefinedCACertInRequest");
pub const wszREGVALIDITYPERIODCOUNT: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ValidityPeriodUnits");
pub const wszREGVALIDITYPERIODSTRING: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ValidityPeriod");
pub const wszREGVERIFYFLAGS: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("VerifyFlags");
pub const wszREGVERSION: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("Version");
pub const wszREGVIEWAGEMINUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ViewAgeMinutes");
pub const wszREGVIEWIDLEMINUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("ViewIdleMinutes");
pub const wszREGWEBCLIENTCAMACHINE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("WebClientCAMachine");
pub const wszREGWEBCLIENTCANAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("WebClientCAName");
pub const wszREGWEBCLIENTCATYPE: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("WebClientCAType");
pub const wszSECUREDATTRIBUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("SignedAttributes");
pub const wszSERVICE_NAME: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("CertSvc");
pub const wszzDEFAULTSIGNEDATTRIBUTES: ::windows_sys::core::PCWSTR = ::windows_sys::core::w!("RequesterName\u{0}");
pub type ADDED_CERT_TYPE = i32;
pub type AlgorithmFlags = i32;
pub type AlgorithmOperationFlags = i32;
pub type AlgorithmType = i32;
pub type AlternativeNameType = i32;
pub type CERTADMIN_GET_ROLES_FLAGS = u32;
pub type CERTENROLL_OBJECTID = i32;
pub type CERTENROLL_PROPERTYID = i32;
pub type CERT_ALT_NAME = i32;
pub type CERT_CREATE_REQUEST_FLAGS = i32;
pub type CERT_DELETE_ROW_FLAGS = i32;
pub type CERT_EXIT_EVENT_MASK = u32;
pub type CERT_GET_CONFIG_FLAGS = i32;
pub type CERT_IMPORT_FLAGS = i32;
pub type CERT_PROPERTY_TYPE = i32;
pub type CERT_REQUEST_OUT_TYPE = i32;
pub type CERT_VIEW_COLUMN_INDEX = i32;
pub type CERT_VIEW_SEEK_OPERATOR_FLAGS = i32;
pub type CRLRevocationReason = i32;
pub type CR_DISP = u32;
pub type CSBACKUP_TYPE = u32;
pub type CVRC_COLUMN = i32;
pub type CVRC_TABLE = i32;
pub type CommitTemplateFlags = i32;
pub type DelayRetryAction = i32;
pub type ENUM_CATYPES = i32;
pub type ENUM_CERT_COLUMN_VALUE_FLAGS = i32;
pub type EncodingType = i32;
pub type EnrollmentCAProperty = i32;
pub type EnrollmentDisplayStatus = i32;
pub type EnrollmentEnrollStatus = i32;
pub type EnrollmentPolicyFlags = i32;
pub type EnrollmentPolicyServerPropertyFlags = i32;
pub type EnrollmentSelectionStatus = i32;
pub type EnrollmentTemplateProperty = i32;
pub type FULL_RESPONSE_PROPERTY_ID = i32;
pub type ImportPFXFlags = i32;
pub type InnerRequestLevel = i32;
pub type InstallResponseRestrictionFlags = i32;
pub type KeyAttestationClaimType = i32;
pub type KeyIdentifierHashAlgorithm = i32;
pub type OCSPRequestFlag = i32;
pub type OCSPSigningFlag = i32;
pub type ObjectIdGroupId = i32;
pub type ObjectIdPublicKeyFlags = i32;
pub type PENDING_REQUEST_DESIRED_PROPERTY = i32;
pub type PFXExportOptions = i32;
pub type Pkcs10AllowedSignatureTypes = i32;
pub type PolicyQualifierType = i32;
pub type PolicyServerUrlFlags = i32;
pub type PolicyServerUrlPropertyID = i32;
pub type RequestClientInfoClientId = i32;
pub type WebEnrollmentFlags = i32;
pub type WebSecurityLevel = i32;
pub type X500NameFlags = i32;
pub type X509CertificateEnrollmentContext = i32;
pub type X509CertificateTemplateEnrollmentFlag = i32;
pub type X509CertificateTemplateGeneralFlag = i32;
pub type X509CertificateTemplatePrivateKeyFlag = i32;
pub type X509CertificateTemplateSubjectNameFlag = i32;
pub type X509EnrollmentAuthFlags = i32;
pub type X509EnrollmentPolicyExportFlags = i32;
pub type X509EnrollmentPolicyLoadOption = i32;
pub type X509HardwareKeyUsageFlags = i32;
pub type X509KeyParametersExportType = i32;
pub type X509KeySpec = i32;
pub type X509KeyUsageFlags = i32;
pub type X509PrivateKeyExportFlags = i32;
pub type X509PrivateKeyProtection = i32;
pub type X509PrivateKeyUsageFlags = i32;
pub type X509PrivateKeyVerify = i32;
pub type X509ProviderType = i32;
pub type X509RequestInheritOptions = i32;
pub type X509RequestType = i32;
pub type X509SCEPDisposition = i32;
pub type X509SCEPFailInfo = i32;
pub type X509SCEPMessageType = i32;
pub type X509SCEPProcessMessageFlags = i32;
pub type XEKL_KEYSIZE = i32;
pub type XEKL_KEYSPEC = i32;
#[repr(C)]
pub struct CAINFO {
    pub cbSize: u32,
    pub CAType: ENUM_CATYPES,
    pub cCASignatureCerts: u32,
    pub cCAExchangeCerts: u32,
    pub cExitModules: u32,
    pub lPropIdMax: i32,
    pub lRoleSeparationEnabled: i32,
    pub cKRACertUsedCount: u32,
    pub cKRACertCount: u32,
    pub fAdvancedServer: u32,
}
impl ::core::marker::Copy for CAINFO {}
impl ::core::clone::Clone for CAINFO {
    fn clone(&self) -> Self {
        *self
    }
}
#[repr(C)]
pub struct CERTTRANSBLOB {
    pub cb: u32,
    pub pb: *mut u8,
}
impl ::core::marker::Copy for CERTTRANSBLOB {}
impl ::core::clone::Clone for CERTTRANSBLOB {
    fn clone(&self) -> Self {
        *self
    }
}
#[repr(C)]
pub struct CERTVIEWRESTRICTION {
    pub ColumnIndex: u32,
    pub SeekOperator: i32,
    pub SortOrder: i32,
    pub pbValue: *mut u8,
    pub cbValue: u32,
}
impl ::core::marker::Copy for CERTVIEWRESTRICTION {}
impl ::core::clone::Clone for CERTVIEWRESTRICTION {
    fn clone(&self) -> Self {
        *self
    }
}
#[repr(C)]
pub struct CSEDB_RSTMAPW {
    pub pwszDatabaseName: ::windows_sys::core::PWSTR,
    pub pwszNewDatabaseName: ::windows_sys::core::PWSTR,
}
impl ::core::marker::Copy for CSEDB_RSTMAPW {}
impl ::core::clone::Clone for CSEDB_RSTMAPW {
    fn clone(&self) -> Self {
        *self
    }
}
pub type FNCERTSRVBACKUPCLOSE = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPEND = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPFREE = ::core::option::Option<unsafe extern "system" fn(pv: *mut ::core::ffi::c_void) -> ()>;
pub type FNCERTSRVBACKUPGETBACKUPLOGSW = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, ppwszzbackuplogfiles: *mut *mut u16, pcbsize: *mut u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPGETDATABASENAMESW = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, ppwszzattachmentinformation: *mut *mut u16, pcbsize: *mut u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPGETDYNAMICFILELISTW = ::core::option::Option<unsafe extern "system" fn(hbc: *const ::core::ffi::c_void, ppwszzfilelist: *mut *mut u16, pcbsize: *mut u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPOPENFILEW = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, pwszattachmentname: ::windows_sys::core::PCWSTR, cbreadhintsize: u32, plifilesize: *mut i64) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPPREPAREW = ::core::option::Option<unsafe extern "system" fn(pwszservername: ::windows_sys::core::PCWSTR, grbitjet: u32, dwbackupflags: u32, phbc: *mut *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPREAD = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, pvbuffer: *mut ::core::ffi::c_void, cbbuffer: u32, pcbread: *mut u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVBACKUPTRUNCATELOGS = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
#[doc = "Required features: `\"Win32_Foundation\"`"]
#[cfg(feature = "Win32_Foundation")]
pub type FNCERTSRVISSERVERONLINEW = ::core::option::Option<unsafe extern "system" fn(pwszservername: ::windows_sys::core::PCWSTR, pfserveronline: *mut super::super::super::Foundation::BOOL) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVRESTOREEND = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVRESTOREGETDATABASELOCATIONSW = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, ppwszzdatabaselocationlist: *mut *mut u16, pcbsize: *mut u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVRESTOREPREPAREW = ::core::option::Option<unsafe extern "system" fn(pwszservername: ::windows_sys::core::PCWSTR, dwrestoreflags: u32, phbc: *mut *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVRESTOREREGISTERCOMPLETE = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, hrrestorestate: ::windows_sys::core::HRESULT) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVRESTOREREGISTERW = ::core::option::Option<unsafe extern "system" fn(hbc: *mut ::core::ffi::c_void, pwszcheckpointfilepath: ::windows_sys::core::PCWSTR, pwszlogpath: ::windows_sys::core::PCWSTR, rgrstmap: *mut CSEDB_RSTMAPW, crstmap: i32, pwszbackuplogpath: ::windows_sys::core::PCWSTR, genlow: u32, genhigh: u32) -> ::windows_sys::core::HRESULT>;
pub type FNCERTSRVSERVERCONTROLW = ::core::option::Option<unsafe extern "system" fn(pwszservername: ::windows_sys::core::PCWSTR, dwcontrolflags: u32, pcbout: *mut u32, ppbout: *mut *mut u8) -> ::windows_sys::core::HRESULT>;
#[doc = "Required features: `\"Win32_Foundation\"`"]
#[cfg(feature = "Win32_Foundation")]
pub type FNIMPORTPFXTOPROVIDER = ::core::option::Option<unsafe extern "system" fn(hwndparent: super::super::super::Foundation::HWND, pbpfx: *const u8, cbpfx: u32, importflags: ImportPFXFlags, pwszpassword: ::windows_sys::core::PCWSTR, pwszprovidername: ::windows_sys::core::PCWSTR, pwszreadername: ::windows_sys::core::PCWSTR, pwszcontainernameprefix: ::windows_sys::core::PCWSTR, pwszpin: ::windows_sys::core::PCWSTR, pwszfriendlyname: ::windows_sys::core::PCWSTR, pccertout: *mut u32, prgpcertout: *mut *mut *mut super::CERT_CONTEXT) -> ::windows_sys::core::HRESULT>;
#[doc = "Required features: `\"Win32_Foundation\"`"]
#[cfg(feature = "Win32_Foundation")]
pub type FNIMPORTPFXTOPROVIDERFREEDATA = ::core::option::Option<unsafe extern "system" fn(ccert: u32, rgpcert: *const *const super::CERT_CONTEXT) -> ()>;
