// Bindings generated by `windows-bindgen` 0.58.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
#[repr(transparent)]
#[derive(PartialEq, Eq, Debug, Clone)]
pub struct ActivatableType(windows_core::IUnknown);
windows_core::imp::interface_hierarchy!(
    ActivatableType,
    windows_core::IUnknown,
    windows_core::IInspectable
);
impl ActivatableType {
    pub fn Value(&self) -> windows_core::Result<i32> {
        let this = self;
        unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).Value)(
                windows_core::Interface::as_raw(this),
                &mut result__,
            )
            .map(|| result__)
        }
    }
    pub fn CreateInstance(arg: i32) -> windows_core::Result<ActivatableType> {
        Self::IActivatableTypeFactory(|this| unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).CreateInstance)(
                windows_core::Interface::as_raw(this),
                arg,
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        })
    }
    #[doc(hidden)]
    pub fn IActivatableTypeFactory<
        R,
        F: FnOnce(&IActivatableTypeFactory) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<ActivatableType, IActivatableTypeFactory> =
            windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
}
impl windows_core::RuntimeType for ActivatableType {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_class::<Self, IActivatableType>();
}
unsafe impl windows_core::Interface for ActivatableType {
    type Vtable = IActivatableType_Vtbl;
    const IID: windows_core::GUID = <IActivatableType as windows_core::Interface>::IID;
}
impl windows_core::RuntimeName for ActivatableType {
    const NAME: &'static str = "Namespace.ActivatableType";
}
unsafe impl Send for ActivatableType {}
unsafe impl Sync for ActivatableType {}
windows_core::imp::define_interface!(
    IActivatableType,
    IActivatableType_Vtbl,
    0x1f3b2ceb_24e9_54d4_b4f3_c0480d07703a
);
impl windows_core::RuntimeType for IActivatableType {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
#[repr(C)]
pub struct IActivatableType_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub Value: unsafe extern "system" fn(*mut core::ffi::c_void, *mut i32) -> windows_core::HRESULT,
}
windows_core::imp::define_interface!(
    IActivatableTypeFactory,
    IActivatableTypeFactory_Vtbl,
    0xb482314c_6233_53ac_ace8_5a9aa197d20f
);
impl windows_core::RuntimeType for IActivatableTypeFactory {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
#[repr(C)]
pub struct IActivatableTypeFactory_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub CreateInstance: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        i32,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
