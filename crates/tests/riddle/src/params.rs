// Bindings generated by `riddle` 0.0.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
#[repr(transparent)]
pub struct IParams(::windows_core::IUnknown);
impl IParams {
    pub fn Nothing(&self) -> ::windows_core::Result<()> {
        let this = self;
        unsafe {
            (::windows_core::Interface::vtable(this).Nothing)(::windows_core::Interface::as_raw(
                this,
            ))
            .ok()
        }
    }
    pub fn Bool(&self, a: &mut bool, b: &mut bool) -> ::windows_core::Result<bool> {
        let this = self;
        unsafe {
            let mut result__ = ::std::mem::zeroed();
            (::windows_core::Interface::vtable(this).Bool)(
                ::windows_core::Interface::as_raw(this),
                a,
                b,
                &mut result__,
            )
            .from_abi(result__)
        }
    }
}
::windows_core::imp::interface_hierarchy!(
    IParams,
    ::windows_core::IUnknown,
    ::windows_core::IInspectable
);
impl ::core::cmp::PartialEq for IParams {
    fn eq(&self, other: &Self) -> bool {
        self.0 == other.0
    }
}
impl ::core::cmp::Eq for IParams {}
impl ::core::fmt::Debug for IParams {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        f.debug_tuple("IParams").field(&self.0).finish()
    }
}
impl ::windows_core::RuntimeType for IParams {
    const SIGNATURE: ::windows_core::imp::ConstBuffer =
        ::windows_core::imp::ConstBuffer::from_slice(b"TODO");
}
unsafe impl ::windows_core::Interface for IParams {
    type Vtable = IParams_Vtbl;
}
impl ::core::clone::Clone for IParams {
    fn clone(&self) -> Self {
        Self(self.0.clone())
    }
}
unsafe impl ::windows_core::ComInterface for IParams {
    const IID: ::windows_core::GUID = ::windows_core::GUID::zeroed();
}
#[repr(C)]
#[doc(hidden)]
pub struct IParams_Vtbl {
    pub base__: ::windows_core::IInspectable_Vtbl,
    pub Nothing:
        unsafe extern "system" fn(this: *mut ::core::ffi::c_void) -> ::windows_core::HRESULT,
    pub Bool: unsafe extern "system" fn(
        this: *mut ::core::ffi::c_void,
        a: *mut bool,
        b: *mut bool,
        result__: *mut bool,
    ) -> ::windows_core::HRESULT,
}
