#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "Win32_Media_Audio_Apo")]
pub mod Apo;
#[cfg(feature = "Win32_Media_Audio_DirectMusic")]
pub mod DirectMusic;
#[cfg(feature = "Win32_Media_Audio_DirectSound")]
pub mod DirectSound;
#[cfg(feature = "Win32_Media_Audio_Endpoints")]
pub mod Endpoints;
#[cfg(feature = "Win32_Media_Audio_XAudio2")]
pub mod XAudio2;
#[link(name = "windows")]
extern "system" {
    fn ACMDM_DRIVER_ABOUT();
    fn ACMDM_DRIVER_DETAILS();
    fn ACMDM_DRIVER_NOTIFY();
    fn ACMDM_FILTERTAG_DETAILS();
    fn ACMDM_FILTER_DETAILS();
    fn ACMDM_FORMATTAG_DETAILS();
    fn ACMDM_FORMAT_DETAILS();
    fn ACMDM_FORMAT_SUGGEST();
    fn ACMDM_HARDWARE_WAVE_CAPS_INPUT();
    fn ACMDM_HARDWARE_WAVE_CAPS_OUTPUT();
    fn ACMDM_RESERVED_HIGH();
    fn ACMDM_RESERVED_LOW();
    fn ACMDM_STREAM_CLOSE();
    fn ACMDM_STREAM_CONVERT();
    fn ACMDM_STREAM_OPEN();
    fn ACMDM_STREAM_PREPARE();
    fn ACMDM_STREAM_RESET();
    fn ACMDM_STREAM_SIZE();
    fn ACMDM_STREAM_UNPREPARE();
    fn ACMDM_STREAM_UPDATE();
    fn ACMDM_USER();
    fn ACMDRIVERDETAILSA();
    fn ACMDRIVERDETAILSW();
    fn ACMDRIVERDETAILS_COPYRIGHT_CHARS();
    fn ACMDRIVERDETAILS_FEATURES_CHARS();
    fn ACMDRIVERDETAILS_LICENSING_CHARS();
    fn ACMDRIVERDETAILS_LONGNAME_CHARS();
    fn ACMDRIVERDETAILS_SHORTNAME_CHARS();
    fn ACMDRIVERDETAILS_SUPPORTF_ASYNC();
    fn ACMDRIVERDETAILS_SUPPORTF_CODEC();
    fn ACMDRIVERDETAILS_SUPPORTF_CONVERTER();
    fn ACMDRIVERDETAILS_SUPPORTF_DISABLED();
    fn ACMDRIVERDETAILS_SUPPORTF_FILTER();
    fn ACMDRIVERDETAILS_SUPPORTF_HARDWARE();
    fn ACMDRIVERDETAILS_SUPPORTF_LOCAL();
    fn ACMDRIVERENUMCB();
    fn ACMDRVFORMATSUGGEST();
    fn ACMDRVSTREAMHEADER();
    fn ACMDRVSTREAMINSTANCE();
    fn ACMDRVSTREAMSIZE();
    fn ACMERR_BASE();
    fn ACMERR_BUSY();
    fn ACMERR_CANCELED();
    fn ACMERR_NOTPOSSIBLE();
    fn ACMERR_UNPREPARED();
    fn ACMFILTERCHOOSEA();
    fn ACMFILTERCHOOSEHOOKPROCA();
    fn ACMFILTERCHOOSEHOOKPROCW();
    fn ACMFILTERCHOOSEW();
    fn ACMFILTERCHOOSE_STYLEF_CONTEXTHELP();
    fn ACMFILTERCHOOSE_STYLEF_ENABLEHOOK();
    fn ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATE();
    fn ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATEHANDLE();
    fn ACMFILTERCHOOSE_STYLEF_INITTOFILTERSTRUCT();
    fn ACMFILTERCHOOSE_STYLEF_SHOWHELP();
    fn ACMFILTERDETAILSA();
    fn ACMFILTERDETAILSW();
    fn ACMFILTERDETAILS_FILTER_CHARS();
    fn ACMFILTERENUMCBA();
    fn ACMFILTERENUMCBW();
    fn ACMFILTERTAGDETAILSA();
    fn ACMFILTERTAGDETAILSW();
    fn ACMFILTERTAGDETAILS_FILTERTAG_CHARS();
    fn ACMFILTERTAGENUMCBA();
    fn ACMFILTERTAGENUMCBW();
    fn ACMFORMATCHOOSEA();
    fn ACMFORMATCHOOSEHOOKPROCA();
    fn ACMFORMATCHOOSEHOOKPROCW();
    fn ACMFORMATCHOOSEW();
    fn ACMFORMATCHOOSE_STYLEF_CONTEXTHELP();
    fn ACMFORMATCHOOSE_STYLEF_ENABLEHOOK();
    fn ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATE();
    fn ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATEHANDLE();
    fn ACMFORMATCHOOSE_STYLEF_INITTOWFXSTRUCT();
    fn ACMFORMATCHOOSE_STYLEF_SHOWHELP();
    fn ACMFORMATDETAILSA();
    fn ACMFORMATDETAILS_FORMAT_CHARS();
    fn ACMFORMATENUMCBA();
    fn ACMFORMATENUMCBW();
    fn ACMFORMATTAGDETAILSA();
    fn ACMFORMATTAGDETAILSW();
    fn ACMFORMATTAGDETAILS_FORMATTAG_CHARS();
    fn ACMFORMATTAGENUMCBA();
    fn ACMFORMATTAGENUMCBW();
    fn ACMSTREAMHEADER();
    fn ACMSTREAMHEADER_STATUSF_DONE();
    fn ACMSTREAMHEADER_STATUSF_INQUEUE();
    fn ACMSTREAMHEADER_STATUSF_PREPARED();
    fn ACM_DRIVERADDF_FUNCTION();
    fn ACM_DRIVERADDF_GLOBAL();
    fn ACM_DRIVERADDF_LOCAL();
    fn ACM_DRIVERADDF_NAME();
    fn ACM_DRIVERADDF_NOTIFYHWND();
    fn ACM_DRIVERADDF_TYPEMASK();
    fn ACM_DRIVERENUMF_DISABLED();
    fn ACM_DRIVERENUMF_NOLOCAL();
    fn ACM_DRIVERPRIORITYF_ABLEMASK();
    fn ACM_DRIVERPRIORITYF_BEGIN();
    fn ACM_DRIVERPRIORITYF_DEFERMASK();
    fn ACM_DRIVERPRIORITYF_DISABLE();
    fn ACM_DRIVERPRIORITYF_ENABLE();
    fn ACM_DRIVERPRIORITYF_END();
    fn ACM_FILTERDETAILSF_FILTER();
    fn ACM_FILTERDETAILSF_INDEX();
    fn ACM_FILTERDETAILSF_QUERYMASK();
    fn ACM_FILTERENUMF_DWFILTERTAG();
    fn ACM_FILTERTAGDETAILSF_FILTERTAG();
    fn ACM_FILTERTAGDETAILSF_INDEX();
    fn ACM_FILTERTAGDETAILSF_LARGESTSIZE();
    fn ACM_FILTERTAGDETAILSF_QUERYMASK();
    fn ACM_FORMATDETAILSF_FORMAT();
    fn ACM_FORMATDETAILSF_INDEX();
    fn ACM_FORMATDETAILSF_QUERYMASK();
    fn ACM_FORMATENUMF_CONVERT();
    fn ACM_FORMATENUMF_HARDWARE();
    fn ACM_FORMATENUMF_INPUT();
    fn ACM_FORMATENUMF_NCHANNELS();
    fn ACM_FORMATENUMF_NSAMPLESPERSEC();
    fn ACM_FORMATENUMF_OUTPUT();
    fn ACM_FORMATENUMF_SUGGEST();
    fn ACM_FORMATENUMF_WBITSPERSAMPLE();
    fn ACM_FORMATENUMF_WFORMATTAG();
    fn ACM_FORMATSUGGESTF_NCHANNELS();
    fn ACM_FORMATSUGGESTF_NSAMPLESPERSEC();
    fn ACM_FORMATSUGGESTF_TYPEMASK();
    fn ACM_FORMATSUGGESTF_WBITSPERSAMPLE();
    fn ACM_FORMATSUGGESTF_WFORMATTAG();
    fn ACM_FORMATTAGDETAILSF_FORMATTAG();
    fn ACM_FORMATTAGDETAILSF_INDEX();
    fn ACM_FORMATTAGDETAILSF_LARGESTSIZE();
    fn ACM_FORMATTAGDETAILSF_QUERYMASK();
    fn ACM_METRIC_COUNT_CODECS();
    fn ACM_METRIC_COUNT_CONVERTERS();
    fn ACM_METRIC_COUNT_DISABLED();
    fn ACM_METRIC_COUNT_DRIVERS();
    fn ACM_METRIC_COUNT_FILTERS();
    fn ACM_METRIC_COUNT_HARDWARE();
    fn ACM_METRIC_COUNT_LOCAL_CODECS();
    fn ACM_METRIC_COUNT_LOCAL_CONVERTERS();
    fn ACM_METRIC_COUNT_LOCAL_DISABLED();
    fn ACM_METRIC_COUNT_LOCAL_DRIVERS();
    fn ACM_METRIC_COUNT_LOCAL_FILTERS();
    fn ACM_METRIC_DRIVER_PRIORITY();
    fn ACM_METRIC_DRIVER_SUPPORT();
    fn ACM_METRIC_HARDWARE_WAVE_INPUT();
    fn ACM_METRIC_HARDWARE_WAVE_OUTPUT();
    fn ACM_METRIC_MAX_SIZE_FILTER();
    fn ACM_METRIC_MAX_SIZE_FORMAT();
    fn ACM_STREAMCONVERTF_BLOCKALIGN();
    fn ACM_STREAMCONVERTF_END();
    fn ACM_STREAMCONVERTF_START();
    fn ACM_STREAMOPENF_ASYNC();
    fn ACM_STREAMOPENF_NONREALTIME();
    fn ACM_STREAMOPENF_QUERY();
    fn ACM_STREAMSIZEF_DESTINATION();
    fn ACM_STREAMSIZEF_QUERYMASK();
    fn ACM_STREAMSIZEF_SOURCE();
    fn AMBISONICS_CHANNEL_ORDERING();
    fn AMBISONICS_NORMALIZATION();
    fn AMBISONICS_PARAMS();
    fn AMBISONICS_PARAM_VERSION_1();
    fn AMBISONICS_TYPE();
    fn AUDCLNT_E_ALREADY_INITIALIZED();
    fn AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL();
    fn AUDCLNT_E_BUFFER_ERROR();
    fn AUDCLNT_E_BUFFER_OPERATION_PENDING();
    fn AUDCLNT_E_BUFFER_SIZE_ERROR();
    fn AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED();
    fn AUDCLNT_E_BUFFER_TOO_LARGE();
    fn AUDCLNT_E_CPUUSAGE_EXCEEDED();
    fn AUDCLNT_E_DEVICE_INVALIDATED();
    fn AUDCLNT_E_DEVICE_IN_USE();
    fn AUDCLNT_E_EFFECT_NOT_AVAILABLE();
    fn AUDCLNT_E_EFFECT_STATE_READ_ONLY();
    fn AUDCLNT_E_ENDPOINT_CREATE_FAILED();
    fn AUDCLNT_E_ENDPOINT_OFFLOAD_NOT_CAPABLE();
    fn AUDCLNT_E_ENGINE_FORMAT_LOCKED();
    fn AUDCLNT_E_ENGINE_PERIODICITY_LOCKED();
    fn AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED();
    fn AUDCLNT_E_EVENTHANDLE_NOT_SET();
    fn AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED();
    fn AUDCLNT_E_EXCLUSIVE_MODE_ONLY();
    fn AUDCLNT_E_HEADTRACKING_ENABLED();
    fn AUDCLNT_E_HEADTRACKING_UNSUPPORTED();
    fn AUDCLNT_E_INCORRECT_BUFFER_SIZE();
    fn AUDCLNT_E_INVALID_DEVICE_PERIOD();
    fn AUDCLNT_E_INVALID_SIZE();
    fn AUDCLNT_E_INVALID_STREAM_FLAG();
    fn AUDCLNT_E_NONOFFLOAD_MODE_ONLY();
    fn AUDCLNT_E_NOT_INITIALIZED();
    fn AUDCLNT_E_NOT_STOPPED();
    fn AUDCLNT_E_OFFLOAD_MODE_ONLY();
    fn AUDCLNT_E_OUT_OF_OFFLOAD_RESOURCES();
    fn AUDCLNT_E_OUT_OF_ORDER();
    fn AUDCLNT_E_RAW_MODE_UNSUPPORTED();
    fn AUDCLNT_E_RESOURCES_INVALIDATED();
    fn AUDCLNT_E_SERVICE_NOT_RUNNING();
    fn AUDCLNT_E_THREAD_NOT_REGISTERED();
    fn AUDCLNT_E_UNSUPPORTED_FORMAT();
    fn AUDCLNT_E_WRONG_ENDPOINT_TYPE();
    fn AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE();
    fn AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED();
    fn AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED();
    fn AUDCLNT_SHAREMODE();
    fn AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM();
    fn AUDCLNT_STREAMFLAGS_CROSSPROCESS();
    fn AUDCLNT_STREAMFLAGS_EVENTCALLBACK();
    fn AUDCLNT_STREAMFLAGS_LOOPBACK();
    fn AUDCLNT_STREAMFLAGS_NOPERSIST();
    fn AUDCLNT_STREAMFLAGS_RATEADJUST();
    fn AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY();
    fn AUDCLNT_STREAMOPTIONS();
    fn AUDCLNT_S_BUFFER_EMPTY();
    fn AUDCLNT_S_POSITION_STALLED();
    fn AUDCLNT_S_THREAD_ALREADY_REGISTERED();
    fn AUDIOCLIENT_ACTIVATION_PARAMS();
    fn AUDIOCLIENT_ACTIVATION_TYPE();
    fn AUDIOCLIENT_PROCESS_LOOPBACK_PARAMS();
    fn AUDIOCLOCK_CHARACTERISTIC_FIXED_FREQ();
    fn AUDIO_DUCKING_OPTIONS();
    fn AUDIO_EFFECT();
    fn AUDIO_EFFECT_STATE();
    fn AUDIO_STREAM_CATEGORY();
    fn AUDIO_VOLUME_NOTIFICATION_DATA();
    fn AUXCAPS2A();
    fn AUXCAPS2W();
    fn AUXCAPSA();
    fn AUXCAPSW();
    fn AUXCAPS_AUXIN();
    fn AUXCAPS_CDAUDIO();
    fn AUXCAPS_LRVOLUME();
    fn AUXCAPS_VOLUME();
    fn ActivateAudioInterfaceAsync();
    fn AudioClient3ActivationParams();
    fn AudioClientProperties();
    fn AudioExtensionParams();
    fn AudioObjectType();
    fn AudioSessionDisconnectReason();
    fn AudioSessionState();
    fn AudioStateMonitorSoundLevel();
    fn CoRegisterMessageFilter();
    fn ConnectorType();
    fn CreateCaptureAudioStateMonitor();
    fn CreateCaptureAudioStateMonitorForCategory();
    fn CreateCaptureAudioStateMonitorForCategoryAndDeviceId();
    fn CreateCaptureAudioStateMonitorForCategoryAndDeviceRole();
    fn CreateRenderAudioStateMonitor();
    fn CreateRenderAudioStateMonitorForCategory();
    fn CreateRenderAudioStateMonitorForCategoryAndDeviceId();
    fn CreateRenderAudioStateMonitorForCategoryAndDeviceRole();
    fn DEVICE_STATEMASK_ALL();
    fn DEVICE_STATE_ACTIVE();
    fn DEVICE_STATE_DISABLED();
    fn DEVICE_STATE_NOTPRESENT();
    fn DEVICE_STATE_UNPLUGGED();
    fn DEVINTERFACE_AUDIO_CAPTURE();
    fn DEVINTERFACE_AUDIO_RENDER();
    fn DEVINTERFACE_MIDI_INPUT();
    fn DEVINTERFACE_MIDI_OUTPUT();
    fn DIRECTX_AUDIO_ACTIVATION_PARAMS();
    fn DRVM_MAPPER();
    fn DRVM_MAPPER_STATUS();
    fn DRV_MAPPER_PREFERRED_INPUT_GET();
    fn DRV_MAPPER_PREFERRED_OUTPUT_GET();
    fn DataFlow();
    fn DeviceTopology();
    fn ECHOWAVEFILTER();
    fn EDataFlow();
    fn ENDPOINT_FORMAT_RESET_MIX_ONLY();
    fn ENDPOINT_HARDWARE_SUPPORT_METER();
    fn ENDPOINT_HARDWARE_SUPPORT_MUTE();
    fn ENDPOINT_HARDWARE_SUPPORT_VOLUME();
    fn ENDPOINT_SYSFX_DISABLED();
    fn ENDPOINT_SYSFX_ENABLED();
    fn ERole();
    fn EVENTCONTEXT_VOLUMESLIDER();
    fn EndpointFormFactor();
    fn FILTERCHOOSE_CUSTOM_VERIFY();
    fn FILTERCHOOSE_FILTERTAG_VERIFY();
    fn FILTERCHOOSE_FILTER_VERIFY();
    fn FILTERCHOOSE_MESSAGE();
    fn FORMATCHOOSE_CUSTOM_VERIFY();
    fn FORMATCHOOSE_FORMATTAG_VERIFY();
    fn FORMATCHOOSE_FORMAT_VERIFY();
    fn FORMATCHOOSE_MESSAGE();
    fn HACMDRIVER();
    fn HACMDRIVERID();
    fn HACMOBJ();
    fn HACMSTREAM();
    fn HMIDI();
    fn HMIDIIN();
    fn HMIDIOUT();
    fn HMIDISTRM();
    fn HMIXER();
    fn HMIXEROBJ();
    fn HWAVE();
    fn HWAVEIN();
    fn HWAVEOUT();
    fn IActivateAudioInterfaceAsyncOperation();
    fn IActivateAudioInterfaceCompletionHandler();
    fn IAudioAmbisonicsControl();
    fn IAudioAutoGainControl();
    fn IAudioBass();
    fn IAudioCaptureClient();
    fn IAudioChannelConfig();
    fn IAudioClient();
    fn IAudioClient2();
    fn IAudioClient3();
    fn IAudioClientDuckingControl();
    fn IAudioClock();
    fn IAudioClock2();
    fn IAudioClockAdjustment();
    fn IAudioEffectsChangedNotificationClient();
    fn IAudioEffectsManager();
    fn IAudioFormatEnumerator();
    fn IAudioInputSelector();
    fn IAudioLoudness();
    fn IAudioMidrange();
    fn IAudioMute();
    fn IAudioOutputSelector();
    fn IAudioPeakMeter();
    fn IAudioRenderClient();
    fn IAudioSessionControl();
    fn IAudioSessionControl2();
    fn IAudioSessionEnumerator();
    fn IAudioSessionEvents();
    fn IAudioSessionManager();
    fn IAudioSessionManager2();
    fn IAudioSessionNotification();
    fn IAudioStateMonitor();
    fn IAudioStreamVolume();
    fn IAudioSystemEffectsPropertyChangeNotificationClient();
    fn IAudioSystemEffectsPropertyStore();
    fn IAudioTreble();
    fn IAudioVolumeDuckNotification();
    fn IAudioVolumeLevel();
    fn IChannelAudioVolume();
    fn IConnector();
    fn IControlChangeNotify();
    fn IControlInterface();
    fn IDeviceSpecificProperty();
    fn IDeviceTopology();
    fn IMMDevice();
    fn IMMDeviceActivator();
    fn IMMDeviceCollection();
    fn IMMDeviceEnumerator();
    fn IMMEndpoint();
    fn IMMNotificationClient();
    fn IMessageFilter();
    fn IPart();
    fn IPartsList();
    fn IPerChannelDbLevel();
    fn ISimpleAudioVolume();
    fn ISpatialAudioClient();
    fn ISpatialAudioClient2();
    fn ISpatialAudioMetadataClient();
    fn ISpatialAudioMetadataCopier();
    fn ISpatialAudioMetadataItems();
    fn ISpatialAudioMetadataItemsBuffer();
    fn ISpatialAudioMetadataReader();
    fn ISpatialAudioMetadataWriter();
    fn ISpatialAudioObject();
    fn ISpatialAudioObjectBase();
    fn ISpatialAudioObjectForHrtf();
    fn ISpatialAudioObjectForMetadataCommands();
    fn ISpatialAudioObjectForMetadataItems();
    fn ISpatialAudioObjectRenderStream();
    fn ISpatialAudioObjectRenderStreamBase();
    fn ISpatialAudioObjectRenderStreamForHrtf();
    fn ISpatialAudioObjectRenderStreamForMetadata();
    fn ISpatialAudioObjectRenderStreamNotify();
    fn ISubunit();
    fn LPACMDRIVERPROC();
    fn LPMIDICALLBACK();
    fn LPWAVECALLBACK();
    fn MEVT_F_CALLBACK();
    fn MEVT_F_LONG();
    fn MEVT_F_SHORT();
    fn MHDR_DONE();
    fn MHDR_INQUEUE();
    fn MHDR_ISSTRM();
    fn MHDR_PREPARED();
    fn MIDICAPS_CACHE();
    fn MIDICAPS_LRVOLUME();
    fn MIDICAPS_STREAM();
    fn MIDICAPS_VOLUME();
    fn MIDIERR_BADOPENMODE();
    fn MIDIERR_DONT_CONTINUE();
    fn MIDIERR_INVALIDSETUP();
    fn MIDIERR_LASTERROR();
    fn MIDIERR_NODEVICE();
    fn MIDIERR_NOMAP();
    fn MIDIERR_NOTREADY();
    fn MIDIERR_STILLPLAYING();
    fn MIDIERR_UNPREPARED();
    fn MIDIEVENT();
    fn MIDIHDR();
    fn MIDIINCAPS2A();
    fn MIDIINCAPS2W();
    fn MIDIINCAPSA();
    fn MIDIINCAPSW();
    fn MIDIOUTCAPS2A();
    fn MIDIOUTCAPS2W();
    fn MIDIOUTCAPSA();
    fn MIDIOUTCAPSW();
    fn MIDIPATCHSIZE();
    fn MIDIPROPTEMPO();
    fn MIDIPROPTIMEDIV();
    fn MIDIPROP_GET();
    fn MIDIPROP_SET();
    fn MIDIPROP_TEMPO();
    fn MIDIPROP_TIMEDIV();
    fn MIDISTRMBUFFVER();
    fn MIDISTRM_ERROR();
    fn MIDI_CACHE_ALL();
    fn MIDI_CACHE_BESTFIT();
    fn MIDI_CACHE_QUERY();
    fn MIDI_UNCACHE();
    fn MIDI_WAVE_OPEN_TYPE();
    fn MIXERCAPS2A();
    fn MIXERCAPS2W();
    fn MIXERCAPSA();
    fn MIXERCAPSW();
    fn MIXERCONTROLA();
    fn MIXERCONTROLDETAILS();
    fn MIXERCONTROLDETAILS_BOOLEAN();
    fn MIXERCONTROLDETAILS_LISTTEXTA();
    fn MIXERCONTROLDETAILS_LISTTEXTW();
    fn MIXERCONTROLDETAILS_SIGNED();
    fn MIXERCONTROLDETAILS_UNSIGNED();
    fn MIXERCONTROLW();
    fn MIXERCONTROL_CONTROLF_DISABLED();
    fn MIXERCONTROL_CONTROLF_MULTIPLE();
    fn MIXERCONTROL_CONTROLF_UNIFORM();
    fn MIXERCONTROL_CONTROLTYPE_BASS();
    fn MIXERCONTROL_CONTROLTYPE_BASS_BOOST();
    fn MIXERCONTROL_CONTROLTYPE_BOOLEAN();
    fn MIXERCONTROL_CONTROLTYPE_BOOLEANMETER();
    fn MIXERCONTROL_CONTROLTYPE_BUTTON();
    fn MIXERCONTROL_CONTROLTYPE_CUSTOM();
    fn MIXERCONTROL_CONTROLTYPE_DECIBELS();
    fn MIXERCONTROL_CONTROLTYPE_EQUALIZER();
    fn MIXERCONTROL_CONTROLTYPE_FADER();
    fn MIXERCONTROL_CONTROLTYPE_LOUDNESS();
    fn MIXERCONTROL_CONTROLTYPE_MICROTIME();
    fn MIXERCONTROL_CONTROLTYPE_MILLITIME();
    fn MIXERCONTROL_CONTROLTYPE_MIXER();
    fn MIXERCONTROL_CONTROLTYPE_MONO();
    fn MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT();
    fn MIXERCONTROL_CONTROLTYPE_MUTE();
    fn MIXERCONTROL_CONTROLTYPE_MUX();
    fn MIXERCONTROL_CONTROLTYPE_ONOFF();
    fn MIXERCONTROL_CONTROLTYPE_PAN();
    fn MIXERCONTROL_CONTROLTYPE_PEAKMETER();
    fn MIXERCONTROL_CONTROLTYPE_PERCENT();
    fn MIXERCONTROL_CONTROLTYPE_QSOUNDPAN();
    fn MIXERCONTROL_CONTROLTYPE_SIGNED();
    fn MIXERCONTROL_CONTROLTYPE_SIGNEDMETER();
    fn MIXERCONTROL_CONTROLTYPE_SINGLESELECT();
    fn MIXERCONTROL_CONTROLTYPE_SLIDER();
    fn MIXERCONTROL_CONTROLTYPE_STEREOENH();
    fn MIXERCONTROL_CONTROLTYPE_TREBLE();
    fn MIXERCONTROL_CONTROLTYPE_UNSIGNED();
    fn MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER();
    fn MIXERCONTROL_CONTROLTYPE_VOLUME();
    fn MIXERCONTROL_CT_CLASS_CUSTOM();
    fn MIXERCONTROL_CT_CLASS_FADER();
    fn MIXERCONTROL_CT_CLASS_LIST();
    fn MIXERCONTROL_CT_CLASS_MASK();
    fn MIXERCONTROL_CT_CLASS_METER();
    fn MIXERCONTROL_CT_CLASS_NUMBER();
    fn MIXERCONTROL_CT_CLASS_SLIDER();
    fn MIXERCONTROL_CT_CLASS_SWITCH();
    fn MIXERCONTROL_CT_CLASS_TIME();
    fn MIXERCONTROL_CT_SC_LIST_MULTIPLE();
    fn MIXERCONTROL_CT_SC_LIST_SINGLE();
    fn MIXERCONTROL_CT_SC_METER_POLLED();
    fn MIXERCONTROL_CT_SC_SWITCH_BOOLEAN();
    fn MIXERCONTROL_CT_SC_SWITCH_BUTTON();
    fn MIXERCONTROL_CT_SC_TIME_MICROSECS();
    fn MIXERCONTROL_CT_SC_TIME_MILLISECS();
    fn MIXERCONTROL_CT_SUBCLASS_MASK();
    fn MIXERCONTROL_CT_UNITS_BOOLEAN();
    fn MIXERCONTROL_CT_UNITS_CUSTOM();
    fn MIXERCONTROL_CT_UNITS_DECIBELS();
    fn MIXERCONTROL_CT_UNITS_MASK();
    fn MIXERCONTROL_CT_UNITS_PERCENT();
    fn MIXERCONTROL_CT_UNITS_SIGNED();
    fn MIXERCONTROL_CT_UNITS_UNSIGNED();
    fn MIXERLINEA();
    fn MIXERLINECONTROLSA();
    fn MIXERLINECONTROLSW();
    fn MIXERLINEW();
    fn MIXERLINE_COMPONENTTYPE();
    fn MIXERLINE_COMPONENTTYPE_DST_FIRST();
    fn MIXERLINE_COMPONENTTYPE_DST_LAST();
    fn MIXERLINE_COMPONENTTYPE_SRC_FIRST();
    fn MIXERLINE_COMPONENTTYPE_SRC_LAST();
    fn MIXERLINE_LINEF_ACTIVE();
    fn MIXERLINE_LINEF_DISCONNECTED();
    fn MIXERLINE_LINEF_SOURCE();
    fn MIXERLINE_TARGETTYPE_AUX();
    fn MIXERLINE_TARGETTYPE_MIDIIN();
    fn MIXERLINE_TARGETTYPE_MIDIOUT();
    fn MIXERLINE_TARGETTYPE_UNDEFINED();
    fn MIXERLINE_TARGETTYPE_WAVEIN();
    fn MIXERLINE_TARGETTYPE_WAVEOUT();
    fn MIXERR_INVALCONTROL();
    fn MIXERR_INVALLINE();
    fn MIXERR_INVALVALUE();
    fn MIXERR_LASTERROR();
    fn MIXER_GETCONTROLDETAILSF_LISTTEXT();
    fn MIXER_GETCONTROLDETAILSF_QUERYMASK();
    fn MIXER_GETCONTROLDETAILSF_VALUE();
    fn MIXER_GETLINECONTROLSF_ALL();
    fn MIXER_GETLINECONTROLSF_ONEBYID();
    fn MIXER_GETLINECONTROLSF_ONEBYTYPE();
    fn MIXER_GETLINECONTROLSF_QUERYMASK();
    fn MIXER_GETLINEINFOF_COMPONENTTYPE();
    fn MIXER_GETLINEINFOF_DESTINATION();
    fn MIXER_GETLINEINFOF_LINEID();
    fn MIXER_GETLINEINFOF_QUERYMASK();
    fn MIXER_GETLINEINFOF_SOURCE();
    fn MIXER_GETLINEINFOF_TARGETTYPE();
    fn MIXER_LONG_NAME_CHARS();
    fn MIXER_OBJECTF_AUX();
    fn MIXER_OBJECTF_HANDLE();
    fn MIXER_OBJECTF_MIDIIN();
    fn MIXER_OBJECTF_MIDIOUT();
    fn MIXER_OBJECTF_MIXER();
    fn MIXER_OBJECTF_WAVEIN();
    fn MIXER_OBJECTF_WAVEOUT();
    fn MIXER_SETCONTROLDETAILSF_CUSTOM();
    fn MIXER_SETCONTROLDETAILSF_QUERYMASK();
    fn MIXER_SETCONTROLDETAILSF_VALUE();
    fn MIXER_SHORT_NAME_CHARS();
    fn MMDeviceEnumerator();
    fn MM_ACM_FILTERCHOOSE();
    fn MM_ACM_FORMATCHOOSE();
    fn MOD_FMSYNTH();
    fn MOD_MAPPER();
    fn MOD_MIDIPORT();
    fn MOD_SQSYNTH();
    fn MOD_SWSYNTH();
    fn MOD_SYNTH();
    fn MOD_WAVETABLE();
    fn PAudioStateMonitorCallback();
    fn PCMWAVEFORMAT();
    fn PKEY_AudioEndpointLogo_IconEffects();
    fn PKEY_AudioEndpointLogo_IconPath();
    fn PKEY_AudioEndpointSettings_LaunchContract();
    fn PKEY_AudioEndpointSettings_MenuText();
    fn PKEY_AudioEndpoint_Association();
    fn PKEY_AudioEndpoint_ControlPanelPageProvider();
    fn PKEY_AudioEndpoint_Default_VolumeInDb();
    fn PKEY_AudioEndpoint_Disable_SysFx();
    fn PKEY_AudioEndpoint_FormFactor();
    fn PKEY_AudioEndpoint_FullRangeSpeakers();
    fn PKEY_AudioEndpoint_GUID();
    fn PKEY_AudioEndpoint_JackSubType();
    fn PKEY_AudioEndpoint_PhysicalSpeakers();
    fn PKEY_AudioEndpoint_Supports_EventDriven_Mode();
    fn PKEY_AudioEngine_DeviceFormat();
    fn PKEY_AudioEngine_OEMFormat();
    fn PROCESS_LOOPBACK_MODE();
    fn PartType();
    fn PlaySoundA();
    fn PlaySoundW();
    fn SND_ALIAS();
    fn SND_ALIAS_ID();
    fn SND_ALIAS_START();
    fn SND_APPLICATION();
    fn SND_ASYNC();
    fn SND_FILENAME();
    fn SND_LOOP();
    fn SND_MEMORY();
    fn SND_NODEFAULT();
    fn SND_NOSTOP();
    fn SND_NOWAIT();
    fn SND_PURGE();
    fn SND_RESOURCE();
    fn SND_RING();
    fn SND_SENTRY();
    fn SND_SYNC();
    fn SND_SYSTEM();
    fn SPATIAL_AUDIO_POSITION();
    fn SPATIAL_AUDIO_STANDARD_COMMANDS_START();
    fn SPATIAL_AUDIO_STREAM_OPTIONS();
    fn SPTLAUDCLNT_E_DESTROYED();
    fn SPTLAUDCLNT_E_ERRORS_IN_OBJECT_CALLS();
    fn SPTLAUDCLNT_E_INTERNAL();
    fn SPTLAUDCLNT_E_INVALID_LICENSE();
    fn SPTLAUDCLNT_E_METADATA_FORMAT_NOT_SUPPORTED();
    fn SPTLAUDCLNT_E_NO_MORE_OBJECTS();
    fn SPTLAUDCLNT_E_OBJECT_ALREADY_ACTIVE();
    fn SPTLAUDCLNT_E_OUT_OF_ORDER();
    fn SPTLAUDCLNT_E_PROPERTY_NOT_SUPPORTED();
    fn SPTLAUDCLNT_E_RESOURCES_INVALIDATED();
    fn SPTLAUDCLNT_E_STATIC_OBJECT_NOT_AVAILABLE();
    fn SPTLAUDCLNT_E_STREAM_NOT_AVAILABLE();
    fn SPTLAUDCLNT_E_STREAM_NOT_STOPPED();
    fn SPTLAUD_MD_CLNT_E_ATTACH_FAILED_INTERNAL_BUFFER();
    fn SPTLAUD_MD_CLNT_E_BUFFER_ALREADY_ATTACHED();
    fn SPTLAUD_MD_CLNT_E_BUFFER_NOT_ATTACHED();
    fn SPTLAUD_MD_CLNT_E_BUFFER_STILL_ATTACHED();
    fn SPTLAUD_MD_CLNT_E_COMMAND_ALREADY_WRITTEN();
    fn SPTLAUD_MD_CLNT_E_COMMAND_NOT_FOUND();
    fn SPTLAUD_MD_CLNT_E_DETACH_FAILED_INTERNAL_BUFFER();
    fn SPTLAUD_MD_CLNT_E_FORMAT_MISMATCH();
    fn SPTLAUD_MD_CLNT_E_FRAMECOUNT_OUT_OF_RANGE();
    fn SPTLAUD_MD_CLNT_E_FRAMEOFFSET_OUT_OF_RANGE();
    fn SPTLAUD_MD_CLNT_E_INVALID_ARGS();
    fn SPTLAUD_MD_CLNT_E_ITEMS_ALREADY_OPEN();
    fn SPTLAUD_MD_CLNT_E_ITEMS_LOCKED_FOR_WRITING();
    fn SPTLAUD_MD_CLNT_E_ITEM_COPY_OVERFLOW();
    fn SPTLAUD_MD_CLNT_E_ITEM_MUST_HAVE_COMMANDS();
    fn SPTLAUD_MD_CLNT_E_MEMORY_BOUNDS();
    fn SPTLAUD_MD_CLNT_E_METADATA_FORMAT_NOT_FOUND();
    fn SPTLAUD_MD_CLNT_E_NO_BUFFER_ATTACHED();
    fn SPTLAUD_MD_CLNT_E_NO_ITEMOFFSET_WRITTEN();
    fn SPTLAUD_MD_CLNT_E_NO_ITEMS_FOUND();
    fn SPTLAUD_MD_CLNT_E_NO_ITEMS_OPEN();
    fn SPTLAUD_MD_CLNT_E_NO_ITEMS_WRITTEN();
    fn SPTLAUD_MD_CLNT_E_NO_MORE_COMMANDS();
    fn SPTLAUD_MD_CLNT_E_NO_MORE_ITEMS();
    fn SPTLAUD_MD_CLNT_E_OBJECT_NOT_INITIALIZED();
    fn SPTLAUD_MD_CLNT_E_VALUE_BUFFER_INCORRECT_SIZE();
    fn SpatialAudioClientActivationParams();
    fn SpatialAudioHrtfActivationParams();
    fn SpatialAudioHrtfActivationParams2();
    fn SpatialAudioHrtfDirectivity();
    fn SpatialAudioHrtfDirectivityCardioid();
    fn SpatialAudioHrtfDirectivityCone();
    fn SpatialAudioHrtfDirectivityType();
    fn SpatialAudioHrtfDirectivityUnion();
    fn SpatialAudioHrtfDistanceDecay();
    fn SpatialAudioHrtfDistanceDecayType();
    fn SpatialAudioHrtfEnvironmentType();
    fn SpatialAudioMetadataCopyMode();
    fn SpatialAudioMetadataItemsInfo();
    fn SpatialAudioMetadataWriterOverflowMode();
    fn SpatialAudioObjectRenderStreamActivationParams();
    fn SpatialAudioObjectRenderStreamActivationParams2();
    fn SpatialAudioObjectRenderStreamForMetadataActivationParams();
    fn SpatialAudioObjectRenderStreamForMetadataActivationParams2();
    fn VOLUMEWAVEFILTER();
    fn WAVECAPS_LRVOLUME();
    fn WAVECAPS_PITCH();
    fn WAVECAPS_PLAYBACKRATE();
    fn WAVECAPS_SAMPLEACCURATE();
    fn WAVECAPS_SYNC();
    fn WAVECAPS_VOLUME();
    fn WAVEFILTER();
    fn WAVEFORMAT();
    fn WAVEFORMATEX();
    fn WAVEFORMATEXTENSIBLE();
    fn WAVEHDR();
    fn WAVEINCAPS2A();
    fn WAVEINCAPS2W();
    fn WAVEINCAPSA();
    fn WAVEINCAPSW();
    fn WAVEIN_MAPPER_STATUS_DEVICE();
    fn WAVEIN_MAPPER_STATUS_FORMAT();
    fn WAVEIN_MAPPER_STATUS_MAPPED();
    fn WAVEOUTCAPS2A();
    fn WAVEOUTCAPS2W();
    fn WAVEOUTCAPSA();
    fn WAVEOUTCAPSW();
    fn WAVEOUT_MAPPER_STATUS_DEVICE();
    fn WAVEOUT_MAPPER_STATUS_FORMAT();
    fn WAVEOUT_MAPPER_STATUS_MAPPED();
    fn WAVERR_BADFORMAT();
    fn WAVERR_LASTERROR();
    fn WAVERR_STILLPLAYING();
    fn WAVERR_SYNC();
    fn WAVERR_UNPREPARED();
    fn WAVE_FORMAT_1M08();
    fn WAVE_FORMAT_1M16();
    fn WAVE_FORMAT_1S08();
    fn WAVE_FORMAT_1S16();
    fn WAVE_FORMAT_2M08();
    fn WAVE_FORMAT_2M16();
    fn WAVE_FORMAT_2S08();
    fn WAVE_FORMAT_2S16();
    fn WAVE_FORMAT_44M08();
    fn WAVE_FORMAT_44M16();
    fn WAVE_FORMAT_44S08();
    fn WAVE_FORMAT_44S16();
    fn WAVE_FORMAT_48M08();
    fn WAVE_FORMAT_48M16();
    fn WAVE_FORMAT_48S08();
    fn WAVE_FORMAT_48S16();
    fn WAVE_FORMAT_4M08();
    fn WAVE_FORMAT_4M16();
    fn WAVE_FORMAT_4S08();
    fn WAVE_FORMAT_4S16();
    fn WAVE_FORMAT_96M08();
    fn WAVE_FORMAT_96M16();
    fn WAVE_FORMAT_96S08();
    fn WAVE_FORMAT_96S16();
    fn WAVE_FORMAT_PCM();
    fn WAVE_INVALIDFORMAT();
    fn WAVE_MAPPER();
    fn WHDR_BEGINLOOP();
    fn WHDR_DONE();
    fn WHDR_ENDLOOP();
    fn WHDR_INQUEUE();
    fn WHDR_PREPARED();
    fn WIDM_MAPPER_STATUS();
    fn WODM_MAPPER_STATUS();
    fn _AUDCLNT_BUFFERFLAGS();
    fn __MIDL___MIDL_itf_mmdeviceapi_0000_0008_0002();
    fn acmDriverAddA();
    fn acmDriverAddW();
    fn acmDriverClose();
    fn acmDriverDetailsA();
    fn acmDriverDetailsW();
    fn acmDriverEnum();
    fn acmDriverID();
    fn acmDriverMessage();
    fn acmDriverOpen();
    fn acmDriverPriority();
    fn acmDriverRemove();
    fn acmFilterChooseA();
    fn acmFilterChooseW();
    fn acmFilterDetailsA();
    fn acmFilterDetailsW();
    fn acmFilterEnumA();
    fn acmFilterEnumW();
    fn acmFilterTagDetailsA();
    fn acmFilterTagDetailsW();
    fn acmFilterTagEnumA();
    fn acmFilterTagEnumW();
    fn acmFormatChooseA();
    fn acmFormatChooseW();
    fn acmFormatDetailsA();
    fn acmFormatDetailsW();
    fn acmFormatEnumA();
    fn acmFormatEnumW();
    fn acmFormatSuggest();
    fn acmFormatTagDetailsA();
    fn acmFormatTagDetailsW();
    fn acmFormatTagEnumA();
    fn acmFormatTagEnumW();
    fn acmGetVersion();
    fn acmMetrics();
    fn acmStreamClose();
    fn acmStreamConvert();
    fn acmStreamMessage();
    fn acmStreamOpen();
    fn acmStreamPrepareHeader();
    fn acmStreamReset();
    fn acmStreamSize();
    fn acmStreamUnprepareHeader();
    fn auxGetDevCapsA();
    fn auxGetDevCapsW();
    fn auxGetNumDevs();
    fn auxGetVolume();
    fn auxOutMessage();
    fn auxSetVolume();
    fn midiConnect();
    fn midiDisconnect();
    fn midiInAddBuffer();
    fn midiInClose();
    fn midiInGetDevCapsA();
    fn midiInGetDevCapsW();
    fn midiInGetErrorTextA();
    fn midiInGetErrorTextW();
    fn midiInGetID();
    fn midiInGetNumDevs();
    fn midiInMessage();
    fn midiInOpen();
    fn midiInPrepareHeader();
    fn midiInReset();
    fn midiInStart();
    fn midiInStop();
    fn midiInUnprepareHeader();
    fn midiOutCacheDrumPatches();
    fn midiOutCachePatches();
    fn midiOutClose();
    fn midiOutGetDevCapsA();
    fn midiOutGetDevCapsW();
    fn midiOutGetErrorTextA();
    fn midiOutGetErrorTextW();
    fn midiOutGetID();
    fn midiOutGetNumDevs();
    fn midiOutGetVolume();
    fn midiOutLongMsg();
    fn midiOutMessage();
    fn midiOutOpen();
    fn midiOutPrepareHeader();
    fn midiOutReset();
    fn midiOutSetVolume();
    fn midiOutShortMsg();
    fn midiOutUnprepareHeader();
    fn midiStreamClose();
    fn midiStreamOpen();
    fn midiStreamOut();
    fn midiStreamPause();
    fn midiStreamPosition();
    fn midiStreamProperty();
    fn midiStreamRestart();
    fn midiStreamStop();
    fn mixerClose();
    fn mixerGetControlDetailsA();
    fn mixerGetControlDetailsW();
    fn mixerGetDevCapsA();
    fn mixerGetDevCapsW();
    fn mixerGetID();
    fn mixerGetLineControlsA();
    fn mixerGetLineControlsW();
    fn mixerGetLineInfoA();
    fn mixerGetLineInfoW();
    fn mixerGetNumDevs();
    fn mixerMessage();
    fn mixerOpen();
    fn mixerSetControlDetails();
    fn sndPlaySoundA();
    fn sndPlaySoundW();
    fn tACMDRVOPENDESCA();
    fn tACMDRVOPENDESCW();
    fn tACMFORMATDETAILSW();
    fn waveInAddBuffer();
    fn waveInClose();
    fn waveInGetDevCapsA();
    fn waveInGetDevCapsW();
    fn waveInGetErrorTextA();
    fn waveInGetErrorTextW();
    fn waveInGetID();
    fn waveInGetNumDevs();
    fn waveInGetPosition();
    fn waveInMessage();
    fn waveInOpen();
    fn waveInPrepareHeader();
    fn waveInReset();
    fn waveInStart();
    fn waveInStop();
    fn waveInUnprepareHeader();
    fn waveOutBreakLoop();
    fn waveOutClose();
    fn waveOutGetDevCapsA();
    fn waveOutGetDevCapsW();
    fn waveOutGetErrorTextA();
    fn waveOutGetErrorTextW();
    fn waveOutGetID();
    fn waveOutGetNumDevs();
    fn waveOutGetPitch();
    fn waveOutGetPlaybackRate();
    fn waveOutGetPosition();
    fn waveOutGetVolume();
    fn waveOutMessage();
    fn waveOutOpen();
    fn waveOutPause();
    fn waveOutPrepareHeader();
    fn waveOutReset();
    fn waveOutRestart();
    fn waveOutSetPitch();
    fn waveOutSetPlaybackRate();
    fn waveOutSetVolume();
    fn waveOutUnprepareHeader();
    fn waveOutWrite();
}
