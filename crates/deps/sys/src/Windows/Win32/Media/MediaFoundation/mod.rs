#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn CreateNamedPropertyStore();
    fn CreatePropertyStore();
    fn DXVA2CreateDirect3DDeviceManager9();
    fn DXVA2CreateVideoService();
    fn DXVAHD_CreateDevice();
    fn MFAddPeriodicCallback();
    fn MFAllocateSerialWorkQueue();
    fn MFAllocateWorkQueue();
    fn MFAllocateWorkQueueEx();
    fn MFAverageTimePerFrameToFrameRate();
    fn MFBeginCreateFile();
    fn MFBeginRegisterWorkQueueWithMMCSS();
    fn MFBeginRegisterWorkQueueWithMMCSSEx();
    fn MFBeginUnregisterWorkQueueWithMMCSS();
    fn MFCalculateBitmapImageSize();
    fn MFCalculateImageSize();
    fn MFCancelCreateFile();
    fn MFCancelWorkItem();
    fn MFCombineSamples();
    fn MFCompareFullToPartialMediaType();
    fn MFConvertColorInfoFromDXVA();
    fn MFConvertColorInfoToDXVA();
    fn MFConvertFromFP16Array();
    fn MFConvertToFP16Array();
    fn MFCopyImage();
    fn MFCreate2DMediaBuffer();
    fn MFCreate3GPMediaSink();
    fn MFCreateAC3MediaSink();
    fn MFCreateADTSMediaSink();
    fn MFCreateAMMediaTypeFromMFMediaType();
    fn MFCreateASFContentInfo();
    fn MFCreateASFIndexer();
    fn MFCreateASFIndexerByteStream();
    fn MFCreateASFMediaSink();
    fn MFCreateASFMediaSinkActivate();
    fn MFCreateASFMultiplexer();
    fn MFCreateASFProfile();
    fn MFCreateASFProfileFromPresentationDescriptor();
    fn MFCreateASFSplitter();
    fn MFCreateASFStreamSelector();
    fn MFCreateASFStreamingMediaSink();
    fn MFCreateASFStreamingMediaSinkActivate();
    fn MFCreateAVIMediaSink();
    fn MFCreateAggregateSource();
    fn MFCreateAlignedMemoryBuffer();
    fn MFCreateAsyncResult();
    fn MFCreateAttributes();
    fn MFCreateAudioMediaType();
    fn MFCreateAudioRenderer();
    fn MFCreateAudioRendererActivate();
    fn MFCreateCameraOcclusionStateMonitor();
    fn MFCreateCollection();
    fn MFCreateContentDecryptorContext();
    fn MFCreateContentProtectionDevice();
    fn MFCreateCredentialCache();
    fn MFCreateD3D12SynchronizationObject();
    fn MFCreateDXGIDeviceManager();
    fn MFCreateDXGISurfaceBuffer();
    fn MFCreateDXSurfaceBuffer();
    fn MFCreateDeviceSource();
    fn MFCreateDeviceSourceActivate();
    fn MFCreateEncryptedMediaExtensionsStoreActivate();
    fn MFCreateEventQueue();
    fn MFCreateExtendedCameraIntrinsicModel();
    fn MFCreateExtendedCameraIntrinsics();
    fn MFCreateFMPEG4MediaSink();
    fn MFCreateFile();
    fn MFCreateLegacyMediaBufferOnMFMediaBuffer();
    fn MFCreateMFByteStreamOnStream();
    fn MFCreateMFByteStreamOnStreamEx();
    fn MFCreateMFByteStreamWrapper();
    fn MFCreateMFVideoFormatFromMFMediaType();
    fn MFCreateMP3MediaSink();
    fn MFCreateMPEG4MediaSink();
    fn MFCreateMediaBufferFromMediaType();
    fn MFCreateMediaBufferWrapper();
    fn MFCreateMediaEvent();
    fn MFCreateMediaExtensionActivate();
    fn MFCreateMediaSession();
    fn MFCreateMediaType();
    fn MFCreateMediaTypeFromProperties();
    fn MFCreateMediaTypeFromRepresentation();
    fn MFCreateMemoryBuffer();
    fn MFCreateMuxSink();
    fn MFCreateMuxStreamAttributes();
    fn MFCreateMuxStreamMediaType();
    fn MFCreateMuxStreamSample();
    fn MFCreateNetSchemePlugin();
    fn MFCreatePMPMediaSession();
    fn MFCreatePMPServer();
    fn MFCreatePresentationClock();
    fn MFCreatePresentationDescriptor();
    fn MFCreatePresentationDescriptorFromASFProfile();
    fn MFCreatePropertiesFromMediaType();
    fn MFCreateProtectedEnvironmentAccess();
    fn MFCreateProxyLocator();
    fn MFCreateRelativePanelWatcher();
    fn MFCreateRemoteDesktopPlugin();
    fn MFCreateSample();
    fn MFCreateSampleCopierMFT();
    fn MFCreateSampleGrabberSinkActivate();
    fn MFCreateSensorActivityMonitor();
    fn MFCreateSensorGroup();
    fn MFCreateSensorProfile();
    fn MFCreateSensorProfileCollection();
    fn MFCreateSensorStream();
    fn MFCreateSequencerSegmentOffset();
    fn MFCreateSequencerSource();
    fn MFCreateSimpleTypeHandler();
    fn MFCreateSinkWriterFromMediaSink();
    fn MFCreateSinkWriterFromURL();
    fn MFCreateSourceReaderFromByteStream();
    fn MFCreateSourceReaderFromMediaSource();
    fn MFCreateSourceReaderFromURL();
    fn MFCreateSourceResolver();
    fn MFCreateStandardQualityManager();
    fn MFCreateStreamDescriptor();
    fn MFCreateStreamOnMFByteStream();
    fn MFCreateStreamOnMFByteStreamEx();
    fn MFCreateSystemTimeSource();
    fn MFCreateTempFile();
    fn MFCreateTopoLoader();
    fn MFCreateTopology();
    fn MFCreateTopologyNode();
    fn MFCreateTrackedSample();
    fn MFCreateTranscodeProfile();
    fn MFCreateTranscodeSinkActivate();
    fn MFCreateTranscodeTopology();
    fn MFCreateTranscodeTopologyFromByteStream();
    fn MFCreateTransformActivate();
    fn MFCreateVideoMediaType();
    fn MFCreateVideoMediaTypeFromBitMapInfoHeader();
    fn MFCreateVideoMediaTypeFromBitMapInfoHeaderEx();
    fn MFCreateVideoMediaTypeFromSubtype();
    fn MFCreateVideoMixer();
    fn MFCreateVideoMixerAndPresenter();
    fn MFCreateVideoPresenter();
    fn MFCreateVideoRenderer();
    fn MFCreateVideoRendererActivate();
    fn MFCreateVideoSampleAllocator();
    fn MFCreateVideoSampleAllocatorEx();
    fn MFCreateVideoSampleFromSurface();
    fn MFCreateVirtualCamera();
    fn MFCreateWAVEMediaSink();
    fn MFCreateWICBitmapBuffer();
    fn MFCreateWMAEncoderActivate();
    fn MFCreateWMVEncoderActivate();
    fn MFCreateWaveFormatExFromMFMediaType();
    fn MFDeserializeAttributesFromStream();
    fn MFDeserializePresentationDescriptor();
    fn MFEndCreateFile();
    fn MFEndRegisterWorkQueueWithMMCSS();
    fn MFEndUnregisterWorkQueueWithMMCSS();
    fn MFEnumDeviceSources();
    fn MFFrameRateToAverageTimePerFrame();
    fn MFGetAttributesAsBlob();
    fn MFGetAttributesAsBlobSize();
    fn MFGetContentProtectionSystemCLSID();
    fn MFGetLocalId();
    fn MFGetMFTMerit();
    fn MFGetPlaneSize();
    fn MFGetPluginControl();
    fn MFGetService();
    fn MFGetStrideForBitmapInfoHeader();
    fn MFGetSupportedMimeTypes();
    fn MFGetSupportedSchemes();
    fn MFGetSystemId();
    fn MFGetSystemTime();
    fn MFGetTimerPeriodicity();
    fn MFGetTopoNodeCurrentType();
    fn MFGetUncompressedVideoFormat();
    fn MFGetWorkQueueMMCSSClass();
    fn MFGetWorkQueueMMCSSPriority();
    fn MFGetWorkQueueMMCSSTaskId();
    fn MFHeapAlloc();
    fn MFHeapFree();
    fn MFInitAMMediaTypeFromMFMediaType();
    fn MFInitAttributesFromBlob();
    fn MFInitMediaTypeFromAMMediaType();
    fn MFInitMediaTypeFromMFVideoFormat();
    fn MFInitMediaTypeFromMPEG1VideoInfo();
    fn MFInitMediaTypeFromMPEG2VideoInfo();
    fn MFInitMediaTypeFromVideoInfoHeader();
    fn MFInitMediaTypeFromVideoInfoHeader2();
    fn MFInitMediaTypeFromWaveFormatEx();
    fn MFInitVideoFormat();
    fn MFInitVideoFormat_RGB();
    fn MFInvokeCallback();
    fn MFIsContentProtectionDeviceSupported();
    fn MFIsFormatYUV();
    fn MFIsVirtualCameraTypeSupported();
    fn MFLoadSignedLibrary();
    fn MFLockDXGIDeviceManager();
    fn MFLockPlatform();
    fn MFLockSharedWorkQueue();
    fn MFLockWorkQueue();
    fn MFMapDX9FormatToDXGIFormat();
    fn MFMapDXGIFormatToDX9Format();
    fn MFPCreateMediaPlayer();
    fn MFPutWaitingWorkItem();
    fn MFPutWorkItem();
    fn MFPutWorkItem2();
    fn MFPutWorkItemEx();
    fn MFPutWorkItemEx2();
    fn MFRegisterLocalByteStreamHandler();
    fn MFRegisterLocalSchemeHandler();
    fn MFRegisterPlatformWithMMCSS();
    fn MFRemovePeriodicCallback();
    fn MFRequireProtectedEnvironment();
    fn MFScheduleWorkItem();
    fn MFScheduleWorkItemEx();
    fn MFSerializeAttributesToStream();
    fn MFSerializePresentationDescriptor();
    fn MFShutdown();
    fn MFShutdownObject();
    fn MFSplitSample();
    fn MFStartup();
    fn MFTEnum();
    fn MFTEnum2();
    fn MFTEnumEx();
    fn MFTGetInfo();
    fn MFTRegister();
    fn MFTRegisterLocal();
    fn MFTRegisterLocalByCLSID();
    fn MFTUnregister();
    fn MFTUnregisterLocal();
    fn MFTUnregisterLocalByCLSID();
    fn MFTranscodeGetAudioOutputAvailableTypes();
    fn MFUnlockDXGIDeviceManager();
    fn MFUnlockPlatform();
    fn MFUnlockWorkQueue();
    fn MFUnregisterPlatformFromMMCSS();
    fn MFUnwrapMediaType();
    fn MFValidateMediaTypeSize();
    fn MFWrapMediaType();
    fn MFllMulDiv();
    fn OPMGetVideoOutputForTarget();
    fn OPMGetVideoOutputsFromHMONITOR();
    fn OPMGetVideoOutputsFromIDirect3DDevice9Object();
    fn OPMXboxEnableHDCP();
    fn OPMXboxGetHDCPStatus();
    fn OPMXboxGetHDCPStatusAndType();
}
