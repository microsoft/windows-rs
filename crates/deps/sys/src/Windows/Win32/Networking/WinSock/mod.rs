#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn AcceptEx();
    fn EnumProtocolsA();
    fn EnumProtocolsW();
    fn FreeAddrInfoEx();
    fn FreeAddrInfoExW();
    fn FreeAddrInfoW();
    fn GetAcceptExSockaddrs();
    fn GetAddrInfoExA();
    fn GetAddrInfoExCancel();
    fn GetAddrInfoExOverlappedResult();
    fn GetAddrInfoExW();
    fn GetAddrInfoW();
    fn GetAddressByNameA();
    fn GetAddressByNameW();
    fn GetHostNameW();
    fn GetNameByTypeA();
    fn GetNameByTypeW();
    fn GetNameInfoW();
    fn GetServiceA();
    fn GetServiceW();
    fn GetTypeByNameA();
    fn GetTypeByNameW();
    fn InetNtopW();
    fn InetPtonW();
    fn ProcessSocketNotifications();
    fn RtlEthernetAddressToStringA();
    fn RtlEthernetAddressToStringW();
    fn RtlEthernetStringToAddressA();
    fn RtlEthernetStringToAddressW();
    fn RtlIpv4AddressToStringA();
    fn RtlIpv4AddressToStringExA();
    fn RtlIpv4AddressToStringExW();
    fn RtlIpv4AddressToStringW();
    fn RtlIpv4StringToAddressA();
    fn RtlIpv4StringToAddressExA();
    fn RtlIpv4StringToAddressExW();
    fn RtlIpv4StringToAddressW();
    fn RtlIpv6AddressToStringA();
    fn RtlIpv6AddressToStringExA();
    fn RtlIpv6AddressToStringExW();
    fn RtlIpv6AddressToStringW();
    fn RtlIpv6StringToAddressA();
    fn RtlIpv6StringToAddressExA();
    fn RtlIpv6StringToAddressExW();
    fn RtlIpv6StringToAddressW();
    fn SetAddrInfoExA();
    fn SetAddrInfoExW();
    fn SetServiceA();
    fn SetServiceW();
    fn SetSocketMediaStreamingMode();
    fn TransmitFile();
    fn WPUCompleteOverlappedRequest();
    fn WSAAccept();
    fn WSAAddressToStringA();
    fn WSAAddressToStringW();
    fn WSAAdvertiseProvider();
    fn WSAAsyncGetHostByAddr();
    fn WSAAsyncGetHostByName();
    fn WSAAsyncGetProtoByName();
    fn WSAAsyncGetProtoByNumber();
    fn WSAAsyncGetServByName();
    fn WSAAsyncGetServByPort();
    fn WSAAsyncSelect();
    fn WSACancelAsyncRequest();
    fn WSACancelBlockingCall();
    fn WSACleanup();
    fn WSACloseEvent();
    fn WSAConnect();
    fn WSAConnectByList();
    fn WSAConnectByNameA();
    fn WSAConnectByNameW();
    fn WSACreateEvent();
    fn WSADeleteSocketPeerTargetName();
    fn WSADuplicateSocketA();
    fn WSADuplicateSocketW();
    fn WSAEnumNameSpaceProvidersA();
    fn WSAEnumNameSpaceProvidersExA();
    fn WSAEnumNameSpaceProvidersExW();
    fn WSAEnumNameSpaceProvidersW();
    fn WSAEnumNetworkEvents();
    fn WSAEnumProtocolsA();
    fn WSAEnumProtocolsW();
    fn WSAEventSelect();
    fn WSAGetLastError();
    fn WSAGetOverlappedResult();
    fn WSAGetQOSByName();
    fn WSAGetServiceClassInfoA();
    fn WSAGetServiceClassInfoW();
    fn WSAGetServiceClassNameByClassIdA();
    fn WSAGetServiceClassNameByClassIdW();
    fn WSAHtonl();
    fn WSAHtons();
    fn WSAImpersonateSocketPeer();
    fn WSAInstallServiceClassA();
    fn WSAInstallServiceClassW();
    fn WSAIoctl();
    fn WSAIsBlocking();
    fn WSAJoinLeaf();
    fn WSALookupServiceBeginA();
    fn WSALookupServiceBeginW();
    fn WSALookupServiceEnd();
    fn WSALookupServiceNextA();
    fn WSALookupServiceNextW();
    fn WSANSPIoctl();
    fn WSANtohl();
    fn WSANtohs();
    fn WSAPoll();
    fn WSAProviderCompleteAsyncCall();
    fn WSAProviderConfigChange();
    fn WSAQuerySocketSecurity();
    fn WSARecv();
    fn WSARecvDisconnect();
    fn WSARecvEx();
    fn WSARecvFrom();
    fn WSARemoveServiceClass();
    fn WSAResetEvent();
    fn WSARevertImpersonation();
    fn WSASend();
    fn WSASendDisconnect();
    fn WSASendMsg();
    fn WSASendTo();
    fn WSASetBlockingHook();
    fn WSASetEvent();
    fn WSASetLastError();
    fn WSASetServiceA();
    fn WSASetServiceW();
    fn WSASetSocketPeerTargetName();
    fn WSASetSocketSecurity();
    fn WSASocketA();
    fn WSASocketW();
    fn WSAStartup();
    fn WSAStringToAddressA();
    fn WSAStringToAddressW();
    fn WSAUnadvertiseProvider();
    fn WSAUnhookBlockingHook();
    fn WSAWaitForMultipleEvents();
    fn WSCDeinstallProvider();
    fn WSCDeinstallProvider32();
    fn WSCEnableNSProvider();
    fn WSCEnableNSProvider32();
    fn WSCEnumNameSpaceProviders32();
    fn WSCEnumNameSpaceProvidersEx32();
    fn WSCEnumProtocols();
    fn WSCEnumProtocols32();
    fn WSCGetApplicationCategory();
    fn WSCGetProviderInfo();
    fn WSCGetProviderInfo32();
    fn WSCGetProviderPath();
    fn WSCGetProviderPath32();
    fn WSCInstallNameSpace();
    fn WSCInstallNameSpace32();
    fn WSCInstallNameSpaceEx();
    fn WSCInstallNameSpaceEx32();
    fn WSCInstallProvider();
    fn WSCInstallProvider64_32();
    fn WSCInstallProviderAndChains64_32();
    fn WSCSetApplicationCategory();
    fn WSCSetProviderInfo();
    fn WSCSetProviderInfo32();
    fn WSCUnInstallNameSpace();
    fn WSCUnInstallNameSpace32();
    fn WSCUpdateProvider();
    fn WSCUpdateProvider32();
    fn WSCWriteNameSpaceOrder();
    fn WSCWriteNameSpaceOrder32();
    fn WSCWriteProviderOrder();
    fn WSCWriteProviderOrder32();
    fn __WSAFDIsSet();
    fn accept();
    fn bind();
    fn closesocket();
    fn connect();
    fn freeaddrinfo();
    fn getaddrinfo();
    fn gethostbyaddr();
    fn gethostbyname();
    fn gethostname();
    fn getnameinfo();
    fn getpeername();
    fn getprotobyname();
    fn getprotobynumber();
    fn getservbyname();
    fn getservbyport();
    fn getsockname();
    fn getsockopt();
    fn htonl();
    fn htons();
    fn inet_addr();
    fn inet_ntoa();
    fn inet_ntop();
    fn inet_pton();
    fn ioctlsocket();
    fn listen();
    fn ntohl();
    fn ntohs();
    fn recv();
    fn recvfrom();
    fn select();
    fn send();
    fn sendto();
    fn setsockopt();
    fn shutdown();
    fn socket();
}
