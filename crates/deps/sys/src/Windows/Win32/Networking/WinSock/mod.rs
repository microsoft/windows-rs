#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn AAL5_MODE_MESSAGE();
    fn AAL5_MODE_STREAMING();
    fn AAL5_PARAMETERS();
    fn AAL5_SSCS_FRAME_RELAY();
    fn AAL5_SSCS_NULL();
    fn AAL5_SSCS_SSCOP_ASSURED();
    fn AAL5_SSCS_SSCOP_NON_ASSURED();
    fn AALUSER_PARAMETERS();
    fn AAL_PARAMETERS_IE();
    fn AAL_TYPE();
    fn ADDRINFOA();
    fn ADDRINFOEX_VERSION_2();
    fn ADDRINFOEX_VERSION_3();
    fn ADDRINFOEX_VERSION_4();
    fn ADDRINFOEX_VERSION_5();
    fn ADDRINFOEX_VERSION_6();
    fn AFPROTOCOLS();
    fn AF_12844();
    fn AF_APPLETALK();
    fn AF_ATM();
    fn AF_BAN();
    fn AF_CCITT();
    fn AF_CHAOS();
    fn AF_CLUSTER();
    fn AF_DATAKIT();
    fn AF_DECnet();
    fn AF_DLI();
    fn AF_ECMA();
    fn AF_FIREFOX();
    fn AF_HYLINK();
    fn AF_HYPERV();
    fn AF_ICLFXBM();
    fn AF_IMPLINK();
    fn AF_IPX();
    fn AF_IRDA();
    fn AF_ISO();
    fn AF_LAT();
    fn AF_LINK();
    fn AF_MAX();
    fn AF_NETBIOS();
    fn AF_NETDES();
    fn AF_NS();
    fn AF_OSI();
    fn AF_PUP();
    fn AF_SNA();
    fn AF_TCNMESSAGE();
    fn AF_TCNPROCESS();
    fn AF_UNIX();
    fn AF_UNKNOWN1();
    fn AF_VOICEVIEW();
    fn AI_ADDRCONFIG();
    fn AI_ALL();
    fn AI_BYPASS_DNS_CACHE();
    fn AI_CANONNAME();
    fn AI_DISABLE_IDN_ENCODING();
    fn AI_DNS_ONLY();
    fn AI_DNS_RESPONSE_HOSTFILE();
    fn AI_DNS_RESPONSE_SECURE();
    fn AI_DNS_SERVER_TYPE_DOH();
    fn AI_DNS_SERVER_TYPE_UDP();
    fn AI_DNS_SERVER_UDP_FALLBACK();
    fn AI_EXCLUSIVE_CUSTOM_SERVERS();
    fn AI_EXTENDED();
    fn AI_FILESERVER();
    fn AI_FORCE_CLEAR_TEXT();
    fn AI_FQDN();
    fn AI_NON_AUTHORITATIVE();
    fn AI_NUMERICHOST();
    fn AI_NUMERICSERV();
    fn AI_PASSIVE();
    fn AI_REQUIRE_SECURE();
    fn AI_RESOLUTION_HANDLE();
    fn AI_RETURN_PREFERRED_NAMES();
    fn AI_RETURN_RESPONSE_FLAGS();
    fn AI_RETURN_TTL();
    fn AI_SECURE();
    fn AI_SECURE_WITH_FALLBACK();
    fn AI_V4MAPPED();
    fn ASSOCIATE_NAMERES_CONTEXT();
    fn ASSOCIATE_NAMERES_CONTEXT_INPUT();
    fn ATMPROTO_AAL1();
    fn ATMPROTO_AAL2();
    fn ATMPROTO_AAL34();
    fn ATMPROTO_AAL5();
    fn ATMPROTO_AALUSER();
    fn ATM_ADDRESS();
    fn ATM_ADDR_SIZE();
    fn ATM_AESA();
    fn ATM_BHLI();
    fn ATM_BLLI();
    fn ATM_BLLI_IE();
    fn ATM_BROADBAND_BEARER_CAPABILITY_IE();
    fn ATM_CALLING_PARTY_NUMBER_IE();
    fn ATM_CAUSE_IE();
    fn ATM_CONNECTION_ID();
    fn ATM_E164();
    fn ATM_NSAP();
    fn ATM_PVC_PARAMS();
    fn ATM_QOS_CLASS_IE();
    fn ATM_TD();
    fn ATM_TRAFFIC_DESCRIPTOR_IE();
    fn ATM_TRANSIT_NETWORK_SELECTION_IE();
    fn AcceptEx();
    fn BASE_PROTOCOL();
    fn BCOB_A();
    fn BCOB_C();
    fn BCOB_X();
    fn BHLI_HighLayerProfile();
    fn BHLI_ISO();
    fn BHLI_UserSpecific();
    fn BHLI_VendorSpecificAppId();
    fn BIGENDIAN();
    fn BITS_PER_BYTE();
    fn BLLI_L2_ELAPB();
    fn BLLI_L2_HDLC_ABM();
    fn BLLI_L2_HDLC_ARM();
    fn BLLI_L2_HDLC_NRM();
    fn BLLI_L2_ISO_1745();
    fn BLLI_L2_ISO_7776();
    fn BLLI_L2_LLC();
    fn BLLI_L2_MODE_EXT();
    fn BLLI_L2_MODE_NORMAL();
    fn BLLI_L2_Q921();
    fn BLLI_L2_Q922();
    fn BLLI_L2_USER_SPECIFIED();
    fn BLLI_L2_X25L();
    fn BLLI_L2_X25M();
    fn BLLI_L2_X75();
    fn BLLI_L3_IPI_IP();
    fn BLLI_L3_IPI_SNAP();
    fn BLLI_L3_ISO_8208();
    fn BLLI_L3_ISO_TR9577();
    fn BLLI_L3_MODE_EXT();
    fn BLLI_L3_MODE_NORMAL();
    fn BLLI_L3_PACKET_1024();
    fn BLLI_L3_PACKET_128();
    fn BLLI_L3_PACKET_16();
    fn BLLI_L3_PACKET_2048();
    fn BLLI_L3_PACKET_256();
    fn BLLI_L3_PACKET_32();
    fn BLLI_L3_PACKET_4096();
    fn BLLI_L3_PACKET_512();
    fn BLLI_L3_PACKET_64();
    fn BLLI_L3_SIO_8473();
    fn BLLI_L3_T70();
    fn BLLI_L3_USER_SPECIFIED();
    fn BLLI_L3_X223();
    fn BLLI_L3_X25();
    fn CAUSE_AAL_PARAMETERS_UNSUPPORTED();
    fn CAUSE_ACCESS_INFORMAION_DISCARDED();
    fn CAUSE_BEARER_CAPABILITY_UNAUTHORIZED();
    fn CAUSE_BEARER_CAPABILITY_UNAVAILABLE();
    fn CAUSE_BEARER_CAPABILITY_UNIMPLEMENTED();
    fn CAUSE_CALL_REJECTED();
    fn CAUSE_CHANNEL_NONEXISTENT();
    fn CAUSE_COND_PERMANENT();
    fn CAUSE_COND_TRANSIENT();
    fn CAUSE_COND_UNKNOWN();
    fn CAUSE_DESTINATION_OUT_OF_ORDER();
    fn CAUSE_INCOMPATIBLE_DESTINATION();
    fn CAUSE_INCORRECT_MESSAGE_LENGTH();
    fn CAUSE_INVALID_CALL_REFERENCE();
    fn CAUSE_INVALID_ENDPOINT_REFERENCE();
    fn CAUSE_INVALID_IE_CONTENTS();
    fn CAUSE_INVALID_NUMBER_FORMAT();
    fn CAUSE_INVALID_STATE_FOR_MESSAGE();
    fn CAUSE_INVALID_TRANSIT_NETWORK_SELECTION();
    fn CAUSE_LOC_BEYOND_INTERWORKING();
    fn CAUSE_LOC_INTERNATIONAL_NETWORK();
    fn CAUSE_LOC_PRIVATE_LOCAL();
    fn CAUSE_LOC_PRIVATE_REMOTE();
    fn CAUSE_LOC_PUBLIC_LOCAL();
    fn CAUSE_LOC_PUBLIC_REMOTE();
    fn CAUSE_LOC_TRANSIT_NETWORK();
    fn CAUSE_LOC_USER();
    fn CAUSE_MANDATORY_IE_MISSING();
    fn CAUSE_NA_ABNORMAL();
    fn CAUSE_NA_NORMAL();
    fn CAUSE_NETWORK_OUT_OF_ORDER();
    fn CAUSE_NORMAL_CALL_CLEARING();
    fn CAUSE_NORMAL_UNSPECIFIED();
    fn CAUSE_NO_ROUTE_TO_DESTINATION();
    fn CAUSE_NO_ROUTE_TO_TRANSIT_NETWORK();
    fn CAUSE_NO_USER_RESPONDING();
    fn CAUSE_NO_VPI_VCI_AVAILABLE();
    fn CAUSE_NUMBER_CHANGED();
    fn CAUSE_OPTION_UNAVAILABLE();
    fn CAUSE_PROTOCOL_ERROR();
    fn CAUSE_PU_PROVIDER();
    fn CAUSE_PU_USER();
    fn CAUSE_QOS_UNAVAILABLE();
    fn CAUSE_REASON_IE_INSUFFICIENT();
    fn CAUSE_REASON_IE_MISSING();
    fn CAUSE_REASON_USER();
    fn CAUSE_RECOVERY_ON_TIMEOUT();
    fn CAUSE_RESOURCE_UNAVAILABLE();
    fn CAUSE_STATUS_ENQUIRY_RESPONSE();
    fn CAUSE_TEMPORARY_FAILURE();
    fn CAUSE_TOO_MANY_PENDING_ADD_PARTY();
    fn CAUSE_UNALLOCATED_NUMBER();
    fn CAUSE_UNIMPLEMENTED_IE();
    fn CAUSE_UNIMPLEMENTED_MESSAGE_TYPE();
    fn CAUSE_UNSUPPORTED_TRAFFIC_PARAMETERS();
    fn CAUSE_USER_BUSY();
    fn CAUSE_USER_CELL_RATE_UNAVAILABLE();
    fn CAUSE_USER_REJECTS_CLIR();
    fn CAUSE_VPI_VCI_UNACCEPTABLE();
    fn CAUSE_VPI_VCI_UNAVAILABLE();
    fn CF_ACCEPT();
    fn CF_DEFER();
    fn CF_REJECT();
    fn CLIP_NOT();
    fn CLIP_SUS();
    fn CONTROL_CHANNEL_TRIGGER_STATUS();
    fn CSADDR_INFO();
    fn DE_REUSE_SOCKET();
    fn EnumProtocolsA();
    fn EnumProtocolsW();
    fn FD_ACCEPT();
    fn FD_ACCEPT_BIT();
    fn FD_ADDRESS_LIST_CHANGE_BIT();
    fn FD_CLOSE();
    fn FD_CLOSE_BIT();
    fn FD_CONNECT();
    fn FD_CONNECT_BIT();
    fn FD_GROUP_QOS_BIT();
    fn FD_MAX_EVENTS();
    fn FD_OOB();
    fn FD_OOB_BIT();
    fn FD_QOS_BIT();
    fn FD_READ();
    fn FD_READ_BIT();
    fn FD_ROUTING_INTERFACE_CHANGE_BIT();
    fn FD_SETSIZE();
    fn FD_WRITE();
    fn FD_WRITE_BIT();
    fn FIOASYNC();
    fn FIONBIO();
    fn FIONREAD();
    fn FROM_PROTOCOL_INFO();
    fn FreeAddrInfoEx();
    fn FreeAddrInfoExW();
    fn FreeAddrInfoW();
    fn GAI_STRERROR_BUFFER_SIZE();
    fn GROUP_FILTER();
    fn GROUP_REQ();
    fn GROUP_SOURCE_REQ();
    fn GetAcceptExSockaddrs();
    fn GetAddrInfoExA();
    fn GetAddrInfoExCancel();
    fn GetAddrInfoExOverlappedResult();
    fn GetAddrInfoExW();
    fn GetAddrInfoW();
    fn GetAddressByNameA();
    fn GetAddressByNameW();
    fn GetHostNameW();
    fn GetNameByTypeA();
    fn GetNameByTypeW();
    fn GetNameInfoW();
    fn GetServiceA();
    fn GetServiceW();
    fn GetTypeByNameA();
    fn GetTypeByNameW();
    fn HWSAEVENT();
    fn IAS_ATTRIB_INT();
    fn IAS_ATTRIB_NO_ATTRIB();
    fn IAS_ATTRIB_NO_CLASS();
    fn IAS_ATTRIB_OCTETSEQ();
    fn IAS_ATTRIB_STR();
    fn IAS_MAX_ATTRIBNAME();
    fn IAS_MAX_CLASSNAME();
    fn IAS_MAX_OCTET_STRING();
    fn IAS_MAX_USER_STRING();
    fn ICMP_ERROR_INFO();
    fn IFF_BROADCAST();
    fn IFF_LOOPBACK();
    fn IFF_MULTICAST();
    fn IFF_POINTTOPOINT();
    fn IFF_UP();
    fn IMPLINK_HIGHEXPER();
    fn IMPLINK_IP();
    fn IMPLINK_LOWEXPER();
    fn IN4ADDR_LINKLOCALPREFIX_LENGTH();
    fn IN4ADDR_LOOPBACK();
    fn IN4ADDR_LOOPBACKPREFIX_LENGTH();
    fn IN4ADDR_MULTICASTPREFIX_LENGTH();
    fn IN6ADDR_6TO4PREFIX_LENGTH();
    fn IN6ADDR_LINKLOCALPREFIX_LENGTH();
    fn IN6ADDR_MULTICASTPREFIX_LENGTH();
    fn IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH();
    fn IN6ADDR_TEREDOPREFIX_LENGTH();
    fn IN6ADDR_V4MAPPEDPREFIX_LENGTH();
    fn IN6_ADDR();
    fn IN6_PKTINFO();
    fn INADDR_LOOPBACK();
    fn INADDR_NONE();
    fn INCL_WINSOCK_API_PROTOTYPES();
    fn INCL_WINSOCK_API_TYPEDEFS();
    fn INET6_ADDRSTRLEN();
    fn INET_ADDRSTRLEN();
    fn INET_PORT_RANGE();
    fn INET_PORT_RESERVATION_INFORMATION();
    fn INET_PORT_RESERVATION_INSTANCE();
    fn INET_PORT_RESERVATION_TOKEN();
    fn INTERFACE_INFO();
    fn INTERFACE_INFO_EX();
    fn INVALID_SOCKET();
    fn IN_ADDR();
    fn IN_CLASSA_HOST();
    fn IN_CLASSA_MAX();
    fn IN_CLASSA_NET();
    fn IN_CLASSA_NSHIFT();
    fn IN_CLASSB_HOST();
    fn IN_CLASSB_MAX();
    fn IN_CLASSB_NET();
    fn IN_CLASSB_NSHIFT();
    fn IN_CLASSC_HOST();
    fn IN_CLASSC_NET();
    fn IN_CLASSC_NSHIFT();
    fn IN_CLASSD_HOST();
    fn IN_CLASSD_NET();
    fn IN_CLASSD_NSHIFT();
    fn IN_PKTINFO();
    fn IN_PKTINFO_EX();
    fn IN_RECVERR();
    fn IOCPARM_MASK();
    fn IOC_IN();
    fn IOC_INOUT();
    fn IOC_OUT();
    fn IOC_PROTOCOL();
    fn IOC_UNIX();
    fn IOC_VENDOR();
    fn IOC_VOID();
    fn IOC_WS2();
    fn IP6T_SO_ORIGINAL_DST();
    fn IPPORT_BIFFUDP();
    fn IPPORT_CHARGEN();
    fn IPPORT_CMDSERVER();
    fn IPPORT_DAYTIME();
    fn IPPORT_DISCARD();
    fn IPPORT_DYNAMIC_MAX();
    fn IPPORT_DYNAMIC_MIN();
    fn IPPORT_ECHO();
    fn IPPORT_EFSSERVER();
    fn IPPORT_EPMAP();
    fn IPPORT_EXECSERVER();
    fn IPPORT_FINGER();
    fn IPPORT_FTP();
    fn IPPORT_FTP_DATA();
    fn IPPORT_HTTPS();
    fn IPPORT_IMAP();
    fn IPPORT_IMAP3();
    fn IPPORT_LDAP();
    fn IPPORT_LOGINSERVER();
    fn IPPORT_MICROSOFT_DS();
    fn IPPORT_MSP();
    fn IPPORT_MTP();
    fn IPPORT_NAMESERVER();
    fn IPPORT_NETBIOS_DGM();
    fn IPPORT_NETBIOS_NS();
    fn IPPORT_NETBIOS_SSN();
    fn IPPORT_NETSTAT();
    fn IPPORT_NTP();
    fn IPPORT_POP3();
    fn IPPORT_QOTD();
    fn IPPORT_REGISTERED_MAX();
    fn IPPORT_REGISTERED_MIN();
    fn IPPORT_RESERVED();
    fn IPPORT_RJE();
    fn IPPORT_ROUTESERVER();
    fn IPPORT_SMTP();
    fn IPPORT_SNMP();
    fn IPPORT_SNMP_TRAP();
    fn IPPORT_SUPDUP();
    fn IPPORT_SYSTAT();
    fn IPPORT_TCPMUX();
    fn IPPORT_TELNET();
    fn IPPORT_TFTP();
    fn IPPORT_TIMESERVER();
    fn IPPORT_TTYLINK();
    fn IPPORT_WHOIS();
    fn IPPORT_WHOSERVER();
    fn IPPROTO();
    fn IPPROTO_IP();
    fn IPPROTO_RM();
    fn IPV6_ADD_IFLIST();
    fn IPV6_ADD_MEMBERSHIP();
    fn IPV6_CHECKSUM();
    fn IPV6_DEL_IFLIST();
    fn IPV6_DONTFRAG();
    fn IPV6_DROP_MEMBERSHIP();
    fn IPV6_ECN();
    fn IPV6_GET_IFLIST();
    fn IPV6_HDRINCL();
    fn IPV6_HOPLIMIT();
    fn IPV6_HOPOPTS();
    fn IPV6_IFLIST();
    fn IPV6_JOIN_GROUP();
    fn IPV6_LEAVE_GROUP();
    fn IPV6_MREQ();
    fn IPV6_MTU();
    fn IPV6_MTU_DISCOVER();
    fn IPV6_MULTICAST_HOPS();
    fn IPV6_MULTICAST_IF();
    fn IPV6_MULTICAST_LOOP();
    fn IPV6_NRT_INTERFACE();
    fn IPV6_PKTINFO();
    fn IPV6_PKTINFO_EX();
    fn IPV6_PROTECTION_LEVEL();
    fn IPV6_RECVDSTADDR();
    fn IPV6_RECVECN();
    fn IPV6_RECVERR();
    fn IPV6_RECVIF();
    fn IPV6_RECVRTHDR();
    fn IPV6_RECVTCLASS();
    fn IPV6_RTHDR();
    fn IPV6_TCLASS();
    fn IPV6_UNICAST_HOPS();
    fn IPV6_UNICAST_IF();
    fn IPV6_USER_MTU();
    fn IPV6_V6ONLY();
    fn IPV6_WFP_REDIRECT_CONTEXT();
    fn IPV6_WFP_REDIRECT_RECORDS();
    fn IPX_ADDRESS();
    fn IPX_ADDRESS_DATA();
    fn IPX_ADDRESS_NOTIFY();
    fn IPX_DSTYPE();
    fn IPX_EXTENDED_ADDRESS();
    fn IPX_FILTERPTYPE();
    fn IPX_GETNETINFO();
    fn IPX_GETNETINFO_NORIP();
    fn IPX_IMMEDIATESPXACK();
    fn IPX_MAXSIZE();
    fn IPX_MAX_ADAPTER_NUM();
    fn IPX_NETNUM_DATA();
    fn IPX_PTYPE();
    fn IPX_RECEIVE_BROADCAST();
    fn IPX_RECVHDR();
    fn IPX_RERIPNETNUMBER();
    fn IPX_SPXCONNSTATUS_DATA();
    fn IPX_SPXGETCONNECTIONSTATUS();
    fn IPX_STOPFILTERPTYPE();
    fn IP_ADD_IFLIST();
    fn IP_ADD_MEMBERSHIP();
    fn IP_ADD_SOURCE_MEMBERSHIP();
    fn IP_BLOCK_SOURCE();
    fn IP_DEFAULT_MULTICAST_LOOP();
    fn IP_DEFAULT_MULTICAST_TTL();
    fn IP_DEL_IFLIST();
    fn IP_DONTFRAGMENT();
    fn IP_DROP_MEMBERSHIP();
    fn IP_DROP_SOURCE_MEMBERSHIP();
    fn IP_ECN();
    fn IP_GET_IFLIST();
    fn IP_HDRINCL();
    fn IP_HOPLIMIT();
    fn IP_IFLIST();
    fn IP_MAX_MEMBERSHIPS();
    fn IP_MREQ();
    fn IP_MREQ_SOURCE();
    fn IP_MSFILTER();
    fn IP_MTU();
    fn IP_MTU_DISCOVER();
    fn IP_MULTICAST_IF();
    fn IP_MULTICAST_LOOP();
    fn IP_MULTICAST_TTL();
    fn IP_NRT_INTERFACE();
    fn IP_OPTIONS();
    fn IP_ORIGINAL_ARRIVAL_IF();
    fn IP_PKTINFO();
    fn IP_PKTINFO_EX();
    fn IP_PROTECTION_LEVEL();
    fn IP_RECEIVE_BROADCAST();
    fn IP_RECVDSTADDR();
    fn IP_RECVECN();
    fn IP_RECVERR();
    fn IP_RECVIF();
    fn IP_RECVRTHDR();
    fn IP_RECVTCLASS();
    fn IP_RECVTOS();
    fn IP_RECVTTL();
    fn IP_RTHDR();
    fn IP_TCLASS();
    fn IP_TOS();
    fn IP_TTL();
    fn IP_UNBLOCK_SOURCE();
    fn IP_UNICAST_IF();
    fn IP_UNSPECIFIED_HOP_LIMIT();
    fn IP_UNSPECIFIED_TYPE_OF_SERVICE();
    fn IP_UNSPECIFIED_USER_MTU();
    fn IP_USER_MTU();
    fn IP_WFP_REDIRECT_CONTEXT();
    fn IP_WFP_REDIRECT_RECORDS();
    fn IRDA_PROTO_SOCK_STREAM();
    fn IRLMP_9WIRE_MODE();
    fn IRLMP_DISCOVERY_MODE();
    fn IRLMP_ENUMDEVICES();
    fn IRLMP_EXCLUSIVE_MODE();
    fn IRLMP_IAS_QUERY();
    fn IRLMP_IAS_SET();
    fn IRLMP_IRLPT_MODE();
    fn IRLMP_PARAMETERS();
    fn IRLMP_SEND_PDU_LEN();
    fn IRLMP_SHARP_MODE();
    fn IRLMP_TINYTP_MODE();
    fn ISOPROTO_CLNP();
    fn ISOPROTO_CLTP();
    fn ISOPROTO_ESIS();
    fn ISOPROTO_INACT_NL();
    fn ISOPROTO_INTRAISIS();
    fn ISOPROTO_TP();
    fn ISOPROTO_TP0();
    fn ISOPROTO_TP1();
    fn ISOPROTO_TP2();
    fn ISOPROTO_TP3();
    fn ISOPROTO_TP4();
    fn ISOPROTO_X25();
    fn ISO_EXP_DATA_NUSE();
    fn ISO_EXP_DATA_USE();
    fn ISO_HIERARCHICAL();
    fn ISO_MAX_ADDR_LENGTH();
    fn ISO_NON_HIERARCHICAL();
    fn InetNtopW();
    fn InetPtonW();
    fn JL_BOTH();
    fn JL_RECEIVER_ONLY();
    fn JL_SENDER_ONLY();
    fn LAYERED_PROTOCOL();
    fn LITTLEENDIAN();
    fn LM_BAUD_115200();
    fn LM_BAUD_1152K();
    fn LM_BAUD_1200();
    fn LM_BAUD_16M();
    fn LM_BAUD_19200();
    fn LM_BAUD_2400();
    fn LM_BAUD_38400();
    fn LM_BAUD_4M();
    fn LM_BAUD_57600();
    fn LM_BAUD_576K();
    fn LM_BAUD_9600();
    fn LM_HB1_Computer();
    fn LM_HB1_Fax();
    fn LM_HB1_LANAccess();
    fn LM_HB1_Modem();
    fn LM_HB1_PDA_Palmtop();
    fn LM_HB1_PnP();
    fn LM_HB1_Printer();
    fn LM_HB2_FileServer();
    fn LM_HB2_Telephony();
    fn LM_HB_Extension();
    fn LM_IRPARMS();
    fn LOG2_BITS_PER_BYTE();
    fn LPBLOCKINGCALLBACK();
    fn LPCONDITIONPROC();
    fn LPFN_ACCEPTEX();
    fn LPFN_CONNECTEX();
    fn LPFN_DISCONNECTEX();
    fn LPFN_GETACCEPTEXSOCKADDRS();
    fn LPFN_NSPAPI();
    fn LPFN_RIOCLOSECOMPLETIONQUEUE();
    fn LPFN_RIOCREATECOMPLETIONQUEUE();
    fn LPFN_RIOCREATEREQUESTQUEUE();
    fn LPFN_RIODEQUEUECOMPLETION();
    fn LPFN_RIODEREGISTERBUFFER();
    fn LPFN_RIONOTIFY();
    fn LPFN_RIORECEIVE();
    fn LPFN_RIORECEIVEEX();
    fn LPFN_RIOREGISTERBUFFER();
    fn LPFN_RIORESIZECOMPLETIONQUEUE();
    fn LPFN_RIORESIZEREQUESTQUEUE();
    fn LPFN_RIOSEND();
    fn LPFN_RIOSENDEX();
    fn LPFN_TRANSMITFILE();
    fn LPFN_TRANSMITPACKETS();
    fn LPFN_WSAPOLL();
    fn LPFN_WSARECVMSG();
    fn LPFN_WSASENDMSG();
    fn LPLOOKUPSERVICE_COMPLETION_ROUTINE();
    fn LPNSPCLEANUP();
    fn LPNSPGETSERVICECLASSINFO();
    fn LPNSPINSTALLSERVICECLASS();
    fn LPNSPIOCTL();
    fn LPNSPLOOKUPSERVICEBEGIN();
    fn LPNSPLOOKUPSERVICEEND();
    fn LPNSPLOOKUPSERVICENEXT();
    fn LPNSPREMOVESERVICECLASS();
    fn LPNSPSETSERVICE();
    fn LPNSPSTARTUP();
    fn LPNSPV2CLEANUP();
    fn LPNSPV2CLIENTSESSIONRUNDOWN();
    fn LPNSPV2LOOKUPSERVICEBEGIN();
    fn LPNSPV2LOOKUPSERVICEEND();
    fn LPNSPV2LOOKUPSERVICENEXTEX();
    fn LPNSPV2SETSERVICEEX();
    fn LPNSPV2STARTUP();
    fn LPSERVICE_CALLBACK_PROC();
    fn LPWPUCLOSEEVENT();
    fn LPWPUCLOSESOCKETHANDLE();
    fn LPWPUCLOSETHREAD();
    fn LPWPUCOMPLETEOVERLAPPEDREQUEST();
    fn LPWPUCREATEEVENT();
    fn LPWPUCREATESOCKETHANDLE();
    fn LPWPUFDISSET();
    fn LPWPUGETPROVIDERPATH();
    fn LPWPUMODIFYIFSHANDLE();
    fn LPWPUOPENCURRENTTHREAD();
    fn LPWPUPOSTMESSAGE();
    fn LPWPUQUERYBLOCKINGCALLBACK();
    fn LPWPUQUERYSOCKETHANDLECONTEXT();
    fn LPWPUQUEUEAPC();
    fn LPWPURESETEVENT();
    fn LPWPUSETEVENT();
    fn LPWSAOVERLAPPED_COMPLETION_ROUTINE();
    fn LPWSAUSERAPC();
    fn LPWSCDEINSTALLPROVIDER();
    fn LPWSCENABLENSPROVIDER();
    fn LPWSCENUMPROTOCOLS();
    fn LPWSCGETPROVIDERPATH();
    fn LPWSCINSTALLNAMESPACE();
    fn LPWSCINSTALLPROVIDER();
    fn LPWSCUNINSTALLNAMESPACE();
    fn LPWSCUPDATEPROVIDER();
    fn LPWSCWRITENAMESPACEORDER();
    fn LPWSCWRITEPROVIDERORDER();
    fn LPWSPACCEPT();
    fn LPWSPADDRESSTOSTRING();
    fn LPWSPASYNCSELECT();
    fn LPWSPBIND();
    fn LPWSPCANCELBLOCKINGCALL();
    fn LPWSPCLEANUP();
    fn LPWSPCLOSESOCKET();
    fn LPWSPCONNECT();
    fn LPWSPDUPLICATESOCKET();
    fn LPWSPENUMNETWORKEVENTS();
    fn LPWSPEVENTSELECT();
    fn LPWSPGETOVERLAPPEDRESULT();
    fn LPWSPGETPEERNAME();
    fn LPWSPGETQOSBYNAME();
    fn LPWSPGETSOCKNAME();
    fn LPWSPGETSOCKOPT();
    fn LPWSPIOCTL();
    fn LPWSPJOINLEAF();
    fn LPWSPLISTEN();
    fn LPWSPRECV();
    fn LPWSPRECVDISCONNECT();
    fn LPWSPRECVFROM();
    fn LPWSPSELECT();
    fn LPWSPSEND();
    fn LPWSPSENDDISCONNECT();
    fn LPWSPSENDTO();
    fn LPWSPSETSOCKOPT();
    fn LPWSPSHUTDOWN();
    fn LPWSPSOCKET();
    fn LPWSPSTARTUP();
    fn LPWSPSTRINGTOADDRESS();
    fn LSP_CRYPTO_COMPRESS();
    fn LSP_FIREWALL();
    fn LSP_INBOUND_MODIFY();
    fn LSP_INSPECTOR();
    fn LSP_LOCAL_CACHE();
    fn LSP_OUTBOUND_MODIFY();
    fn LSP_PROXY();
    fn LSP_REDIRECTOR();
    fn LSP_SYSTEM();
    fn LUP_ADDRCONFIG();
    fn LUP_API_ANSI();
    fn LUP_CONTAINERS();
    fn LUP_DEEP();
    fn LUP_DISABLE_IDN_ENCODING();
    fn LUP_DNS_ONLY();
    fn LUP_DUAL_ADDR();
    fn LUP_EXCLUSIVE_CUSTOM_SERVERS();
    fn LUP_EXTENDED_QUERYSET();
    fn LUP_FILESERVER();
    fn LUP_FLUSHCACHE();
    fn LUP_FLUSHPREVIOUS();
    fn LUP_FORCE_CLEAR_TEXT();
    fn LUP_NEAREST();
    fn LUP_NOCONTAINERS();
    fn LUP_NON_AUTHORITATIVE();
    fn LUP_REQUIRE_SECURE();
    fn LUP_RESOLUTION_HANDLE();
    fn LUP_RES_SERVICE();
    fn LUP_RETURN_ADDR();
    fn LUP_RETURN_ALIASES();
    fn LUP_RETURN_ALL();
    fn LUP_RETURN_BLOB();
    fn LUP_RETURN_COMMENT();
    fn LUP_RETURN_NAME();
    fn LUP_RETURN_PREFERRED_NAMES();
    fn LUP_RETURN_QUERY_STRING();
    fn LUP_RETURN_RESPONSE_FLAGS();
    fn LUP_RETURN_TTL();
    fn LUP_RETURN_TYPE();
    fn LUP_RETURN_VERSION();
    fn LUP_SECURE();
    fn LUP_SECURE_WITH_FALLBACK();
    fn LmCharSetASCII();
    fn LmCharSetISO_8859_1();
    fn LmCharSetISO_8859_2();
    fn LmCharSetISO_8859_3();
    fn LmCharSetISO_8859_4();
    fn LmCharSetISO_8859_5();
    fn LmCharSetISO_8859_6();
    fn LmCharSetISO_8859_7();
    fn LmCharSetISO_8859_8();
    fn LmCharSetISO_8859_9();
    fn LmCharSetUNICODE();
    fn MAXGETHOSTSTRUCT();
    fn MAX_MCAST_TTL();
    fn MAX_PROTOCOL_CHAIN();
    fn MAX_WINDOW_INCREMENT_PERCENTAGE();
    fn MCAST_BLOCK_SOURCE();
    fn MCAST_JOIN_GROUP();
    fn MCAST_JOIN_SOURCE_GROUP();
    fn MCAST_LEAVE_GROUP();
    fn MCAST_LEAVE_SOURCE_GROUP();
    fn MCAST_UNBLOCK_SOURCE();
    fn MSG_BCAST();
    fn MSG_CTRUNC();
    fn MSG_ERRQUEUE();
    fn MSG_INTERRUPT();
    fn MSG_MAXIOVLEN();
    fn MSG_MCAST();
    fn MSG_PARTIAL();
    fn MSG_PEEK();
    fn MSG_PUSH_IMMEDIATE();
    fn MSG_TRUNC();
    fn MSG_WAITALL();
    fn MULTICAST_MODE_TYPE();
    fn NAPI_DOMAIN_DESCRIPTION_BLOB();
    fn NAPI_PROVIDER_INSTALLATION_BLOB();
    fn NAPI_PROVIDER_LEVEL();
    fn NAPI_PROVIDER_TYPE();
    fn NETBIOS_GROUP_NAME();
    fn NETBIOS_NAME_LENGTH();
    fn NETBIOS_TYPE_QUICK_GROUP();
    fn NETBIOS_TYPE_QUICK_UNIQUE();
    fn NETBIOS_UNIQUE_NAME();
    fn NETRESOURCE2A();
    fn NETRESOURCE2W();
    fn NI_DGRAM();
    fn NI_MAXHOST();
    fn NI_MAXSERV();
    fn NI_NAMEREQD();
    fn NI_NOFQDN();
    fn NI_NUMERICHOST();
    fn NI_NUMERICSERV();
    fn NLA_ALLUSERS_NETWORK();
    fn NLA_BLOB();
    fn NLA_BLOB_DATA_TYPE();
    fn NLA_CONNECTIVITY_TYPE();
    fn NLA_FRIENDLY_NAME();
    fn NLA_INTERNET();
    fn NL_ADDRESS_TYPE();
    fn NL_BANDWIDTH_FLAG();
    fn NL_BANDWIDTH_INFORMATION();
    fn NL_DAD_STATE();
    fn NL_INTERFACE_NETWORK_CATEGORY_STATE();
    fn NL_INTERFACE_OFFLOAD_ROD();
    fn NL_LINK_LOCAL_ADDRESS_BEHAVIOR();
    fn NL_NEIGHBOR_STATE();
    fn NL_NETWORK_CATEGORY();
    fn NL_NETWORK_CONNECTIVITY_COST_HINT();
    fn NL_NETWORK_CONNECTIVITY_HINT();
    fn NL_NETWORK_CONNECTIVITY_LEVEL_HINT();
    fn NL_PATH_BANDWIDTH_ROD();
    fn NL_PREFIX_ORIGIN();
    fn NL_ROUTER_DISCOVERY_BEHAVIOR();
    fn NL_ROUTE_ORIGIN();
    fn NL_ROUTE_PROTOCOL();
    fn NL_SUFFIX_ORIGIN();
    fn NSPROTO_IPX();
    fn NSPROTO_SPX();
    fn NSPROTO_SPXII();
    fn NSPV2_ROUTINE();
    fn NSP_ROUTINE();
    fn NSTYPE_DYNAMIC();
    fn NSTYPE_ENUMERABLE();
    fn NSTYPE_HIERARCHICAL();
    fn NSTYPE_WORKGROUP();
    fn NS_ALL();
    fn NS_DEFAULT();
    fn NS_DHCP();
    fn NS_DNS();
    fn NS_EMAIL();
    fn NS_INFOA();
    fn NS_INFOW();
    fn NS_LOCALNAME();
    fn NS_MS();
    fn NS_NBP();
    fn NS_NDS();
    fn NS_NETBT();
    fn NS_NETDES();
    fn NS_NIS();
    fn NS_NISPLUS();
    fn NS_NLA();
    fn NS_NTDS();
    fn NS_PEER_BROWSE();
    fn NS_SAP();
    fn NS_SERVICE_INFOA();
    fn NS_SERVICE_INFOW();
    fn NS_SLP();
    fn NS_STDA();
    fn NS_TCPIP_HOSTS();
    fn NS_TCPIP_LOCAL();
    fn NS_VNS();
    fn NS_WINS();
    fn NS_WRQ();
    fn NS_X500();
    fn PFL_HIDDEN();
    fn PFL_MATCHES_PROTOCOL_ZERO();
    fn PFL_MULTIPLE_PROTO_ENTRIES();
    fn PFL_NETWORKDIRECT_PROVIDER();
    fn PFL_RECOMMENDED_PROTO_ENTRY();
    fn PF_APPLETALK();
    fn PF_ATM();
    fn PF_BAN();
    fn PF_CCITT();
    fn PF_CHAOS();
    fn PF_DATAKIT();
    fn PF_DECnet();
    fn PF_DLI();
    fn PF_ECMA();
    fn PF_FIREFOX();
    fn PF_HYLINK();
    fn PF_IMPLINK();
    fn PF_IPX();
    fn PF_IRDA();
    fn PF_ISO();
    fn PF_LAT();
    fn PF_MAX();
    fn PF_NS();
    fn PF_OSI();
    fn PF_PUP();
    fn PF_SNA();
    fn PF_UNIX();
    fn PF_UNKNOWN1();
    fn PF_VOICEVIEW();
    fn PI_ALLOWED();
    fn PI_NUMBER_NOT_AVAILABLE();
    fn PI_RESTRICTED();
    fn PMTUD_STATE();
    fn POLLERR();
    fn POLLHUP();
    fn POLLNVAL();
    fn POLLOUT();
    fn POLLPRI();
    fn POLLRDBAND();
    fn POLLRDNORM();
    fn POLLWRBAND();
    fn POLLWRNORM();
    fn PRIORITY_STATUS();
    fn PROP_ADDRESSES();
    fn PROP_ALL();
    fn PROP_COMMENT();
    fn PROP_DISPLAY_HINT();
    fn PROP_LOCALE();
    fn PROP_MACHINE();
    fn PROP_SD();
    fn PROP_START_TIME();
    fn PROP_VERSION();
    fn PROTECTION_LEVEL_DEFAULT();
    fn PROTECTION_LEVEL_EDGERESTRICTED();
    fn PROTECTION_LEVEL_RESTRICTED();
    fn PROTECTION_LEVEL_UNRESTRICTED();
    fn PROTOCOL_INFOA();
    fn PROTOCOL_INFOW();
    fn PVD_CONFIG();
    fn ProcessSocketNotifications();
    fn Q2931_IE();
    fn Q2931_IE_TYPE();
    fn QOS_CLASS0();
    fn QOS_CLASS1();
    fn QOS_CLASS2();
    fn QOS_CLASS3();
    fn QOS_CLASS4();
    fn RCVALL_IF();
    fn RCVALL_VALUE();
    fn REAL_TIME_NOTIFICATION_CAPABILITY();
    fn REAL_TIME_NOTIFICATION_CAPABILITY_EX();
    fn REAL_TIME_NOTIFICATION_SETTING_INPUT();
    fn REAL_TIME_NOTIFICATION_SETTING_INPUT_EX();
    fn REAL_TIME_NOTIFICATION_SETTING_OUTPUT();
    fn RESOURCE_DISPLAY_TYPE();
    fn RESULT_IS_ADDED();
    fn RESULT_IS_ALIAS();
    fn RESULT_IS_CHANGED();
    fn RESULT_IS_DELETED();
    fn RES_FIND_MULTIPLE();
    fn RES_FLUSH_CACHE();
    fn RES_SERVICE();
    fn RES_SOFT_SEARCH();
    fn RES_UNUSED_1();
    fn RIORESULT();
    fn RIO_BUF();
    fn RIO_BUFFERID_t();
    fn RIO_CMSG_BUFFER();
    fn RIO_CORRUPT_CQ();
    fn RIO_CQ_t();
    fn RIO_EXTENSION_FUNCTION_TABLE();
    fn RIO_MAX_CQ_SIZE();
    fn RIO_MSG_COMMIT_ONLY();
    fn RIO_MSG_DEFER();
    fn RIO_MSG_DONT_NOTIFY();
    fn RIO_MSG_WAITALL();
    fn RIO_NOTIFICATION_COMPLETION();
    fn RIO_NOTIFICATION_COMPLETION_TYPE();
    fn RIO_RQ_t();
    fn RM_ADD_RECEIVE_IF();
    fn RM_DEL_RECEIVE_IF();
    fn RM_FEC_INFO();
    fn RM_FLUSHCACHE();
    fn RM_HIGH_SPEED_INTRANET_OPT();
    fn RM_LATEJOIN();
    fn RM_OPTIONSBASE();
    fn RM_RATE_WINDOW_SIZE();
    fn RM_RECEIVER_STATISTICS();
    fn RM_RECEIVER_STATS();
    fn RM_SENDER_STATISTICS();
    fn RM_SENDER_STATS();
    fn RM_SENDER_WINDOW_ADVANCE_METHOD();
    fn RM_SEND_WINDOW();
    fn RM_SEND_WINDOW_ADV_RATE();
    fn RM_SET_MCAST_TTL();
    fn RM_SET_MESSAGE_BOUNDARY();
    fn RM_SET_SEND_IF();
    fn RM_USE_FEC();
    fn RSS_SCALABILITY_INFO();
    fn RtlEthernetAddressToStringA();
    fn RtlEthernetAddressToStringW();
    fn RtlEthernetStringToAddressA();
    fn RtlEthernetStringToAddressW();
    fn RtlIpv4AddressToStringA();
    fn RtlIpv4AddressToStringExA();
    fn RtlIpv4AddressToStringExW();
    fn RtlIpv4AddressToStringW();
    fn RtlIpv4StringToAddressA();
    fn RtlIpv4StringToAddressExA();
    fn RtlIpv4StringToAddressExW();
    fn RtlIpv4StringToAddressW();
    fn RtlIpv6AddressToStringA();
    fn RtlIpv6AddressToStringExA();
    fn RtlIpv6AddressToStringExW();
    fn RtlIpv6AddressToStringW();
    fn RtlIpv6StringToAddressA();
    fn RtlIpv6StringToAddressExA();
    fn RtlIpv6StringToAddressExW();
    fn RtlIpv6StringToAddressW();
    fn SAP_FIELD_ABSENT();
    fn SAP_FIELD_ANY();
    fn SAP_FIELD_ANY_AESA_REST();
    fn SAP_FIELD_ANY_AESA_SEL();
    fn SCOPE_ID();
    fn SCOPE_LEVEL();
    fn SD_BOTH();
    fn SD_RECEIVE();
    fn SD_SEND();
    fn SECURITY_PROTOCOL_NONE();
    fn SENDER_DEFAULT_LATE_JOINER_PERCENTAGE();
    fn SENDER_DEFAULT_RATE_KBITS_PER_SEC();
    fn SENDER_DEFAULT_WINDOW_ADV_PERCENTAGE();
    fn SENDER_MAX_LATE_JOINER_PERCENTAGE();
    fn SEND_FLAGS();
    fn SERVICE_ADDRESS();
    fn SERVICE_ADDRESSES();
    fn SERVICE_ADDRESS_FLAG_RPC_CN();
    fn SERVICE_ADDRESS_FLAG_RPC_DG();
    fn SERVICE_ADDRESS_FLAG_RPC_NB();
    fn SERVICE_ASYNC_INFO();
    fn SERVICE_FLAG_DEFER();
    fn SERVICE_FLAG_HARD();
    fn SERVICE_INFOA();
    fn SERVICE_INFOW();
    fn SERVICE_LOCAL();
    fn SERVICE_MULTIPLE();
    fn SERVICE_RESOURCE();
    fn SERVICE_SERVICE();
    fn SERVICE_TYPE_INFO();
    fn SERVICE_TYPE_INFO_ABSA();
    fn SERVICE_TYPE_INFO_ABSW();
    fn SERVICE_TYPE_VALUE();
    fn SERVICE_TYPE_VALUE_ABSA();
    fn SERVICE_TYPE_VALUE_ABSW();
    fn SET_SERVICE_OPERATION();
    fn SET_SERVICE_PARTIAL_SUCCESS();
    fn SG_CONSTRAINED_GROUP();
    fn SG_UNCONSTRAINED_GROUP();
    fn SIOCATMARK();
    fn SIOCGHIWAT();
    fn SIOCGLOWAT();
    fn SIOCSHIWAT();
    fn SIOCSLOWAT();
    fn SIO_ASSOCIATE_PVC();
    fn SIO_GET_ATM_ADDRESS();
    fn SIO_GET_ATM_CONNECTION_ID();
    fn SIO_GET_NUMBER_OF_ATM_DEVICES();
    fn SI_NETWORK();
    fn SI_USER_FAILED();
    fn SI_USER_NOT_SCREENED();
    fn SI_USER_PASSED();
    fn SOCKADDR();
    fn SOCKADDR_DL();
    fn SOCKADDR_IN();
    fn SOCKADDR_IN6();
    fn SOCKADDR_IN6_PAIR();
    fn SOCKADDR_IN6_W2KSP1();
    fn SOCKADDR_INET();
    fn SOCKADDR_IRDA();
    fn SOCKADDR_STORAGE();
    fn SOCKADDR_STORAGE_XP();
    fn SOCKET();
    fn SOCKET_ADDRESS();
    fn SOCKET_ADDRESS_LIST();
    fn SOCKET_DEFAULT2_QM_POLICY();
    fn SOCKET_ERROR();
    fn SOCKET_INFO_CONNECTION_ENCRYPTED();
    fn SOCKET_INFO_CONNECTION_IMPERSONATED();
    fn SOCKET_INFO_CONNECTION_SECURED();
    fn SOCKET_PEER_TARGET_NAME();
    fn SOCKET_PRIORITY_HINT();
    fn SOCKET_PROCESSOR_AFFINITY();
    fn SOCKET_QUERY_IPSEC2_ABORT_CONNECTION_ON_FIELD_CHANGE();
    fn SOCKET_QUERY_IPSEC2_FIELD_MASK_MM_SA_ID();
    fn SOCKET_QUERY_IPSEC2_FIELD_MASK_QM_SA_ID();
    fn SOCKET_SECURITY_PROTOCOL();
    fn SOCKET_SECURITY_QUERY_INFO();
    fn SOCKET_SECURITY_QUERY_INFO_IPSEC2();
    fn SOCKET_SECURITY_QUERY_TEMPLATE();
    fn SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2();
    fn SOCKET_SECURITY_SETTINGS();
    fn SOCKET_SECURITY_SETTINGS_IPSEC();
    fn SOCKET_SETTINGS_ALLOW_INSECURE();
    fn SOCKET_SETTINGS_GUARANTEE_ENCRYPTION();
    fn SOCKET_SETTINGS_IPSEC_ALLOW_FIRST_INBOUND_PKT_UNENCRYPTED();
    fn SOCKET_SETTINGS_IPSEC_OPTIONAL_PEER_NAME_VERIFICATION();
    fn SOCKET_SETTINGS_IPSEC_PEER_NAME_IS_RAW_FORMAT();
    fn SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION();
    fn SOCKET_USAGE_TYPE();
    fn SOCK_DGRAM();
    fn SOCK_NOTIFY_EVENT_ERR();
    fn SOCK_NOTIFY_EVENT_HANGUP();
    fn SOCK_NOTIFY_EVENT_IN();
    fn SOCK_NOTIFY_EVENT_OUT();
    fn SOCK_NOTIFY_EVENT_REMOVE();
    fn SOCK_NOTIFY_OP_DISABLE();
    fn SOCK_NOTIFY_OP_ENABLE();
    fn SOCK_NOTIFY_OP_NONE();
    fn SOCK_NOTIFY_OP_REMOVE();
    fn SOCK_NOTIFY_REGISTER_EVENT_HANGUP();
    fn SOCK_NOTIFY_REGISTER_EVENT_IN();
    fn SOCK_NOTIFY_REGISTER_EVENT_NONE();
    fn SOCK_NOTIFY_REGISTER_EVENT_OUT();
    fn SOCK_NOTIFY_REGISTRATION();
    fn SOCK_NOTIFY_TRIGGER_EDGE();
    fn SOCK_NOTIFY_TRIGGER_LEVEL();
    fn SOCK_NOTIFY_TRIGGER_ONESHOT();
    fn SOCK_NOTIFY_TRIGGER_PERSISTENT();
    fn SOCK_RAW();
    fn SOCK_RDM();
    fn SOCK_SEQPACKET();
    fn SOCK_STREAM();
    fn SOL_IRLMP();
    fn SOL_SOCKET();
    fn SOMAXCONN();
    fn SO_ACCEPTCONN();
    fn SO_BROADCAST();
    fn SO_BSP_STATE();
    fn SO_COMPARTMENT_ID();
    fn SO_CONDITIONAL_ACCEPT();
    fn SO_CONNDATA();
    fn SO_CONNDATALEN();
    fn SO_CONNECT_TIME();
    fn SO_CONNOPT();
    fn SO_CONNOPTLEN();
    fn SO_DEBUG();
    fn SO_DISCDATA();
    fn SO_DISCDATALEN();
    fn SO_DISCOPT();
    fn SO_DISCOPTLEN();
    fn SO_DONTROUTE();
    fn SO_ERROR();
    fn SO_GROUP_ID();
    fn SO_GROUP_PRIORITY();
    fn SO_KEEPALIVE();
    fn SO_LINGER();
    fn SO_MAXDG();
    fn SO_MAXPATHDG();
    fn SO_MAX_MSG_SIZE();
    fn SO_OOBINLINE();
    fn SO_OPENTYPE();
    fn SO_ORIGINAL_DST();
    fn SO_PAUSE_ACCEPT();
    fn SO_PORT_SCALABILITY();
    fn SO_PROTOCOL_INFO();
    fn SO_PROTOCOL_INFOA();
    fn SO_PROTOCOL_INFOW();
    fn SO_RANDOMIZE_PORT();
    fn SO_RCVBUF();
    fn SO_RCVLOWAT();
    fn SO_RCVTIMEO();
    fn SO_REUSEADDR();
    fn SO_REUSE_MULTICASTPORT();
    fn SO_REUSE_UNICASTPORT();
    fn SO_SNDBUF();
    fn SO_SNDLOWAT();
    fn SO_SNDTIMEO();
    fn SO_SYNCHRONOUS_ALERT();
    fn SO_SYNCHRONOUS_NONALERT();
    fn SO_TIMESTAMP();
    fn SO_TIMESTAMP_ID();
    fn SO_TYPE();
    fn SO_UPDATE_ACCEPT_CONTEXT();
    fn SO_UPDATE_CONNECT_CONTEXT();
    fn SO_USELOOPBACK();
    fn SetAddrInfoExA();
    fn SetAddrInfoExW();
    fn SetServiceA();
    fn SetServiceW();
    fn SetSocketMediaStreamingMode();
    fn TCPSTATE();
    fn TCP_ACK_FREQUENCY_PARAMETERS();
    fn TCP_ATMARK();
    fn TCP_BSDURGENT();
    fn TCP_CONGESTION_ALGORITHM();
    fn TCP_DELAY_FIN_ACK();
    fn TCP_EXPEDITED_1122();
    fn TCP_FAIL_CONNECT_ON_ICMP_ERROR();
    fn TCP_FASTOPEN();
    fn TCP_ICMP_ERROR_INFO();
    fn TCP_ICW_LEVEL();
    fn TCP_ICW_PARAMETERS();
    fn TCP_INFO_v0();
    fn TCP_INFO_v1();
    fn TCP_INITIAL_RTO_DEFAULT_MAX_SYN_RETRANSMISSIONS();
    fn TCP_INITIAL_RTO_DEFAULT_RTT();
    fn TCP_INITIAL_RTO_PARAMETERS();
    fn TCP_KEEPALIVE();
    fn TCP_KEEPCNT();
    fn TCP_KEEPIDLE();
    fn TCP_KEEPINTVL();
    fn TCP_MAXRT();
    fn TCP_MAXRTMS();
    fn TCP_MAXSEG();
    fn TCP_NODELAY();
    fn TCP_NOSYNRETRIES();
    fn TCP_NOURG();
    fn TCP_OFFLOAD_NOT_PREFERRED();
    fn TCP_OFFLOAD_NO_PREFERENCE();
    fn TCP_OFFLOAD_PREFERENCE();
    fn TCP_OFFLOAD_PREFERRED();
    fn TCP_STDURG();
    fn TCP_TIMESTAMPS();
    fn TF_DISCONNECT();
    fn TF_REUSE_SOCKET();
    fn TF_USE_DEFAULT_WORKER();
    fn TF_USE_KERNEL_APC();
    fn TF_USE_SYSTEM_THREAD();
    fn TF_WRITE_BEHIND();
    fn TH_NETDEV();
    fn TH_TAPI();
    fn TIMESTAMPING_CONFIG();
    fn TIMESTAMPING_FLAG_RX();
    fn TIMESTAMPING_FLAG_TX();
    fn TNS_PLAN_CARRIER_ID_CODE();
    fn TNS_TYPE_NATIONAL();
    fn TP_DISCONNECT();
    fn TP_ELEMENT_EOP();
    fn TP_ELEMENT_FILE();
    fn TP_ELEMENT_MEMORY();
    fn TP_REUSE_SOCKET();
    fn TP_USE_DEFAULT_WORKER();
    fn TP_USE_KERNEL_APC();
    fn TP_USE_SYSTEM_THREAD();
    fn TRANSMIT_FILE_BUFFERS();
    fn TRANSMIT_PACKETS_ELEMENT();
    fn TRANSPORT_SETTING_ID();
    fn TR_END_TO_END();
    fn TR_NOIND();
    fn TR_NO_END_TO_END();
    fn TT_CBR();
    fn TT_NOIND();
    fn TT_VBR();
    fn TransmitFile();
    fn UDP_CHECKSUM_COVERAGE();
    fn UDP_COALESCED_INFO();
    fn UDP_NOCHECKSUM();
    fn UDP_RECV_MAX_COALESCED_SIZE();
    fn UDP_SEND_MSG_SIZE();
    fn UNIX_PATH_MAX();
    fn UP_P2MP();
    fn UP_P2P();
    fn VNSPROTO_IPC();
    fn VNSPROTO_RELIABLE_IPC();
    fn VNSPROTO_SPP();
    fn WCE_AF_IRDA();
    fn WCE_DEVICELIST();
    fn WCE_IRDA_DEVICE_INFO();
    fn WCE_PF_IRDA();
    fn WINDOWS_AF_IRDA();
    fn WINDOWS_DEVICELIST();
    fn WINDOWS_IAS_QUERY();
    fn WINDOWS_IAS_SET();
    fn WINDOWS_IRDA_DEVICE_INFO();
    fn WINDOWS_PF_IRDA();
    fn WPUCompleteOverlappedRequest();
    fn WSAAccept();
    fn WSAAddressToStringA();
    fn WSAAddressToStringW();
    fn WSAAdvertiseProvider();
    fn WSAAsyncGetHostByAddr();
    fn WSAAsyncGetHostByName();
    fn WSAAsyncGetProtoByName();
    fn WSAAsyncGetProtoByNumber();
    fn WSAAsyncGetServByName();
    fn WSAAsyncGetServByPort();
    fn WSAAsyncSelect();
    fn WSABUF();
    fn WSACOMPLETION();
    fn WSACOMPLETIONTYPE();
    fn WSACancelAsyncRequest();
    fn WSACancelBlockingCall();
    fn WSACleanup();
    fn WSACloseEvent();
    fn WSAConnect();
    fn WSAConnectByList();
    fn WSAConnectByNameA();
    fn WSAConnectByNameW();
    fn WSACreateEvent();
    fn WSADESCRIPTION_LEN();
    fn WSAData();
    fn WSADeleteSocketPeerTargetName();
    fn WSADuplicateSocketA();
    fn WSADuplicateSocketW();
    fn WSAECOMPARATOR();
    fn WSAESETSERVICEOP();
    fn WSAEnumNameSpaceProvidersA();
    fn WSAEnumNameSpaceProvidersExA();
    fn WSAEnumNameSpaceProvidersExW();
    fn WSAEnumNameSpaceProvidersW();
    fn WSAEnumNetworkEvents();
    fn WSAEnumProtocolsA();
    fn WSAEnumProtocolsW();
    fn WSAEventSelect();
    fn WSAGetLastError();
    fn WSAGetOverlappedResult();
    fn WSAGetQOSByName();
    fn WSAGetServiceClassInfoA();
    fn WSAGetServiceClassInfoW();
    fn WSAGetServiceClassNameByClassIdA();
    fn WSAGetServiceClassNameByClassIdW();
    fn WSAHtonl();
    fn WSAHtons();
    fn WSAImpersonateSocketPeer();
    fn WSAInstallServiceClassA();
    fn WSAInstallServiceClassW();
    fn WSAIoctl();
    fn WSAIsBlocking();
    fn WSAJoinLeaf();
    fn WSALookupServiceBeginA();
    fn WSALookupServiceBeginW();
    fn WSALookupServiceEnd();
    fn WSALookupServiceNextA();
    fn WSALookupServiceNextW();
    fn WSAMSG();
    fn WSANAMESPACE_INFOA();
    fn WSANAMESPACE_INFOEXA();
    fn WSANAMESPACE_INFOEXW();
    fn WSANAMESPACE_INFOW();
    fn WSANETWORKEVENTS();
    fn WSANSCLASSINFOA();
    fn WSANSCLASSINFOW();
    fn WSANSPIoctl();
    fn WSANtohl();
    fn WSANtohs();
    fn WSAPOLLDATA();
    fn WSAPOLLFD();
    fn WSAPROTOCOLCHAIN();
    fn WSAPROTOCOL_INFOA();
    fn WSAPROTOCOL_INFOW();
    fn WSAPROTOCOL_LEN();
    fn WSAPoll();
    fn WSAProviderCompleteAsyncCall();
    fn WSAProviderConfigChange();
    fn WSAQUERYSET2A();
    fn WSAQUERYSET2W();
    fn WSAQUERYSETA();
    fn WSAQUERYSETW();
    fn WSAQuerySocketSecurity();
    fn WSARecv();
    fn WSARecvDisconnect();
    fn WSARecvEx();
    fn WSARecvFrom();
    fn WSARemoveServiceClass();
    fn WSAResetEvent();
    fn WSARevertImpersonation();
    fn WSASENDMSG();
    fn WSASERVICECLASSINFOA();
    fn WSASERVICECLASSINFOW();
    fn WSASYS_STATUS_LEN();
    fn WSASend();
    fn WSASendDisconnect();
    fn WSASendMsg();
    fn WSASendTo();
    fn WSASetBlockingHook();
    fn WSASetEvent();
    fn WSASetLastError();
    fn WSASetServiceA();
    fn WSASetServiceW();
    fn WSASetSocketPeerTargetName();
    fn WSASetSocketSecurity();
    fn WSASocketA();
    fn WSASocketW();
    fn WSAStartup();
    fn WSAStringToAddressA();
    fn WSAStringToAddressW();
    fn WSATHREADID();
    fn WSAUnadvertiseProvider();
    fn WSAUnhookBlockingHook();
    fn WSAVERSION();
    fn WSAWaitForMultipleEvents();
    fn WSA_COMPATIBILITY_BEHAVIOR_ID();
    fn WSA_COMPATIBILITY_MODE();
    fn WSA_ERROR();
    fn WSA_FLAG_ACCESS_SYSTEM_SECURITY();
    fn WSA_FLAG_MULTIPOINT_C_LEAF();
    fn WSA_FLAG_MULTIPOINT_C_ROOT();
    fn WSA_FLAG_MULTIPOINT_D_LEAF();
    fn WSA_FLAG_MULTIPOINT_D_ROOT();
    fn WSA_FLAG_NO_HANDLE_INHERIT();
    fn WSA_FLAG_OVERLAPPED();
    fn WSA_FLAG_REGISTERED_IO();
    fn WSA_INFINITE();
    fn WSA_MAXIMUM_WAIT_EVENTS();
    fn WSA_WAIT_EVENT_0();
    fn WSA_WAIT_FAILED();
    fn WSA_WAIT_IO_COMPLETION();
    fn WSCDeinstallProvider();
    fn WSCDeinstallProvider32();
    fn WSCEnableNSProvider();
    fn WSCEnableNSProvider32();
    fn WSCEnumNameSpaceProviders32();
    fn WSCEnumNameSpaceProvidersEx32();
    fn WSCEnumProtocols();
    fn WSCEnumProtocols32();
    fn WSCGetApplicationCategory();
    fn WSCGetProviderInfo();
    fn WSCGetProviderInfo32();
    fn WSCGetProviderPath();
    fn WSCGetProviderPath32();
    fn WSCInstallNameSpace();
    fn WSCInstallNameSpace32();
    fn WSCInstallNameSpaceEx();
    fn WSCInstallNameSpaceEx32();
    fn WSCInstallProvider();
    fn WSCInstallProvider64_32();
    fn WSCInstallProviderAndChains64_32();
    fn WSCSetApplicationCategory();
    fn WSCSetProviderInfo();
    fn WSCSetProviderInfo32();
    fn WSCUnInstallNameSpace();
    fn WSCUnInstallNameSpace32();
    fn WSCUpdateProvider();
    fn WSCUpdateProvider32();
    fn WSCWriteNameSpaceOrder();
    fn WSCWriteNameSpaceOrder32();
    fn WSCWriteProviderOrder();
    fn WSCWriteProviderOrder32();
    fn WSC_PROVIDER_AUDIT_INFO();
    fn WSC_PROVIDER_INFO_TYPE();
    fn WSK_SO_BASE();
    fn WSPDESCRIPTION_LEN();
    fn WSPData();
    fn WSPPROC_TABLE();
    fn WSPUPCALLTABLE();
    fn WSS_OPERATION_IN_PROGRESS();
    fn XP1_CONNECTIONLESS();
    fn XP1_CONNECT_DATA();
    fn XP1_DISCONNECT_DATA();
    fn XP1_EXPEDITED_DATA();
    fn XP1_GRACEFUL_CLOSE();
    fn XP1_GUARANTEED_DELIVERY();
    fn XP1_GUARANTEED_ORDER();
    fn XP1_IFS_HANDLES();
    fn XP1_INTERRUPT();
    fn XP1_MESSAGE_ORIENTED();
    fn XP1_MULTIPOINT_CONTROL_PLANE();
    fn XP1_MULTIPOINT_DATA_PLANE();
    fn XP1_PARTIAL_MESSAGE();
    fn XP1_PSEUDO_STREAM();
    fn XP1_QOS_SUPPORTED();
    fn XP1_SAN_SUPPORT_SDP();
    fn XP1_SUPPORT_BROADCAST();
    fn XP1_SUPPORT_MULTIPOINT();
    fn XP1_UNI_RECV();
    fn XP1_UNI_SEND();
    fn XP_BANDWIDTH_ALLOCATION();
    fn XP_CONNECTIONLESS();
    fn XP_CONNECT_DATA();
    fn XP_DISCONNECT_DATA();
    fn XP_ENCRYPTS();
    fn XP_EXPEDITED_DATA();
    fn XP_FRAGMENTATION();
    fn XP_GRACEFUL_CLOSE();
    fn XP_GUARANTEED_DELIVERY();
    fn XP_GUARANTEED_ORDER();
    fn XP_MESSAGE_ORIENTED();
    fn XP_PSEUDO_STREAM();
    fn XP_SUPPORTS_BROADCAST();
    fn XP_SUPPORTS_MULTICAST();
    fn _SS_MAXSIZE();
    fn __WSAFDIsSet();
    fn accept();
    fn addrinfoW();
    fn addrinfo_dns_server();
    fn addrinfoex2A();
    fn addrinfoex2W();
    fn addrinfoex3();
    fn addrinfoex4();
    fn addrinfoex5();
    fn addrinfoex6();
    fn addrinfoexA();
    fn addrinfoexW();
    fn bind();
    fn closesocket();
    fn cmsghdr();
    fn connect();
    fn eWINDOW_ADVANCE_METHOD();
    fn fd_set();
    fn freeaddrinfo();
    fn getaddrinfo();
    fn gethostbyaddr();
    fn gethostbyname();
    fn gethostname();
    fn getnameinfo();
    fn getpeername();
    fn getprotobyname();
    fn getprotobynumber();
    fn getservbyname();
    fn getservbyport();
    fn getsockname();
    fn getsockopt();
    fn hostent();
    fn htonl();
    fn htons();
    fn in6_pktinfo_ex();
    fn inet_addr();
    fn inet_ntoa();
    fn inet_ntop();
    fn inet_pton();
    fn ioctlsocket();
    fn linger();
    fn listen();
    fn netent();
    fn ntohl();
    fn ntohs();
    fn protoent();
    fn recv();
    fn recvfrom();
    fn select();
    fn send();
    fn sendto();
    fn servent();
    fn setsockopt();
    fn shutdown();
    fn sockaddr_atm();
    fn sockaddr_gen();
    fn sockaddr_in6_old();
    fn sockaddr_ipx();
    fn sockaddr_nb();
    fn sockaddr_tp();
    fn sockaddr_un();
    fn sockaddr_vns();
    fn socket();
    fn sockproto();
    fn tcp_keepalive();
    fn timeval();
}
