#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "Win32_System_Performance_HardwareCounterProfiling")]
pub mod HardwareCounterProfiling;
#[link(name = "windows")]
extern "system" {
    fn AppearPropPage();
    fn AutoPathFormat();
    fn BackupPerfRegistryToFileW();
    fn BootTraceSession();
    fn BootTraceSessionCollection();
    fn ClockType();
    fn CommitMode();
    fn CounterItem();
    fn CounterItem2();
    fn CounterPathCallBack();
    fn CounterPropPage();
    fn Counters();
    fn DICounterItem();
    fn DIID_DICounterItem();
    fn DIID_DILogFileItem();
    fn DIID_DISystemMonitor();
    fn DIID_DISystemMonitorEvents();
    fn DIID_DISystemMonitorInternal();
    fn DILogFileItem();
    fn DISystemMonitor();
    fn DISystemMonitorEvents();
    fn DISystemMonitorInternal();
    fn DataCollectorSet();
    fn DataCollectorSetCollection();
    fn DataCollectorSetStatus();
    fn DataCollectorType();
    fn DataManagerSteps();
    fn DataSourceTypeConstants();
    fn DisplayTypeConstants();
    fn FileFormat();
    fn FolderActionSteps();
    fn GeneralPropPage();
    fn GraphPropPage();
    fn H_WBEM_DATASOURCE();
    fn IAlertDataCollector();
    fn IApiTracingDataCollector();
    fn IConfigurationDataCollector();
    fn ICounterItem();
    fn ICounterItem2();
    fn ICounters();
    fn IDataCollector();
    fn IDataCollectorCollection();
    fn IDataCollectorSet();
    fn IDataCollectorSetCollection();
    fn IDataManager();
    fn IFolderAction();
    fn IFolderActionCollection();
    fn ILogFileItem();
    fn ILogFiles();
    fn IPerformanceCounterDataCollector();
    fn ISchedule();
    fn IScheduleCollection();
    fn ISystemMonitor();
    fn ISystemMonitor2();
    fn ISystemMonitorEvents();
    fn ITraceDataCollector();
    fn ITraceDataProvider();
    fn ITraceDataProviderCollection();
    fn IValueMap();
    fn IValueMapItem();
    fn InstallPerfDllA();
    fn InstallPerfDllW();
    fn LIBID_SystemMonitor();
    fn LegacyDataCollectorSet();
    fn LegacyDataCollectorSetCollection();
    fn LegacyTraceSession();
    fn LegacyTraceSessionCollection();
    fn LoadPerfCounterTextStringsA();
    fn LoadPerfCounterTextStringsW();
    fn LogFileItem();
    fn LogFiles();
    fn MAX_COUNTER_PATH();
    fn MAX_PERF_OBJECTS_IN_QUERY_FUNCTION();
    fn PDH_ACCESS_DENIED();
    fn PDH_ASYNC_QUERY_TIMEOUT();
    fn PDH_BINARY_LOG_CORRUPT();
    fn PDH_BROWSE_DLG_CONFIG_A();
    fn PDH_BROWSE_DLG_CONFIG_HA();
    fn PDH_BROWSE_DLG_CONFIG_HW();
    fn PDH_BROWSE_DLG_CONFIG_W();
    fn PDH_CALC_NEGATIVE_DENOMINATOR();
    fn PDH_CALC_NEGATIVE_TIMEBASE();
    fn PDH_CALC_NEGATIVE_VALUE();
    fn PDH_CANNOT_CONNECT_MACHINE();
    fn PDH_CANNOT_CONNECT_WMI_SERVER();
    fn PDH_CANNOT_READ_NAME_STRINGS();
    fn PDH_CANNOT_SET_DEFAULT_REALTIME_DATASOURCE();
    fn PDH_COUNTER_ALREADY_IN_QUERY();
    fn PDH_COUNTER_INFO_A();
    fn PDH_COUNTER_INFO_W();
    fn PDH_COUNTER_PATH_ELEMENTS_A();
    fn PDH_COUNTER_PATH_ELEMENTS_W();
    fn PDH_CSTATUS_BAD_COUNTERNAME();
    fn PDH_CSTATUS_INVALID_DATA();
    fn PDH_CSTATUS_ITEM_NOT_VALIDATED();
    fn PDH_CSTATUS_NEW_DATA();
    fn PDH_CSTATUS_NO_COUNTER();
    fn PDH_CSTATUS_NO_COUNTERNAME();
    fn PDH_CSTATUS_NO_INSTANCE();
    fn PDH_CSTATUS_NO_MACHINE();
    fn PDH_CSTATUS_NO_OBJECT();
    fn PDH_CSTATUS_VALID_DATA();
    fn PDH_DATA_ITEM_PATH_ELEMENTS_A();
    fn PDH_DATA_ITEM_PATH_ELEMENTS_W();
    fn PDH_DATA_SOURCE_IS_LOG_FILE();
    fn PDH_DATA_SOURCE_IS_REAL_TIME();
    fn PDH_DIALOG_CANCELLED();
    fn PDH_DLL_VERSION();
    fn PDH_END_OF_LOG_FILE();
    fn PDH_ENTRY_NOT_IN_LOG_FILE();
    fn PDH_FILE_ALREADY_EXISTS();
    fn PDH_FILE_NOT_FOUND();
    fn PDH_FMT();
    fn PDH_FMT_COUNTERVALUE();
    fn PDH_FMT_COUNTERVALUE_ITEM_A();
    fn PDH_FMT_COUNTERVALUE_ITEM_W();
    fn PDH_FUNCTION_NOT_FOUND();
    fn PDH_INCORRECT_APPEND_TIME();
    fn PDH_INSUFFICIENT_BUFFER();
    fn PDH_INVALID_ARGUMENT();
    fn PDH_INVALID_BUFFER();
    fn PDH_INVALID_DATA();
    fn PDH_INVALID_DATASOURCE();
    fn PDH_INVALID_HANDLE();
    fn PDH_INVALID_INSTANCE();
    fn PDH_INVALID_PATH();
    fn PDH_INVALID_SQLDB();
    fn PDH_INVALID_SQL_LOG_FORMAT();
    fn PDH_LOG();
    fn PDH_LOGSVC_NOT_OPENED();
    fn PDH_LOGSVC_QUERY_NOT_FOUND();
    fn PDH_LOG_FILE_CREATE_ERROR();
    fn PDH_LOG_FILE_OPEN_ERROR();
    fn PDH_LOG_FILE_TOO_SMALL();
    fn PDH_LOG_SAMPLE_TOO_SMALL();
    fn PDH_LOG_SERVICE_QUERY_INFO_A();
    fn PDH_LOG_SERVICE_QUERY_INFO_W();
    fn PDH_LOG_TYPE();
    fn PDH_LOG_TYPE_NOT_FOUND();
    fn PDH_LOG_TYPE_RETIRED_BIN();
    fn PDH_LOG_TYPE_TRACE_GENERIC();
    fn PDH_LOG_TYPE_TRACE_KERNEL();
    fn PDH_MAX_COUNTER_NAME();
    fn PDH_MAX_COUNTER_PATH();
    fn PDH_MAX_DATASOURCE_PATH();
    fn PDH_MAX_INSTANCE_NAME();
    fn PDH_MAX_SCALE();
    fn PDH_MEMORY_ALLOCATION_FAILURE();
    fn PDH_MIN_SCALE();
    fn PDH_MORE_DATA();
    fn PDH_NOEXPANDCOUNTERS();
    fn PDH_NOEXPANDINSTANCES();
    fn PDH_NOT_IMPLEMENTED();
    fn PDH_NO_COUNTERS();
    fn PDH_NO_DATA();
    fn PDH_NO_DIALOG_DATA();
    fn PDH_NO_MORE_DATA();
    fn PDH_OS_EARLIER_VERSION();
    fn PDH_OS_LATER_VERSION();
    fn PDH_PATH_FLAGS();
    fn PDH_PLA_COLLECTION_ALREADY_RUNNING();
    fn PDH_PLA_COLLECTION_NOT_FOUND();
    fn PDH_PLA_ERROR_ALREADY_EXISTS();
    fn PDH_PLA_ERROR_FILEPATH();
    fn PDH_PLA_ERROR_NAME_TOO_LONG();
    fn PDH_PLA_ERROR_NOSTART();
    fn PDH_PLA_ERROR_SCHEDULE_ELAPSED();
    fn PDH_PLA_ERROR_SCHEDULE_OVERLAP();
    fn PDH_PLA_ERROR_TYPE_MISMATCH();
    fn PDH_PLA_SERVICE_ERROR();
    fn PDH_PLA_VALIDATION_ERROR();
    fn PDH_PLA_VALIDATION_WARNING();
    fn PDH_QUERY_PERF_DATA_TIMEOUT();
    fn PDH_RAW_COUNTER();
    fn PDH_RAW_COUNTER_ITEM_A();
    fn PDH_RAW_COUNTER_ITEM_W();
    fn PDH_RAW_LOG_RECORD();
    fn PDH_REFRESHCOUNTERS();
    fn PDH_RETRY();
    fn PDH_SELECT_DATA_SOURCE_FLAGS();
    fn PDH_SQL_ALLOCCON_FAILED();
    fn PDH_SQL_ALLOC_FAILED();
    fn PDH_SQL_ALTER_DETAIL_FAILED();
    fn PDH_SQL_BIND_FAILED();
    fn PDH_SQL_CONNECT_FAILED();
    fn PDH_SQL_EXEC_DIRECT_FAILED();
    fn PDH_SQL_FETCH_FAILED();
    fn PDH_SQL_MORE_RESULTS_FAILED();
    fn PDH_SQL_ROWCOUNT_FAILED();
    fn PDH_STATISTICS();
    fn PDH_STRING_NOT_FOUND();
    fn PDH_TIME_INFO();
    fn PDH_UNABLE_MAP_NAME_FILES();
    fn PDH_UNABLE_READ_LOG_HEADER();
    fn PDH_UNKNOWN_LOGSVC_COMMAND();
    fn PDH_UNKNOWN_LOG_FORMAT();
    fn PDH_UNMATCHED_APPEND_COUNTER();
    fn PDH_WBEM_ERROR();
    fn PERFLIBREQUEST();
    fn PERF_ADD_COUNTER();
    fn PERF_AGGREGATE_MAX();
    fn PERF_ATTRIB_BY_REFERENCE();
    fn PERF_ATTRIB_DISPLAY_AS_HEX();
    fn PERF_ATTRIB_DISPLAY_AS_REAL();
    fn PERF_ATTRIB_NO_DISPLAYABLE();
    fn PERF_ATTRIB_NO_GROUP_SEPARATOR();
    fn PERF_COLLECT_END();
    fn PERF_COLLECT_START();
    fn PERF_COUNTERSET_FLAG_AGGREGATE();
    fn PERF_COUNTERSET_FLAG_HISTORY();
    fn PERF_COUNTERSET_FLAG_INSTANCE();
    fn PERF_COUNTERSET_FLAG_MULTIPLE();
    fn PERF_COUNTERSET_INFO();
    fn PERF_COUNTERSET_INSTANCE();
    fn PERF_COUNTERSET_MULTI_INSTANCES();
    fn PERF_COUNTERSET_REG_INFO();
    fn PERF_COUNTERSET_SINGLE_AGGREGATE();
    fn PERF_COUNTERSET_SINGLE_INSTANCE();
    fn PERF_COUNTER_AGGREGATE_FUNC();
    fn PERF_COUNTER_BASE();
    fn PERF_COUNTER_BLOCK();
    fn PERF_COUNTER_DATA();
    fn PERF_COUNTER_DEFINITION();
    fn PERF_COUNTER_ELAPSED();
    fn PERF_COUNTER_FRACTION();
    fn PERF_COUNTER_HEADER();
    fn PERF_COUNTER_HISTOGRAM();
    fn PERF_COUNTER_HISTOGRAM_TYPE();
    fn PERF_COUNTER_IDENTIFIER();
    fn PERF_COUNTER_IDENTITY();
    fn PERF_COUNTER_INFO();
    fn PERF_COUNTER_PRECISION();
    fn PERF_COUNTER_QUEUELEN();
    fn PERF_COUNTER_RATE();
    fn PERF_COUNTER_REG_INFO();
    fn PERF_COUNTER_VALUE();
    fn PERF_DATA_BLOCK();
    fn PERF_DATA_HEADER();
    fn PERF_DATA_REVISION();
    fn PERF_DATA_VERSION();
    fn PERF_DELTA_BASE();
    fn PERF_DELTA_COUNTER();
    fn PERF_DETAIL();
    fn PERF_DISPLAY_NOSHOW();
    fn PERF_DISPLAY_NO_SUFFIX();
    fn PERF_DISPLAY_PERCENT();
    fn PERF_DISPLAY_PER_SEC();
    fn PERF_DISPLAY_SECONDS();
    fn PERF_ENUM_INSTANCES();
    fn PERF_FILTER();
    fn PERF_INSTANCE_DEFINITION();
    fn PERF_INSTANCE_HEADER();
    fn PERF_INVERSE_COUNTER();
    fn PERF_MAX_INSTANCE_NAME();
    fn PERF_MEM_ALLOC();
    fn PERF_MEM_FREE();
    fn PERF_METADATA_MULTIPLE_INSTANCES();
    fn PERF_METADATA_NO_INSTANCES();
    fn PERF_MULTI_COUNTER();
    fn PERF_MULTI_COUNTERS();
    fn PERF_MULTI_INSTANCES();
    fn PERF_NO_INSTANCES();
    fn PERF_NO_UNIQUE_ID();
    fn PERF_NUMBER_DECIMAL();
    fn PERF_NUMBER_DEC_1000();
    fn PERF_NUMBER_HEX();
    fn PERF_OBJECT_TIMER();
    fn PERF_OBJECT_TYPE();
    fn PERF_PROVIDER_CONTEXT();
    fn PERF_PROVIDER_DRIVER();
    fn PERF_PROVIDER_KERNEL_MODE();
    fn PERF_PROVIDER_USER_MODE();
    fn PERF_REMOVE_COUNTER();
    fn PERF_SIZE_DWORD();
    fn PERF_SIZE_LARGE();
    fn PERF_SIZE_VARIABLE_LEN();
    fn PERF_SIZE_ZERO();
    fn PERF_STRING_BUFFER_HEADER();
    fn PERF_STRING_COUNTER_HEADER();
    fn PERF_TEXT_ASCII();
    fn PERF_TEXT_UNICODE();
    fn PERF_TIMER_100NS();
    fn PERF_TIMER_TICK();
    fn PERF_TYPE_COUNTER();
    fn PERF_TYPE_NUMBER();
    fn PERF_TYPE_TEXT();
    fn PERF_TYPE_ZERO();
    fn PERF_WILDCARD_COUNTER();
    fn PLA_CABEXTRACT_CALLBACK();
    fn PLA_CAPABILITY_AUTOLOGGER();
    fn PLA_CAPABILITY_LEGACY_SESSION();
    fn PLA_CAPABILITY_LEGACY_SVC();
    fn PLA_CAPABILITY_LOCAL();
    fn PLA_CAPABILITY_V1_SESSION();
    fn PLA_CAPABILITY_V1_SVC();
    fn PLA_CAPABILITY_V1_SYSTEM();
    fn PM_CLOSE_PROC();
    fn PM_COLLECT_PROC();
    fn PM_OPEN_PROC();
    fn PdhAddCounterA();
    fn PdhAddCounterW();
    fn PdhAddEnglishCounterA();
    fn PdhAddEnglishCounterW();
    fn PdhBindInputDataSourceA();
    fn PdhBindInputDataSourceW();
    fn PdhBrowseCountersA();
    fn PdhBrowseCountersHA();
    fn PdhBrowseCountersHW();
    fn PdhBrowseCountersW();
    fn PdhCalculateCounterFromRawValue();
    fn PdhCloseLog();
    fn PdhCloseQuery();
    fn PdhCollectQueryData();
    fn PdhCollectQueryDataEx();
    fn PdhCollectQueryDataWithTime();
    fn PdhComputeCounterStatistics();
    fn PdhConnectMachineA();
    fn PdhConnectMachineW();
    fn PdhCreateSQLTablesA();
    fn PdhCreateSQLTablesW();
    fn PdhEnumLogSetNamesA();
    fn PdhEnumLogSetNamesW();
    fn PdhEnumMachinesA();
    fn PdhEnumMachinesHA();
    fn PdhEnumMachinesHW();
    fn PdhEnumMachinesW();
    fn PdhEnumObjectItemsA();
    fn PdhEnumObjectItemsHA();
    fn PdhEnumObjectItemsHW();
    fn PdhEnumObjectItemsW();
    fn PdhEnumObjectsA();
    fn PdhEnumObjectsHA();
    fn PdhEnumObjectsHW();
    fn PdhEnumObjectsW();
    fn PdhExpandCounterPathA();
    fn PdhExpandCounterPathW();
    fn PdhExpandWildCardPathA();
    fn PdhExpandWildCardPathHA();
    fn PdhExpandWildCardPathHW();
    fn PdhExpandWildCardPathW();
    fn PdhFormatFromRawValue();
    fn PdhGetCounterInfoA();
    fn PdhGetCounterInfoW();
    fn PdhGetCounterTimeBase();
    fn PdhGetDataSourceTimeRangeA();
    fn PdhGetDataSourceTimeRangeH();
    fn PdhGetDataSourceTimeRangeW();
    fn PdhGetDefaultPerfCounterA();
    fn PdhGetDefaultPerfCounterHA();
    fn PdhGetDefaultPerfCounterHW();
    fn PdhGetDefaultPerfCounterW();
    fn PdhGetDefaultPerfObjectA();
    fn PdhGetDefaultPerfObjectHA();
    fn PdhGetDefaultPerfObjectHW();
    fn PdhGetDefaultPerfObjectW();
    fn PdhGetDllVersion();
    fn PdhGetFormattedCounterArrayA();
    fn PdhGetFormattedCounterArrayW();
    fn PdhGetFormattedCounterValue();
    fn PdhGetLogFileSize();
    fn PdhGetLogSetGUID();
    fn PdhGetRawCounterArrayA();
    fn PdhGetRawCounterArrayW();
    fn PdhGetRawCounterValue();
    fn PdhIsRealTimeQuery();
    fn PdhLookupPerfIndexByNameA();
    fn PdhLookupPerfIndexByNameW();
    fn PdhLookupPerfNameByIndexA();
    fn PdhLookupPerfNameByIndexW();
    fn PdhMakeCounterPathA();
    fn PdhMakeCounterPathW();
    fn PdhOpenLogA();
    fn PdhOpenLogW();
    fn PdhOpenQueryA();
    fn PdhOpenQueryH();
    fn PdhOpenQueryW();
    fn PdhParseCounterPathA();
    fn PdhParseCounterPathW();
    fn PdhParseInstanceNameA();
    fn PdhParseInstanceNameW();
    fn PdhReadRawLogRecord();
    fn PdhRemoveCounter();
    fn PdhSelectDataSourceA();
    fn PdhSelectDataSourceW();
    fn PdhSetCounterScaleFactor();
    fn PdhSetDefaultRealTimeDataSource();
    fn PdhSetLogSetRunID();
    fn PdhSetQueryTimeRange();
    fn PdhUpdateLogA();
    fn PdhUpdateLogFileCatalog();
    fn PdhUpdateLogW();
    fn PdhValidatePathA();
    fn PdhValidatePathExA();
    fn PdhValidatePathExW();
    fn PdhValidatePathW();
    fn PdhVerifySQLDBA();
    fn PdhVerifySQLDBW();
    fn PerfAddCounters();
    fn PerfCloseQueryHandle();
    fn PerfCounterDataType();
    fn PerfCreateInstance();
    fn PerfDecrementULongCounterValue();
    fn PerfDecrementULongLongCounterValue();
    fn PerfDeleteCounters();
    fn PerfDeleteInstance();
    fn PerfEnumerateCounterSet();
    fn PerfEnumerateCounterSetInstances();
    fn PerfIncrementULongCounterValue();
    fn PerfIncrementULongLongCounterValue();
    fn PerfOpenQueryHandle();
    fn PerfProviderHandle();
    fn PerfQueryCounterData();
    fn PerfQueryCounterInfo();
    fn PerfQueryCounterSetRegistrationInfo();
    fn PerfQueryHandle();
    fn PerfQueryInstance();
    fn PerfRegInfoType();
    fn PerfSetCounterRefValue();
    fn PerfSetCounterSetInfo();
    fn PerfSetULongCounterValue();
    fn PerfSetULongLongCounterValue();
    fn PerfStartProvider();
    fn PerfStartProviderEx();
    fn PerfStopProvider();
    fn QueryPerformanceCounter();
    fn QueryPerformanceFrequency();
    fn REAL_TIME_DATA_SOURCE_ID_FLAGS();
    fn ReportValueTypeConstants();
    fn ResourcePolicy();
    fn RestorePerfRegistryFromFileW();
    fn S_PDH();
    fn ServerDataCollectorSet();
    fn ServerDataCollectorSetCollection();
    fn SetServiceAsTrustedA();
    fn SetServiceAsTrustedW();
    fn SourcePropPage();
    fn StreamMode();
    fn SysmonBatchReason();
    fn SysmonDataType();
    fn SysmonFileType();
    fn SystemDataCollectorSet();
    fn SystemDataCollectorSetCollection();
    fn SystemMonitor();
    fn SystemMonitor2();
    fn TraceDataProvider();
    fn TraceDataProviderCollection();
    fn TraceSession();
    fn TraceSessionCollection();
    fn UnloadPerfCounterTextStringsA();
    fn UnloadPerfCounterTextStringsW();
    fn UpdatePerfNameFilesA();
    fn UpdatePerfNameFilesW();
    fn ValueMapType();
    fn WINPERF_LOG_DEBUG();
    fn WINPERF_LOG_NONE();
    fn WINPERF_LOG_USER();
    fn WINPERF_LOG_VERBOSE();
    fn WeekDays();
    fn _ICounterItemUnion();
    fn _ISystemMonitorUnion();
}
