#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ALTNUMPAD_BIT();
    fn ATTACH_PARENT_PROCESS();
    fn AddConsoleAliasA();
    fn AddConsoleAliasW();
    fn AllocConsole();
    fn AttachConsole();
    fn BACKGROUND_BLUE();
    fn BACKGROUND_GREEN();
    fn BACKGROUND_INTENSITY();
    fn BACKGROUND_RED();
    fn CAPSLOCK_ON();
    fn CHAR_INFO();
    fn COMMON_LVB_GRID_HORIZONTAL();
    fn COMMON_LVB_GRID_LVERTICAL();
    fn COMMON_LVB_GRID_RVERTICAL();
    fn COMMON_LVB_LEADING_BYTE();
    fn COMMON_LVB_REVERSE_VIDEO();
    fn COMMON_LVB_SBCSDBCS();
    fn COMMON_LVB_TRAILING_BYTE();
    fn COMMON_LVB_UNDERSCORE();
    fn CONSOLE_CURSOR_INFO();
    fn CONSOLE_FONT_INFO();
    fn CONSOLE_FONT_INFOEX();
    fn CONSOLE_FULLSCREEN();
    fn CONSOLE_FULLSCREEN_HARDWARE();
    fn CONSOLE_FULLSCREEN_MODE();
    fn CONSOLE_HISTORY_INFO();
    fn CONSOLE_MODE();
    fn CONSOLE_MOUSE_DOWN();
    fn CONSOLE_MOUSE_SELECTION();
    fn CONSOLE_NO_SELECTION();
    fn CONSOLE_READCONSOLE_CONTROL();
    fn CONSOLE_SCREEN_BUFFER_INFO();
    fn CONSOLE_SCREEN_BUFFER_INFOEX();
    fn CONSOLE_SELECTION_INFO();
    fn CONSOLE_SELECTION_IN_PROGRESS();
    fn CONSOLE_SELECTION_NOT_EMPTY();
    fn CONSOLE_TEXTMODE_BUFFER();
    fn CONSOLE_WINDOWED_MODE();
    fn COORD();
    fn CTRL_BREAK_EVENT();
    fn CTRL_CLOSE_EVENT();
    fn CTRL_C_EVENT();
    fn CTRL_LOGOFF_EVENT();
    fn CTRL_SHUTDOWN_EVENT();
    fn ClosePseudoConsole();
    fn CreateConsoleScreenBuffer();
    fn CreatePseudoConsole();
    fn DOUBLE_CLICK();
    fn ENHANCED_KEY();
    fn ExpungeConsoleCommandHistoryA();
    fn ExpungeConsoleCommandHistoryW();
    fn FOCUS_EVENT();
    fn FOCUS_EVENT_RECORD();
    fn FOREGROUND_BLUE();
    fn FOREGROUND_GREEN();
    fn FOREGROUND_INTENSITY();
    fn FOREGROUND_RED();
    fn FROM_LEFT_1ST_BUTTON_PRESSED();
    fn FROM_LEFT_2ND_BUTTON_PRESSED();
    fn FROM_LEFT_3RD_BUTTON_PRESSED();
    fn FROM_LEFT_4TH_BUTTON_PRESSED();
    fn FillConsoleOutputAttribute();
    fn FillConsoleOutputCharacterA();
    fn FillConsoleOutputCharacterW();
    fn FlushConsoleInputBuffer();
    fn FreeConsole();
    fn GenerateConsoleCtrlEvent();
    fn GetConsoleAliasA();
    fn GetConsoleAliasExesA();
    fn GetConsoleAliasExesLengthA();
    fn GetConsoleAliasExesLengthW();
    fn GetConsoleAliasExesW();
    fn GetConsoleAliasW();
    fn GetConsoleAliasesA();
    fn GetConsoleAliasesLengthA();
    fn GetConsoleAliasesLengthW();
    fn GetConsoleAliasesW();
    fn GetConsoleCP();
    fn GetConsoleCommandHistoryA();
    fn GetConsoleCommandHistoryLengthA();
    fn GetConsoleCommandHistoryLengthW();
    fn GetConsoleCommandHistoryW();
    fn GetConsoleCursorInfo();
    fn GetConsoleDisplayMode();
    fn GetConsoleFontSize();
    fn GetConsoleHistoryInfo();
    fn GetConsoleMode();
    fn GetConsoleOriginalTitleA();
    fn GetConsoleOriginalTitleW();
    fn GetConsoleOutputCP();
    fn GetConsoleProcessList();
    fn GetConsoleScreenBufferInfo();
    fn GetConsoleScreenBufferInfoEx();
    fn GetConsoleSelectionInfo();
    fn GetConsoleTitleA();
    fn GetConsoleTitleW();
    fn GetConsoleWindow();
    fn GetCurrentConsoleFont();
    fn GetCurrentConsoleFontEx();
    fn GetLargestConsoleWindowSize();
    fn GetNumberOfConsoleInputEvents();
    fn GetNumberOfConsoleMouseButtons();
    fn GetStdHandle();
    fn HISTORY_NO_DUP_FLAG();
    fn HPCON();
    fn INPUT_RECORD();
    fn KEY_EVENT();
    fn KEY_EVENT_RECORD();
    fn LEFT_ALT_PRESSED();
    fn LEFT_CTRL_PRESSED();
    fn MENU_EVENT();
    fn MENU_EVENT_RECORD();
    fn MOUSE_EVENT();
    fn MOUSE_EVENT_RECORD();
    fn MOUSE_HWHEELED();
    fn MOUSE_MOVED();
    fn MOUSE_WHEELED();
    fn NLS_ALPHANUMERIC();
    fn NLS_DBCSCHAR();
    fn NLS_HIRAGANA();
    fn NLS_IME_CONVERSION();
    fn NLS_IME_DISABLE();
    fn NLS_KATAKANA();
    fn NLS_ROMAN();
    fn NUMLOCK_ON();
    fn PHANDLER_ROUTINE();
    fn PSEUDOCONSOLE_INHERIT_CURSOR();
    fn PeekConsoleInputA();
    fn PeekConsoleInputW();
    fn RIGHTMOST_BUTTON_PRESSED();
    fn RIGHT_ALT_PRESSED();
    fn RIGHT_CTRL_PRESSED();
    fn ReadConsoleA();
    fn ReadConsoleInputA();
    fn ReadConsoleInputW();
    fn ReadConsoleOutputA();
    fn ReadConsoleOutputAttribute();
    fn ReadConsoleOutputCharacterA();
    fn ReadConsoleOutputCharacterW();
    fn ReadConsoleOutputW();
    fn ReadConsoleW();
    fn ResizePseudoConsole();
    fn SCROLLLOCK_ON();
    fn SHIFT_PRESSED();
    fn SMALL_RECT();
    fn STD_HANDLE();
    fn ScrollConsoleScreenBufferA();
    fn ScrollConsoleScreenBufferW();
    fn SetConsoleActiveScreenBuffer();
    fn SetConsoleCP();
    fn SetConsoleCtrlHandler();
    fn SetConsoleCursorInfo();
    fn SetConsoleCursorPosition();
    fn SetConsoleDisplayMode();
    fn SetConsoleHistoryInfo();
    fn SetConsoleMode();
    fn SetConsoleNumberOfCommandsA();
    fn SetConsoleNumberOfCommandsW();
    fn SetConsoleOutputCP();
    fn SetConsoleScreenBufferInfoEx();
    fn SetConsoleScreenBufferSize();
    fn SetConsoleTextAttribute();
    fn SetConsoleTitleA();
    fn SetConsoleTitleW();
    fn SetConsoleWindowInfo();
    fn SetCurrentConsoleFontEx();
    fn SetStdHandle();
    fn SetStdHandleEx();
    fn WINDOW_BUFFER_SIZE_EVENT();
    fn WINDOW_BUFFER_SIZE_RECORD();
    fn WriteConsoleA();
    fn WriteConsoleInputA();
    fn WriteConsoleInputW();
    fn WriteConsoleOutputA();
    fn WriteConsoleOutputAttribute();
    fn WriteConsoleOutputCharacterA();
    fn WriteConsoleOutputCharacterW();
    fn WriteConsoleOutputW();
    fn WriteConsoleW();
}
