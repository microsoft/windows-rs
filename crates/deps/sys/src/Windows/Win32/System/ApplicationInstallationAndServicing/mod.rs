#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ACTCTXA();
    fn ACTCTXW();
    fn ACTCTX_COMPATIBILITY_ELEMENT_TYPE();
    fn ACTCTX_REQUESTED_RUN_LEVEL();
    fn ACTCTX_SECTION_KEYED_DATA();
    fn ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION();
    fn ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION();
    fn ACTIVATION_CONTEXT_DETAILED_INFORMATION();
    fn ACTIVATION_CONTEXT_QUERY_INDEX();
    fn ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION();
    fn ADVERTISEFLAGS();
    fn APPLY_OPTION_FAIL_IF_CLOSE();
    fn APPLY_OPTION_FAIL_IF_EXACT();
    fn APPLY_OPTION_TEST_ONLY();
    fn APPLY_OPTION_VALID_FLAGS();
    fn ASM_BIND_FLAGS();
    fn ASM_CMP_FLAGS();
    fn ASM_DISPLAY_FLAGS();
    fn ASM_NAME();
    fn ASSEMBLYINFO_FLAG_INSTALLED();
    fn ASSEMBLYINFO_FLAG_PAYLOADRESIDENT();
    fn ASSEMBLY_FILE_DETAILED_INFORMATION();
    fn ASSEMBLY_INFO();
    fn ActivateActCtx();
    fn AddRefActCtx();
    fn ApplyDeltaA();
    fn ApplyDeltaB();
    fn ApplyDeltaGetReverseB();
    fn ApplyDeltaProvidedB();
    fn ApplyDeltaW();
    fn ApplyPatchToFileA();
    fn ApplyPatchToFileByBuffers();
    fn ApplyPatchToFileByHandles();
    fn ApplyPatchToFileByHandlesEx();
    fn ApplyPatchToFileExA();
    fn ApplyPatchToFileExW();
    fn ApplyPatchToFileW();
    fn CLSID_EvalCom2();
    fn CLSID_MsmMerge2();
    fn COMPATIBILITY_CONTEXT_ELEMENT();
    fn CREATE_ASM_NAME_OBJ_FLAGS();
    fn CreateActCtxA();
    fn CreateActCtxW();
    fn CreateDeltaA();
    fn CreateDeltaB();
    fn CreateDeltaW();
    fn CreatePatchFileA();
    fn CreatePatchFileByHandles();
    fn CreatePatchFileByHandlesEx();
    fn CreatePatchFileExA();
    fn CreatePatchFileExW();
    fn CreatePatchFileW();
    fn DEFAULT_DISK_ID();
    fn DEFAULT_FILE_SEQUENCE_START();
    fn DEFAULT_MINIMUM_REQUIRED_MSI_VERSION();
    fn DELTA_HASH();
    fn DELTA_HEADER_INFO();
    fn DELTA_INPUT();
    fn DELTA_MAX_HASH_SIZE();
    fn DELTA_OUTPUT();
    fn DeactivateActCtx();
    fn DeltaFree();
    fn DeltaNormalizeProvidedB();
    fn ERROR_PATCH_BIGGER_THAN_COMPRESSED();
    fn ERROR_PATCH_CORRUPT();
    fn ERROR_PATCH_DECODE_FAILURE();
    fn ERROR_PATCH_ENCODE_FAILURE();
    fn ERROR_PATCH_IMAGEHLP_FAILURE();
    fn ERROR_PATCH_INVALID_OPTIONS();
    fn ERROR_PATCH_NEWER_FORMAT();
    fn ERROR_PATCH_NOT_AVAILABLE();
    fn ERROR_PATCH_NOT_NECESSARY();
    fn ERROR_PATCH_RETAIN_RANGES_DIFFER();
    fn ERROR_PATCH_SAME_FILE();
    fn ERROR_PATCH_WRONG_FILE();
    fn ERROR_PCW_BAD_API_PATCHING_SYMBOL_FLAGS();
    fn ERROR_PCW_BAD_FAMILY_RANGE_NAME();
    fn ERROR_PCW_BAD_FILE_SEQUENCE_START();
    fn ERROR_PCW_BAD_GUIDS_TO_REPLACE();
    fn ERROR_PCW_BAD_IMAGE_FAMILY_DISKID();
    fn ERROR_PCW_BAD_IMAGE_FAMILY_FILESEQSTART();
    fn ERROR_PCW_BAD_IMAGE_FAMILY_NAME();
    fn ERROR_PCW_BAD_IMAGE_FAMILY_SRC_PROP();
    fn ERROR_PCW_BAD_MAJOR_VERSION();
    fn ERROR_PCW_BAD_PATCH_GUID();
    fn ERROR_PCW_BAD_PRODUCTVERSION_VALIDATION();
    fn ERROR_PCW_BAD_SEQUENCE();
    fn ERROR_PCW_BAD_SUPERCEDENCE();
    fn ERROR_PCW_BAD_TARGET();
    fn ERROR_PCW_BAD_TARGET_IMAGE_NAME();
    fn ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_CODE();
    fn ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_VERSION();
    fn ERROR_PCW_BAD_TARGET_IMAGE_UPGRADED();
    fn ERROR_PCW_BAD_TARGET_IMAGE_UPGRADE_CODE();
    fn ERROR_PCW_BAD_TARGET_PRODUCT_CODE_LIST();
    fn ERROR_PCW_BAD_TGT_UPD_IMAGES();
    fn ERROR_PCW_BAD_TRANSFORMSET();
    fn ERROR_PCW_BAD_UPGRADED_IMAGE_FAMILY();
    fn ERROR_PCW_BAD_UPGRADED_IMAGE_NAME();
    fn ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_CODE();
    fn ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_VERSION();
    fn ERROR_PCW_BAD_UPGRADED_IMAGE_UPGRADE_CODE();
    fn ERROR_PCW_BAD_VERSION_STRING();
    fn ERROR_PCW_BASE();
    fn ERROR_PCW_CANNOT_CREATE_TABLE();
    fn ERROR_PCW_CANNOT_RUN_MAKECAB();
    fn ERROR_PCW_CANNOT_WRITE_DDF();
    fn ERROR_PCW_CANT_COPY_FILE_TO_TEMP_FOLDER();
    fn ERROR_PCW_CANT_CREATE_ONE_PATCH_FILE();
    fn ERROR_PCW_CANT_CREATE_PATCH_FILE();
    fn ERROR_PCW_CANT_CREATE_SUMMARY_INFO();
    fn ERROR_PCW_CANT_CREATE_SUMMARY_INFO_POUND();
    fn ERROR_PCW_CANT_CREATE_TEMP_FOLDER();
    fn ERROR_PCW_CANT_DELETE_TEMP_FOLDER();
    fn ERROR_PCW_CANT_GENERATE_SEQUENCEINFO_MAJORUPGD();
    fn ERROR_PCW_CANT_GENERATE_TRANSFORM();
    fn ERROR_PCW_CANT_GENERATE_TRANSFORM_POUND();
    fn ERROR_PCW_CANT_OVERWRITE_PATCH();
    fn ERROR_PCW_CANT_READ_FILE();
    fn ERROR_PCW_CREATEFILE_LOG_FAILED();
    fn ERROR_PCW_DUPLICATE_SEQUENCE_RECORD();
    fn ERROR_PCW_DUP_IMAGE_FAMILY_NAME();
    fn ERROR_PCW_DUP_TARGET_IMAGE_NAME();
    fn ERROR_PCW_DUP_TARGET_IMAGE_PACKCODE();
    fn ERROR_PCW_DUP_UPGRADED_IMAGE_NAME();
    fn ERROR_PCW_DUP_UPGRADED_IMAGE_PACKCODE();
    fn ERROR_PCW_ERROR_WRITING_TO_LOG();
    fn ERROR_PCW_EXECUTE_VIEW();
    fn ERROR_PCW_EXTFILE_BAD_FAMILY_FIELD();
    fn ERROR_PCW_EXTFILE_BAD_IGNORE_LENGTHS();
    fn ERROR_PCW_EXTFILE_BAD_IGNORE_OFFSETS();
    fn ERROR_PCW_EXTFILE_BAD_RETAIN_OFFSETS();
    fn ERROR_PCW_EXTFILE_BLANK_FILE_TABLE_KEY();
    fn ERROR_PCW_EXTFILE_BLANK_PATH_TO_FILE();
    fn ERROR_PCW_EXTFILE_IGNORE_COUNT_MISMATCH();
    fn ERROR_PCW_EXTFILE_LONG_FILE_TABLE_KEY();
    fn ERROR_PCW_EXTFILE_LONG_IGNORE_LENGTHS();
    fn ERROR_PCW_EXTFILE_LONG_IGNORE_OFFSETS();
    fn ERROR_PCW_EXTFILE_LONG_PATH_TO_FILE();
    fn ERROR_PCW_EXTFILE_LONG_RETAIN_OFFSETS();
    fn ERROR_PCW_EXTFILE_MISSING_FILE();
    fn ERROR_PCW_FAILED_CREATE_TRANSFORM();
    fn ERROR_PCW_FAILED_EXPAND_PATH();
    fn ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_LENGTHS();
    fn ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_OFFSETS();
    fn ERROR_PCW_FAMILY_RANGE_BLANK_FILE_TABLE_KEY();
    fn ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_LENGTHS();
    fn ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_OFFSETS();
    fn ERROR_PCW_FAMILY_RANGE_COUNT_MISMATCH();
    fn ERROR_PCW_FAMILY_RANGE_LONG_FILE_TABLE_KEY();
    fn ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_LENGTHS();
    fn ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_OFFSETS();
    fn ERROR_PCW_FAMILY_RANGE_NAME_TOO_LONG();
    fn ERROR_PCW_IMAGE_FAMILY_NAME_TOO_LONG();
    fn ERROR_PCW_IMAGE_PATH_NOT_EXIST();
    fn ERROR_PCW_INTERNAL_ERROR();
    fn ERROR_PCW_INVALID_LOG_LEVEL();
    fn ERROR_PCW_INVALID_MAJOR_VERSION();
    fn ERROR_PCW_INVALID_PARAMETER();
    fn ERROR_PCW_INVALID_PATCHMETADATA_PROP();
    fn ERROR_PCW_INVALID_PATCH_TYPE_SEQUENCING();
    fn ERROR_PCW_INVALID_PCP_EXTERNALFILES();
    fn ERROR_PCW_INVALID_PCP_FAMILYFILERANGES();
    fn ERROR_PCW_INVALID_PCP_IMAGEFAMILIES();
    fn ERROR_PCW_INVALID_PCP_PATCHSEQUENCE();
    fn ERROR_PCW_INVALID_PCP_PROPERTIES();
    fn ERROR_PCW_INVALID_PCP_PROPERTY();
    fn ERROR_PCW_INVALID_PCP_TARGETFILES_OPTIONALDATA();
    fn ERROR_PCW_INVALID_PCP_TARGETIMAGES();
    fn ERROR_PCW_INVALID_PCP_UPGRADEDFILESTOIGNORE();
    fn ERROR_PCW_INVALID_PCP_UPGRADEDFILES_OPTIONALDATA();
    fn ERROR_PCW_INVALID_PCP_UPGRADEDIMAGES();
    fn ERROR_PCW_INVALID_RANGE_ELEMENT();
    fn ERROR_PCW_INVALID_SUPERCEDENCE();
    fn ERROR_PCW_INVALID_SUPERSEDENCE_VALUE();
    fn ERROR_PCW_INVALID_UI_LEVEL();
    fn ERROR_PCW_LAX_VALIDATION_FLAGS();
    fn ERROR_PCW_MAJOR_UPGD_WITHOUT_SEQUENCING();
    fn ERROR_PCW_MATCHED_PRODUCT_VERSIONS();
    fn ERROR_PCW_MISMATCHED_PRODUCT_CODES();
    fn ERROR_PCW_MISMATCHED_PRODUCT_VERSIONS();
    fn ERROR_PCW_MISSING_DIRECTORY_TABLE();
    fn ERROR_PCW_MISSING_PATCHMETADATA();
    fn ERROR_PCW_MISSING_PATCH_GUID();
    fn ERROR_PCW_MISSING_PATCH_PATH();
    fn ERROR_PCW_NO_UPGRADED_IMAGES_TO_PATCH();
    fn ERROR_PCW_NULL_PATCHFAMILY();
    fn ERROR_PCW_NULL_SEQUENCE_NUMBER();
    fn ERROR_PCW_OBSOLETION_WITH_MSI30();
    fn ERROR_PCW_OBSOLETION_WITH_PATCHSEQUENCE();
    fn ERROR_PCW_OBSOLETION_WITH_SEQUENCE_DATA();
    fn ERROR_PCW_OODS_COPYING_MSI();
    fn ERROR_PCW_OPEN_VIEW();
    fn ERROR_PCW_OUT_OF_MEMORY();
    fn ERROR_PCW_PATCHMETADATA_PROP_NOT_SET();
    fn ERROR_PCW_PCP_BAD_FORMAT();
    fn ERROR_PCW_PCP_DOESNT_EXIST();
    fn ERROR_PCW_SEQUENCING_BAD_TARGET();
    fn ERROR_PCW_TARGET_BAD_PROD_CODE_VAL();
    fn ERROR_PCW_TARGET_BAD_PROD_VALIDATE();
    fn ERROR_PCW_TARGET_IMAGE_COMPRESSED();
    fn ERROR_PCW_TARGET_IMAGE_NAME_TOO_LONG();
    fn ERROR_PCW_TARGET_IMAGE_PATH_EMPTY();
    fn ERROR_PCW_TARGET_IMAGE_PATH_NOT_EXIST();
    fn ERROR_PCW_TARGET_IMAGE_PATH_NOT_MSI();
    fn ERROR_PCW_TARGET_IMAGE_PATH_TOO_LONG();
    fn ERROR_PCW_TARGET_MISSING_SRC_FILES();
    fn ERROR_PCW_TARGET_WRONG_PRODUCT_VERSION_COMP();
    fn ERROR_PCW_TFILEDATA_BAD_IGNORE_LENGTHS();
    fn ERROR_PCW_TFILEDATA_BAD_IGNORE_OFFSETS();
    fn ERROR_PCW_TFILEDATA_BAD_RETAIN_OFFSETS();
    fn ERROR_PCW_TFILEDATA_BAD_TARGET_FIELD();
    fn ERROR_PCW_TFILEDATA_BLANK_FILE_TABLE_KEY();
    fn ERROR_PCW_TFILEDATA_IGNORE_COUNT_MISMATCH();
    fn ERROR_PCW_TFILEDATA_LONG_FILE_TABLE_KEY();
    fn ERROR_PCW_TFILEDATA_LONG_IGNORE_LENGTHS();
    fn ERROR_PCW_TFILEDATA_LONG_IGNORE_OFFSETS();
    fn ERROR_PCW_TFILEDATA_LONG_RETAIN_OFFSETS();
    fn ERROR_PCW_TFILEDATA_MISSING_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEDATA_BAD_UPGRADED_FIELD();
    fn ERROR_PCW_UFILEDATA_BLANK_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEDATA_LONG_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEDATA_MISSING_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEIGNORE_BAD_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEIGNORE_BAD_UPGRADED_FIELD();
    fn ERROR_PCW_UFILEIGNORE_BLANK_FILE_TABLE_KEY();
    fn ERROR_PCW_UFILEIGNORE_LONG_FILE_TABLE_KEY();
    fn ERROR_PCW_UNKNOWN_ERROR();
    fn ERROR_PCW_UNKNOWN_INFO();
    fn ERROR_PCW_UNKNOWN_WARN();
    fn ERROR_PCW_UPGRADED_IMAGE_COMPRESSED();
    fn ERROR_PCW_UPGRADED_IMAGE_NAME_TOO_LONG();
    fn ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_EXIST();
    fn ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_MSI();
    fn ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_TOO_LONG();
    fn ERROR_PCW_UPGRADED_IMAGE_PATH_EMPTY();
    fn ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_EXIST();
    fn ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_MSI();
    fn ERROR_PCW_UPGRADED_IMAGE_PATH_TOO_LONG();
    fn ERROR_PCW_UPGRADED_MISSING_SRC_FILES();
    fn ERROR_PCW_VIEW_FETCH();
    fn ERROR_PCW_WRITE_SUMMARY_PROPERTIES();
    fn ERROR_PCW_WRONG_PATCHMETADATA_STRD_PROP();
    fn ERROR_ROLLBACK_DISABLED();
    fn ExtractPatchHeaderToFileA();
    fn ExtractPatchHeaderToFileByHandles();
    fn ExtractPatchHeaderToFileW();
    fn FUSION_INSTALL_REFERENCE();
    fn FUSION_REFCOUNT_FILEPATH_GUID();
    fn FUSION_REFCOUNT_OPAQUE_STRING_GUID();
    fn FUSION_REFCOUNT_UNINSTALL_SUBKEY_GUID();
    fn FindActCtxSectionGuid();
    fn FindActCtxSectionStringA();
    fn FindActCtxSectionStringW();
    fn GetCurrentActCtx();
    fn GetDeltaInfoA();
    fn GetDeltaInfoB();
    fn GetDeltaInfoW();
    fn GetDeltaSignatureA();
    fn GetDeltaSignatureB();
    fn GetDeltaSignatureW();
    fn GetFilePatchSignatureA();
    fn GetFilePatchSignatureByBuffer();
    fn GetFilePatchSignatureByHandle();
    fn GetFilePatchSignatureW();
    fn IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_ALREADY_INSTALLED();
    fn IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_INSTALLED();
    fn IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_REFRESHED();
    fn IASSEMBLYCACHEITEM_COMMIT_FLAG_REFRESH();
    fn IASSEMBLYCACHE_UNINSTALL_DISPOSITION();
    fn IAssemblyCache();
    fn IAssemblyCacheItem();
    fn IAssemblyName();
    fn IEnumMsmDependency();
    fn IEnumMsmError();
    fn IEnumMsmString();
    fn IMsmDependencies();
    fn IMsmDependency();
    fn IMsmError();
    fn IMsmErrors();
    fn IMsmGetFiles();
    fn IMsmMerge();
    fn IMsmStrings();
    fn INFO_BASE();
    fn INFO_ENTERING_PHASE_I();
    fn INFO_ENTERING_PHASE_II();
    fn INFO_ENTERING_PHASE_III();
    fn INFO_ENTERING_PHASE_IV();
    fn INFO_ENTERING_PHASE_I_VALIDATION();
    fn INFO_ENTERING_PHASE_V();
    fn INFO_GENERATING_METADATA();
    fn INFO_PASSED_MAIN_CONTROL();
    fn INFO_PATCHCACHE_FILEINFO_FAILURE();
    fn INFO_PATCHCACHE_PCI_READFAILURE();
    fn INFO_PATCHCACHE_PCI_WRITEFAILURE();
    fn INFO_PCP_PATH();
    fn INFO_PROPERTY();
    fn INFO_SET_OPTIONS();
    fn INFO_SUCCESSFUL_PATCH_CREATION();
    fn INFO_TEMP_DIR();
    fn INFO_TEMP_DIR_CLEANUP();
    fn INFO_USING_USER_MSI_FOR_PATCH_TABLES();
    fn INSTALLFEATUREATTRIBUTE();
    fn INSTALLLEVEL();
    fn INSTALLLOGATTRIBUTES();
    fn INSTALLMESSAGE();
    fn INSTALLMESSAGE_TYPEMASK();
    fn INSTALLMODE();
    fn INSTALLOGMODE();
    fn INSTALLSTATE();
    fn INSTALLTYPE();
    fn INSTALLUILEVEL();
    fn INSTALLUI_HANDLERA();
    fn INSTALLUI_HANDLERW();
    fn IPMApplicationInfo();
    fn IPMApplicationInfoEnumerator();
    fn IPMBackgroundServiceAgentInfo();
    fn IPMBackgroundServiceAgentInfoEnumerator();
    fn IPMBackgroundWorkerInfo();
    fn IPMBackgroundWorkerInfoEnumerator();
    fn IPMDeploymentManager();
    fn IPMEnumerationManager();
    fn IPMExtensionCachedFileUpdaterInfo();
    fn IPMExtensionContractInfo();
    fn IPMExtensionFileExtensionInfo();
    fn IPMExtensionFileOpenPickerInfo();
    fn IPMExtensionFileSavePickerInfo();
    fn IPMExtensionInfo();
    fn IPMExtensionInfoEnumerator();
    fn IPMExtensionProtocolInfo();
    fn IPMExtensionShareTargetInfo();
    fn IPMLiveTileJobInfo();
    fn IPMLiveTileJobInfoEnumerator();
    fn IPMTaskInfo();
    fn IPMTaskInfoEnumerator();
    fn IPMTileInfo();
    fn IPMTileInfoEnumerator();
    fn IPMTilePropertyEnumerator();
    fn IPMTilePropertyInfo();
    fn IValidate();
    fn LIBID_MsmMergeTypeLib();
    fn LOGALL();
    fn LOGERR();
    fn LOGINFO();
    fn LOGNONE();
    fn LOGPERFMESSAGES();
    fn LOGTOKEN_NO_LOG();
    fn LOGTOKEN_SETUPAPI_APPLOG();
    fn LOGTOKEN_SETUPAPI_DEVLOG();
    fn LOGTOKEN_TYPE_MASK();
    fn LOGTOKEN_UNSPECIFIED();
    fn LOGWARN();
    fn LPDISPLAYVAL();
    fn LPEVALCOMCALLBACK();
    fn MAX_FEATURE_CHARS();
    fn MAX_GUID_CHARS();
    fn MSIADVERTISEOPTIONFLAGS();
    fn MSIARCHITECTUREFLAGS();
    fn MSIASSEMBLYINFO();
    fn MSICODE();
    fn MSICOLINFO();
    fn MSICONDITION();
    fn MSICOSTTREE();
    fn MSIDBERROR();
    fn MSIDBSTATE();
    fn MSIFILEHASHINFO();
    fn MSIHANDLE();
    fn MSIINSTALLCONTEXT();
    fn MSIMODIFY();
    fn MSIOPENPACKAGEFLAGS();
    fn MSIPATCHDATATYPE();
    fn MSIPATCHSEQUENCEINFOA();
    fn MSIPATCHSEQUENCEINFOW();
    fn MSIPATCHSTATE();
    fn MSIRUNMODE();
    fn MSISOURCETYPE();
    fn MSITRANSACTION();
    fn MSITRANSACTIONSTATE();
    fn MSITRANSFORM_ERROR();
    fn MSITRANSFORM_VALIDATE();
    fn MSI_INVALID_HASH_IS_FATAL();
    fn MSI_NULL_INTEGER();
    fn MsiAdvertiseProductA();
    fn MsiAdvertiseProductExA();
    fn MsiAdvertiseProductExW();
    fn MsiAdvertiseProductW();
    fn MsiAdvertiseScriptA();
    fn MsiAdvertiseScriptW();
    fn MsiApplyMultiplePatchesA();
    fn MsiApplyMultiplePatchesW();
    fn MsiApplyPatchA();
    fn MsiApplyPatchW();
    fn MsiBeginTransactionA();
    fn MsiBeginTransactionW();
    fn MsiCloseAllHandles();
    fn MsiCloseHandle();
    fn MsiCollectUserInfoA();
    fn MsiCollectUserInfoW();
    fn MsiConfigureFeatureA();
    fn MsiConfigureFeatureW();
    fn MsiConfigureProductA();
    fn MsiConfigureProductExA();
    fn MsiConfigureProductExW();
    fn MsiConfigureProductW();
    fn MsiCreateRecord();
    fn MsiCreateTransformSummaryInfoA();
    fn MsiCreateTransformSummaryInfoW();
    fn MsiDatabaseApplyTransformA();
    fn MsiDatabaseApplyTransformW();
    fn MsiDatabaseCommit();
    fn MsiDatabaseExportA();
    fn MsiDatabaseExportW();
    fn MsiDatabaseGenerateTransformA();
    fn MsiDatabaseGenerateTransformW();
    fn MsiDatabaseGetPrimaryKeysA();
    fn MsiDatabaseGetPrimaryKeysW();
    fn MsiDatabaseImportA();
    fn MsiDatabaseImportW();
    fn MsiDatabaseIsTablePersistentA();
    fn MsiDatabaseIsTablePersistentW();
    fn MsiDatabaseMergeA();
    fn MsiDatabaseMergeW();
    fn MsiDatabaseOpenViewA();
    fn MsiDatabaseOpenViewW();
    fn MsiDetermineApplicablePatchesA();
    fn MsiDetermineApplicablePatchesW();
    fn MsiDeterminePatchSequenceA();
    fn MsiDeterminePatchSequenceW();
    fn MsiDoActionA();
    fn MsiDoActionW();
    fn MsiEnableLogA();
    fn MsiEnableLogW();
    fn MsiEnableUIPreview();
    fn MsiEndTransaction();
    fn MsiEnumClientsA();
    fn MsiEnumClientsExA();
    fn MsiEnumClientsExW();
    fn MsiEnumClientsW();
    fn MsiEnumComponentCostsA();
    fn MsiEnumComponentCostsW();
    fn MsiEnumComponentQualifiersA();
    fn MsiEnumComponentQualifiersW();
    fn MsiEnumComponentsA();
    fn MsiEnumComponentsExA();
    fn MsiEnumComponentsExW();
    fn MsiEnumComponentsW();
    fn MsiEnumFeaturesA();
    fn MsiEnumFeaturesW();
    fn MsiEnumPatchesA();
    fn MsiEnumPatchesExA();
    fn MsiEnumPatchesExW();
    fn MsiEnumPatchesW();
    fn MsiEnumProductsA();
    fn MsiEnumProductsExA();
    fn MsiEnumProductsExW();
    fn MsiEnumProductsW();
    fn MsiEnumRelatedProductsA();
    fn MsiEnumRelatedProductsW();
    fn MsiEvaluateConditionA();
    fn MsiEvaluateConditionW();
    fn MsiExtractPatchXMLDataA();
    fn MsiExtractPatchXMLDataW();
    fn MsiFormatRecordA();
    fn MsiFormatRecordW();
    fn MsiGetActiveDatabase();
    fn MsiGetComponentPathA();
    fn MsiGetComponentPathExA();
    fn MsiGetComponentPathExW();
    fn MsiGetComponentPathW();
    fn MsiGetComponentStateA();
    fn MsiGetComponentStateW();
    fn MsiGetDatabaseState();
    fn MsiGetFeatureCostA();
    fn MsiGetFeatureCostW();
    fn MsiGetFeatureInfoA();
    fn MsiGetFeatureInfoW();
    fn MsiGetFeatureStateA();
    fn MsiGetFeatureStateW();
    fn MsiGetFeatureUsageA();
    fn MsiGetFeatureUsageW();
    fn MsiGetFeatureValidStatesA();
    fn MsiGetFeatureValidStatesW();
    fn MsiGetFileHashA();
    fn MsiGetFileHashW();
    fn MsiGetFileSignatureInformationA();
    fn MsiGetFileSignatureInformationW();
    fn MsiGetFileVersionA();
    fn MsiGetFileVersionW();
    fn MsiGetLanguage();
    fn MsiGetLastErrorRecord();
    fn MsiGetMode();
    fn MsiGetPatchFileListA();
    fn MsiGetPatchFileListW();
    fn MsiGetPatchInfoA();
    fn MsiGetPatchInfoExA();
    fn MsiGetPatchInfoExW();
    fn MsiGetPatchInfoW();
    fn MsiGetProductCodeA();
    fn MsiGetProductCodeW();
    fn MsiGetProductInfoA();
    fn MsiGetProductInfoExA();
    fn MsiGetProductInfoExW();
    fn MsiGetProductInfoFromScriptA();
    fn MsiGetProductInfoFromScriptW();
    fn MsiGetProductInfoW();
    fn MsiGetProductPropertyA();
    fn MsiGetProductPropertyW();
    fn MsiGetPropertyA();
    fn MsiGetPropertyW();
    fn MsiGetShortcutTargetA();
    fn MsiGetShortcutTargetW();
    fn MsiGetSourcePathA();
    fn MsiGetSourcePathW();
    fn MsiGetSummaryInformationA();
    fn MsiGetSummaryInformationW();
    fn MsiGetTargetPathA();
    fn MsiGetTargetPathW();
    fn MsiGetUserInfoA();
    fn MsiGetUserInfoW();
    fn MsiInstallMissingComponentA();
    fn MsiInstallMissingComponentW();
    fn MsiInstallMissingFileA();
    fn MsiInstallMissingFileW();
    fn MsiInstallProductA();
    fn MsiInstallProductW();
    fn MsiIsProductElevatedA();
    fn MsiIsProductElevatedW();
    fn MsiJoinTransaction();
    fn MsiLocateComponentA();
    fn MsiLocateComponentW();
    fn MsiNotifySidChangeA();
    fn MsiNotifySidChangeW();
    fn MsiOpenDatabaseA();
    fn MsiOpenDatabaseW();
    fn MsiOpenPackageA();
    fn MsiOpenPackageExA();
    fn MsiOpenPackageExW();
    fn MsiOpenPackageW();
    fn MsiOpenProductA();
    fn MsiOpenProductW();
    fn MsiPreviewBillboardA();
    fn MsiPreviewBillboardW();
    fn MsiPreviewDialogA();
    fn MsiPreviewDialogW();
    fn MsiProcessAdvertiseScriptA();
    fn MsiProcessAdvertiseScriptW();
    fn MsiProcessMessage();
    fn MsiProvideAssemblyA();
    fn MsiProvideAssemblyW();
    fn MsiProvideComponentA();
    fn MsiProvideComponentW();
    fn MsiProvideQualifiedComponentA();
    fn MsiProvideQualifiedComponentExA();
    fn MsiProvideQualifiedComponentExW();
    fn MsiProvideQualifiedComponentW();
    fn MsiQueryComponentStateA();
    fn MsiQueryComponentStateW();
    fn MsiQueryFeatureStateA();
    fn MsiQueryFeatureStateExA();
    fn MsiQueryFeatureStateExW();
    fn MsiQueryFeatureStateW();
    fn MsiQueryProductStateA();
    fn MsiQueryProductStateW();
    fn MsiRecordClearData();
    fn MsiRecordDataSize();
    fn MsiRecordGetFieldCount();
    fn MsiRecordGetInteger();
    fn MsiRecordGetStringA();
    fn MsiRecordGetStringW();
    fn MsiRecordIsNull();
    fn MsiRecordReadStream();
    fn MsiRecordSetInteger();
    fn MsiRecordSetStreamA();
    fn MsiRecordSetStreamW();
    fn MsiRecordSetStringA();
    fn MsiRecordSetStringW();
    fn MsiReinstallFeatureA();
    fn MsiReinstallFeatureW();
    fn MsiReinstallProductA();
    fn MsiReinstallProductW();
    fn MsiRemovePatchesA();
    fn MsiRemovePatchesW();
    fn MsiSequenceA();
    fn MsiSequenceW();
    fn MsiSetComponentStateA();
    fn MsiSetComponentStateW();
    fn MsiSetExternalUIA();
    fn MsiSetExternalUIRecord();
    fn MsiSetExternalUIW();
    fn MsiSetFeatureAttributesA();
    fn MsiSetFeatureAttributesW();
    fn MsiSetFeatureStateA();
    fn MsiSetFeatureStateW();
    fn MsiSetInstallLevel();
    fn MsiSetInternalUI();
    fn MsiSetMode();
    fn MsiSetPropertyA();
    fn MsiSetPropertyW();
    fn MsiSetTargetPathA();
    fn MsiSetTargetPathW();
    fn MsiSourceListAddMediaDiskA();
    fn MsiSourceListAddMediaDiskW();
    fn MsiSourceListAddSourceA();
    fn MsiSourceListAddSourceExA();
    fn MsiSourceListAddSourceExW();
    fn MsiSourceListAddSourceW();
    fn MsiSourceListClearAllA();
    fn MsiSourceListClearAllExA();
    fn MsiSourceListClearAllExW();
    fn MsiSourceListClearAllW();
    fn MsiSourceListClearMediaDiskA();
    fn MsiSourceListClearMediaDiskW();
    fn MsiSourceListClearSourceA();
    fn MsiSourceListClearSourceW();
    fn MsiSourceListEnumMediaDisksA();
    fn MsiSourceListEnumMediaDisksW();
    fn MsiSourceListEnumSourcesA();
    fn MsiSourceListEnumSourcesW();
    fn MsiSourceListForceResolutionA();
    fn MsiSourceListForceResolutionExA();
    fn MsiSourceListForceResolutionExW();
    fn MsiSourceListForceResolutionW();
    fn MsiSourceListGetInfoA();
    fn MsiSourceListGetInfoW();
    fn MsiSourceListSetInfoA();
    fn MsiSourceListSetInfoW();
    fn MsiSummaryInfoGetPropertyA();
    fn MsiSummaryInfoGetPropertyCount();
    fn MsiSummaryInfoGetPropertyW();
    fn MsiSummaryInfoPersist();
    fn MsiSummaryInfoSetPropertyA();
    fn MsiSummaryInfoSetPropertyW();
    fn MsiUseFeatureA();
    fn MsiUseFeatureExA();
    fn MsiUseFeatureExW();
    fn MsiUseFeatureW();
    fn MsiVerifyDiskSpace();
    fn MsiVerifyPackageA();
    fn MsiVerifyPackageW();
    fn MsiViewClose();
    fn MsiViewExecute();
    fn MsiViewFetch();
    fn MsiViewGetColumnInfo();
    fn MsiViewGetErrorA();
    fn MsiViewGetErrorW();
    fn MsiViewModify();
    fn MsmMerge();
    fn NormalizeFileForPatchSignature();
    fn PACKMAN_RUNTIME();
    fn PATCH_IGNORE_RANGE();
    fn PATCH_INTERLEAVE_MAP();
    fn PATCH_OLD_FILE_INFO();
    fn PATCH_OLD_FILE_INFO_A();
    fn PATCH_OLD_FILE_INFO_H();
    fn PATCH_OLD_FILE_INFO_W();
    fn PATCH_OPTION_DATA();
    fn PATCH_OPTION_FAIL_IF_BIGGER();
    fn PATCH_OPTION_FAIL_IF_SAME_FILE();
    fn PATCH_OPTION_INTERLEAVE_FILES();
    fn PATCH_OPTION_NO_BINDFIX();
    fn PATCH_OPTION_NO_CHECKSUM();
    fn PATCH_OPTION_NO_LOCKFIX();
    fn PATCH_OPTION_NO_REBASE();
    fn PATCH_OPTION_NO_RESTIMEFIX();
    fn PATCH_OPTION_NO_TIMESTAMP();
    fn PATCH_OPTION_RESERVED1();
    fn PATCH_OPTION_SIGNATURE_MD5();
    fn PATCH_OPTION_USE_BEST();
    fn PATCH_OPTION_USE_LZX_A();
    fn PATCH_OPTION_USE_LZX_B();
    fn PATCH_OPTION_USE_LZX_BEST();
    fn PATCH_OPTION_USE_LZX_LARGE();
    fn PATCH_OPTION_VALID_FLAGS();
    fn PATCH_RETAIN_RANGE();
    fn PATCH_SYMBOL_NO_FAILURES();
    fn PATCH_SYMBOL_NO_IMAGEHLP();
    fn PATCH_SYMBOL_RESERVED1();
    fn PATCH_SYMBOL_UNDECORATED_TOO();
    fn PATCH_TRANSFORM_PE_IRELOC_2();
    fn PATCH_TRANSFORM_PE_RESOURCE_2();
    fn PID_APPNAME();
    fn PID_AUTHOR();
    fn PID_CHARCOUNT();
    fn PID_COMMENTS();
    fn PID_CREATE_DTM();
    fn PID_EDITTIME();
    fn PID_KEYWORDS();
    fn PID_LASTAUTHOR();
    fn PID_LASTPRINTED();
    fn PID_LASTSAVE_DTM();
    fn PID_MSIRESTRICT();
    fn PID_MSISOURCE();
    fn PID_MSIVERSION();
    fn PID_PAGECOUNT();
    fn PID_REVNUMBER();
    fn PID_SUBJECT();
    fn PID_TEMPLATE();
    fn PID_THUMBNAIL();
    fn PID_TITLE();
    fn PID_WORDCOUNT();
    fn PINSTALLUI_HANDLER_RECORD();
    fn PMSIHANDLE();
    fn PMSvc();
    fn PM_ACTIVATION_POLICY();
    fn PM_APPLICATION_HUBTYPE();
    fn PM_APPLICATION_INSTALL_TYPE();
    fn PM_APPLICATION_STATE();
    fn PM_APP_GENRE();
    fn PM_BSATASKID();
    fn PM_BWTASKID();
    fn PM_ENUM_APP_FILTER();
    fn PM_ENUM_BSA_FILTER();
    fn PM_ENUM_BW_FILTER();
    fn PM_ENUM_EXTENSION_FILTER();
    fn PM_ENUM_FILTER();
    fn PM_ENUM_TASK_FILTER();
    fn PM_ENUM_TILE_FILTER();
    fn PM_EXTENSIONCONSUMER();
    fn PM_INSTALLINFO();
    fn PM_INVOCATIONINFO();
    fn PM_LIVETILE_RECURRENCE_TYPE();
    fn PM_LOGO_SIZE();
    fn PM_STARTAPPBLOB();
    fn PM_STARTTILEBLOB();
    fn PM_STARTTILE_TYPE();
    fn PM_TASK_TRANSITION();
    fn PM_TASK_TYPE();
    fn PM_TILE_HUBTYPE();
    fn PM_TILE_SIZE();
    fn PM_UPDATEINFO();
    fn PM_UPDATEINFO_LEGACY();
    fn PPATCH_PROGRESS_CALLBACK();
    fn PPATCH_SYMLOAD_CALLBACK();
    fn PROTECTED_FILE_DATA();
    fn QUERYASMINFO_FLAGS();
    fn QueryActCtxSettingsW();
    fn QueryActCtxW();
    fn REINSTALLMODE();
    fn RESULTTYPES();
    fn ReleaseActCtx();
    fn SCRIPTFLAGS();
    fn SFC_DISABLE_ASK();
    fn SFC_DISABLE_NOPOPUPS();
    fn SFC_DISABLE_NORMAL();
    fn SFC_DISABLE_ONCE();
    fn SFC_DISABLE_SETUP();
    fn SFC_QUOTA_DEFAULT();
    fn SFC_SCAN_ALWAYS();
    fn SFC_SCAN_IMMEDIATE();
    fn SFC_SCAN_NORMAL();
    fn SFC_SCAN_ONCE();
    fn STATUSTYPES();
    fn STREAM_FORMAT_COMPLIB_MANIFEST();
    fn STREAM_FORMAT_COMPLIB_MODULE();
    fn STREAM_FORMAT_WIN32_MANIFEST();
    fn STREAM_FORMAT_WIN32_MODULE();
    fn SfcGetNextProtectedFile();
    fn SfcIsFileProtected();
    fn SfcIsKeyProtected();
    fn SfpVerifyFile();
    fn TILE_TEMPLATE_TYPE();
    fn TXTLOG_BACKUP();
    fn TXTLOG_CMI();
    fn TXTLOG_COPYFILES();
    fn TXTLOG_DEPTH_DECR();
    fn TXTLOG_DEPTH_INCR();
    fn TXTLOG_DETAILS();
    fn TXTLOG_DEVINST();
    fn TXTLOG_DEVMGR();
    fn TXTLOG_DRIVER_STORE();
    fn TXTLOG_DRVSETUP();
    fn TXTLOG_ERROR();
    fn TXTLOG_FILEQ();
    fn TXTLOG_FLUSH_FILE();
    fn TXTLOG_INF();
    fn TXTLOG_INFDB();
    fn TXTLOG_INSTALLER();
    fn TXTLOG_NEWDEV();
    fn TXTLOG_POLICY();
    fn TXTLOG_RESERVED_FLAGS();
    fn TXTLOG_SETUP();
    fn TXTLOG_SETUPAPI_BITS();
    fn TXTLOG_SETUPAPI_CMDLINE();
    fn TXTLOG_SETUPAPI_DEVLOG();
    fn TXTLOG_SIGVERIF();
    fn TXTLOG_SUMMARY();
    fn TXTLOG_SYSTEM_STATE_CHANGE();
    fn TXTLOG_TAB_1();
    fn TXTLOG_TIMESTAMP();
    fn TXTLOG_UI();
    fn TXTLOG_UMPNPMGR();
    fn TXTLOG_UTIL();
    fn TXTLOG_VENDOR();
    fn TXTLOG_VERBOSE();
    fn TXTLOG_VERY_VERBOSE();
    fn TXTLOG_WARNING();
    fn TestApplyPatchToFileA();
    fn TestApplyPatchToFileByBuffers();
    fn TestApplyPatchToFileByHandles();
    fn TestApplyPatchToFileW();
    fn UIALL();
    fn UILOGBITS();
    fn UINONE();
    fn USERINFOSTATE();
    fn WARN_BAD_MAJOR_VERSION();
    fn WARN_BASE();
    fn WARN_EQUAL_FILE_VERSION();
    fn WARN_FILE_VERSION_DOWNREV();
    fn WARN_IMPROPER_TRANSFORM_VALIDATION();
    fn WARN_INVALID_TRANSFORM_VALIDATION();
    fn WARN_MAJOR_UPGRADE_PATCH();
    fn WARN_OBSOLETION_WITH_MSI30();
    fn WARN_OBSOLETION_WITH_PATCHSEQUENCE();
    fn WARN_OBSOLETION_WITH_SEQUENCE_DATA();
    fn WARN_PATCHPROPERTYNOTSET();
    fn WARN_PCW_MISMATCHED_PRODUCT_CODES();
    fn WARN_PCW_MISMATCHED_PRODUCT_VERSIONS();
    fn WARN_SEQUENCE_DATA_GENERATION_DISABLED();
    fn WARN_SEQUENCE_DATA_SUPERSEDENCE_IGNORED();
    fn ZombifyActCtx();
    fn _WIN32_MSI();
    fn _WIN32_MSM();
    fn _tagAPPTASKTYPE();
    fn cchMaxInteger();
    fn msidbAssemblyAttributes();
    fn msidbClassAttributes();
    fn msidbComponentAttributes();
    fn msidbControlAttributes();
    fn msidbCustomActionType();
    fn msidbDialogAttributes();
    fn msidbEmbeddedUIAttributes();
    fn msidbFeatureAttributes();
    fn msidbFileAttributes();
    fn msidbIniFileAction();
    fn msidbLocatorType();
    fn msidbMoveFileOptions();
    fn msidbODBCDataSourceRegistration();
    fn msidbPatchAttributes();
    fn msidbRegistryRoot();
    fn msidbRemoveFileInstallMode();
    fn msidbServiceConfigEvent();
    fn msidbServiceControlEvent();
    fn msidbServiceInstallErrorControl();
    fn msidbSumInfoSourceType();
    fn msidbTextStyleStyleBits();
    fn msidbUpgradeAttributes();
    fn msifiFastInstallBits();
    fn msirbRebootReason();
    fn msirbRebootType();
    fn msmErrorType();
}
