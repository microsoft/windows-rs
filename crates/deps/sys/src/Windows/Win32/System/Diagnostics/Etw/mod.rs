#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn CLASSIC_EVENT_ID();
    fn CLSID_TraceRelogger();
    fn CTraceRelogger();
    fn CloseTrace();
    fn ControlTraceA();
    fn ControlTraceW();
    fn CreateTraceInstanceId();
    fn CveEventWrite();
    fn DECODING_SOURCE();
    fn DefaultTraceSecurityGuid();
    fn ENABLECALLBACK_ENABLED_STATE();
    fn ENABLE_TRACE_PARAMETERS();
    fn ENABLE_TRACE_PARAMETERS_V1();
    fn ENABLE_TRACE_PARAMETERS_VERSION();
    fn ENABLE_TRACE_PARAMETERS_VERSION_2();
    fn ETW_ASCIICHAR_TYPE_VALUE();
    fn ETW_ASCIISTRING_TYPE_VALUE();
    fn ETW_BOOLEAN_TYPE_VALUE();
    fn ETW_BOOL_TYPE_VALUE();
    fn ETW_BUFFER_CONTEXT();
    fn ETW_BYTE_TYPE_VALUE();
    fn ETW_CHAR_TYPE_VALUE();
    fn ETW_COMPRESSION_RESUMPTION_MODE();
    fn ETW_COUNTED_ANSISTRING_TYPE_VALUE();
    fn ETW_COUNTED_STRING_TYPE_VALUE();
    fn ETW_DATETIME_TYPE_VALUE();
    fn ETW_DECIMAL_TYPE_VALUE();
    fn ETW_DOUBLE_TYPE_VALUE();
    fn ETW_GUID_TYPE_VALUE();
    fn ETW_HIDDEN_TYPE_VALUE();
    fn ETW_INT16_TYPE_VALUE();
    fn ETW_INT32_TYPE_VALUE();
    fn ETW_INT64_TYPE_VALUE();
    fn ETW_NON_NULL_TERMINATED_STRING_TYPE_VALUE();
    fn ETW_NULL_TYPE_VALUE();
    fn ETW_OBJECT_TYPE_VALUE();
    fn ETW_PMC_COUNTER_OWNER();
    fn ETW_PMC_COUNTER_OWNERSHIP_STATUS();
    fn ETW_PMC_COUNTER_OWNER_TYPE();
    fn ETW_POINTER_TYPE_VALUE();
    fn ETW_PROCESS_HANDLE_INFO_TYPE();
    fn ETW_PROVIDER_TRAIT_TYPE();
    fn ETW_PTVECTOR_TYPE_VALUE();
    fn ETW_REDUCED_ANSISTRING_TYPE_VALUE();
    fn ETW_REDUCED_STRING_TYPE_VALUE();
    fn ETW_REFRENCE_TYPE_VALUE();
    fn ETW_REVERSED_COUNTED_ANSISTRING_TYPE_VALUE();
    fn ETW_REVERSED_COUNTED_STRING_TYPE_VALUE();
    fn ETW_SBYTE_TYPE_VALUE();
    fn ETW_SID_TYPE_VALUE();
    fn ETW_SINGLE_TYPE_VALUE();
    fn ETW_SIZET_TYPE_VALUE();
    fn ETW_STRING_TYPE_VALUE();
    fn ETW_TRACE_PARTITION_INFORMATION();
    fn ETW_TRACE_PARTITION_INFORMATION_V2();
    fn ETW_UINT16_TYPE_VALUE();
    fn ETW_UINT32_TYPE_VALUE();
    fn ETW_UINT64_TYPE_VALUE();
    fn ETW_VARIANT_TYPE_VALUE();
    fn ETW_WMITIME_TYPE_VALUE();
    fn EVENTSECURITYOPERATION();
    fn EVENT_ACTIVITY_CTRL_CREATE_ID();
    fn EVENT_ACTIVITY_CTRL_CREATE_SET_ID();
    fn EVENT_ACTIVITY_CTRL_GET_ID();
    fn EVENT_ACTIVITY_CTRL_GET_SET_ID();
    fn EVENT_ACTIVITY_CTRL_SET_ID();
    fn EVENT_DATA_DESCRIPTOR();
    fn EVENT_DATA_DESCRIPTOR_TYPE_EVENT_METADATA();
    fn EVENT_DATA_DESCRIPTOR_TYPE_NONE();
    fn EVENT_DATA_DESCRIPTOR_TYPE_PROVIDER_METADATA();
    fn EVENT_DATA_DESCRIPTOR_TYPE_TIMESTAMP_OVERRIDE();
    fn EVENT_DESCRIPTOR();
    fn EVENT_ENABLE_PROPERTY_ENABLE_KEYWORD_0();
    fn EVENT_ENABLE_PROPERTY_ENABLE_SILOS();
    fn EVENT_ENABLE_PROPERTY_EVENT_KEY();
    fn EVENT_ENABLE_PROPERTY_EXCLUDE_INPRIVATE();
    fn EVENT_ENABLE_PROPERTY_IGNORE_KEYWORD_0();
    fn EVENT_ENABLE_PROPERTY_PROCESS_START_KEY();
    fn EVENT_ENABLE_PROPERTY_PROVIDER_GROUP();
    fn EVENT_ENABLE_PROPERTY_PSM_KEY();
    fn EVENT_ENABLE_PROPERTY_SID();
    fn EVENT_ENABLE_PROPERTY_SOURCE_CONTAINER_TRACKING();
    fn EVENT_ENABLE_PROPERTY_STACK_TRACE();
    fn EVENT_ENABLE_PROPERTY_TS_ID();
    fn EVENT_EXTENDED_ITEM_EVENT_KEY();
    fn EVENT_EXTENDED_ITEM_INSTANCE();
    fn EVENT_EXTENDED_ITEM_PEBS_INDEX();
    fn EVENT_EXTENDED_ITEM_PMC_COUNTERS();
    fn EVENT_EXTENDED_ITEM_PROCESS_START_KEY();
    fn EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID();
    fn EVENT_EXTENDED_ITEM_STACK_KEY32();
    fn EVENT_EXTENDED_ITEM_STACK_KEY64();
    fn EVENT_EXTENDED_ITEM_STACK_TRACE32();
    fn EVENT_EXTENDED_ITEM_STACK_TRACE64();
    fn EVENT_EXTENDED_ITEM_TS_ID();
    fn EVENT_FIELD_TYPE();
    fn EVENT_FILTER_DESCRIPTOR();
    fn EVENT_FILTER_EVENT_ID();
    fn EVENT_FILTER_EVENT_NAME();
    fn EVENT_FILTER_HEADER();
    fn EVENT_FILTER_LEVEL_KW();
    fn EVENT_FILTER_TYPE_CONTAINER();
    fn EVENT_FILTER_TYPE_EVENT_ID();
    fn EVENT_FILTER_TYPE_EVENT_NAME();
    fn EVENT_FILTER_TYPE_EXECUTABLE_NAME();
    fn EVENT_FILTER_TYPE_NONE();
    fn EVENT_FILTER_TYPE_PACKAGE_APP_ID();
    fn EVENT_FILTER_TYPE_PACKAGE_ID();
    fn EVENT_FILTER_TYPE_PAYLOAD();
    fn EVENT_FILTER_TYPE_PID();
    fn EVENT_FILTER_TYPE_SCHEMATIZED();
    fn EVENT_FILTER_TYPE_STACKWALK();
    fn EVENT_FILTER_TYPE_STACKWALK_LEVEL_KW();
    fn EVENT_FILTER_TYPE_STACKWALK_NAME();
    fn EVENT_FILTER_TYPE_SYSTEM_FLAGS();
    fn EVENT_FILTER_TYPE_TRACEHANDLE();
    fn EVENT_HEADER();
    fn EVENT_HEADER_EXTENDED_DATA_ITEM();
    fn EVENT_HEADER_EXT_TYPE_CONTAINER_ID();
    fn EVENT_HEADER_EXT_TYPE_CONTROL_GUID();
    fn EVENT_HEADER_EXT_TYPE_EVENT_KEY();
    fn EVENT_HEADER_EXT_TYPE_EVENT_SCHEMA_TL();
    fn EVENT_HEADER_EXT_TYPE_INSTANCE_INFO();
    fn EVENT_HEADER_EXT_TYPE_MAX();
    fn EVENT_HEADER_EXT_TYPE_PEBS_INDEX();
    fn EVENT_HEADER_EXT_TYPE_PMC_COUNTERS();
    fn EVENT_HEADER_EXT_TYPE_PROCESS_START_KEY();
    fn EVENT_HEADER_EXT_TYPE_PROV_TRAITS();
    fn EVENT_HEADER_EXT_TYPE_PSM_KEY();
    fn EVENT_HEADER_EXT_TYPE_QPC_DELTA();
    fn EVENT_HEADER_EXT_TYPE_RELATED_ACTIVITYID();
    fn EVENT_HEADER_EXT_TYPE_SID();
    fn EVENT_HEADER_EXT_TYPE_STACK_KEY32();
    fn EVENT_HEADER_EXT_TYPE_STACK_KEY64();
    fn EVENT_HEADER_EXT_TYPE_STACK_TRACE32();
    fn EVENT_HEADER_EXT_TYPE_STACK_TRACE64();
    fn EVENT_HEADER_EXT_TYPE_TS_ID();
    fn EVENT_HEADER_FLAG_32_BIT_HEADER();
    fn EVENT_HEADER_FLAG_64_BIT_HEADER();
    fn EVENT_HEADER_FLAG_CLASSIC_HEADER();
    fn EVENT_HEADER_FLAG_DECODE_GUID();
    fn EVENT_HEADER_FLAG_EXTENDED_INFO();
    fn EVENT_HEADER_FLAG_NO_CPUTIME();
    fn EVENT_HEADER_FLAG_PRIVATE_SESSION();
    fn EVENT_HEADER_FLAG_PROCESSOR_INDEX();
    fn EVENT_HEADER_FLAG_STRING_ONLY();
    fn EVENT_HEADER_FLAG_TRACE_MESSAGE();
    fn EVENT_HEADER_PROPERTY_FORWARDED_XML();
    fn EVENT_HEADER_PROPERTY_LEGACY_EVENTLOG();
    fn EVENT_HEADER_PROPERTY_RELOGGABLE();
    fn EVENT_HEADER_PROPERTY_XML();
    fn EVENT_INFO_CLASS();
    fn EVENT_INSTANCE_HEADER();
    fn EVENT_INSTANCE_INFO();
    fn EVENT_MAP_ENTRY();
    fn EVENT_MAP_INFO();
    fn EVENT_MAX_LEVEL();
    fn EVENT_MIN_LEVEL();
    fn EVENT_PROPERTY_INFO();
    fn EVENT_RECORD();
    fn EVENT_TRACE();
    fn EVENT_TRACE_ADDTO_TRIAGE_DUMP();
    fn EVENT_TRACE_ADD_HEADER_MODE();
    fn EVENT_TRACE_BUFFERING_MODE();
    fn EVENT_TRACE_COMPRESSED_MODE();
    fn EVENT_TRACE_CONTROL();
    fn EVENT_TRACE_CONTROL_CONVERT_TO_REALTIME();
    fn EVENT_TRACE_CONTROL_INCREMENT_FILE();
    fn EVENT_TRACE_DELAY_OPEN_FILE_MODE();
    fn EVENT_TRACE_FILE_MODE_APPEND();
    fn EVENT_TRACE_FILE_MODE_CIRCULAR();
    fn EVENT_TRACE_FILE_MODE_NEWFILE();
    fn EVENT_TRACE_FILE_MODE_NONE();
    fn EVENT_TRACE_FILE_MODE_PREALLOCATE();
    fn EVENT_TRACE_FILE_MODE_SEQUENTIAL();
    fn EVENT_TRACE_FLAG();
    fn EVENT_TRACE_FLAG_DEBUG_EVENTS();
    fn EVENT_TRACE_FLAG_ENABLE_RESERVE();
    fn EVENT_TRACE_FLAG_EXTENSION();
    fn EVENT_TRACE_FLAG_FORWARD_WMI();
    fn EVENT_TRACE_HEADER();
    fn EVENT_TRACE_INDEPENDENT_SESSION_MODE();
    fn EVENT_TRACE_LOGFILEA();
    fn EVENT_TRACE_LOGFILEW();
    fn EVENT_TRACE_MODE_RESERVED();
    fn EVENT_TRACE_NONSTOPPABLE_MODE();
    fn EVENT_TRACE_NO_PER_PROCESSOR_BUFFERING();
    fn EVENT_TRACE_PERSIST_ON_HYBRID_SHUTDOWN();
    fn EVENT_TRACE_PRIVATE_IN_PROC();
    fn EVENT_TRACE_PRIVATE_LOGGER_MODE();
    fn EVENT_TRACE_PROPERTIES();
    fn EVENT_TRACE_PROPERTIES_V2();
    fn EVENT_TRACE_REAL_TIME_MODE();
    fn EVENT_TRACE_RELOG_MODE();
    fn EVENT_TRACE_SECURE_MODE();
    fn EVENT_TRACE_STOP_ON_HYBRID_SHUTDOWN();
    fn EVENT_TRACE_SYSTEM_LOGGER_MODE();
    fn EVENT_TRACE_TYPE_ACCEPT();
    fn EVENT_TRACE_TYPE_ACKDUP();
    fn EVENT_TRACE_TYPE_ACKFULL();
    fn EVENT_TRACE_TYPE_ACKPART();
    fn EVENT_TRACE_TYPE_CHECKPOINT();
    fn EVENT_TRACE_TYPE_CONFIG();
    fn EVENT_TRACE_TYPE_CONFIG_BOOT();
    fn EVENT_TRACE_TYPE_CONFIG_CI_INFO();
    fn EVENT_TRACE_TYPE_CONFIG_CPU();
    fn EVENT_TRACE_TYPE_CONFIG_DEFRAG();
    fn EVENT_TRACE_TYPE_CONFIG_DEVICEFAMILY();
    fn EVENT_TRACE_TYPE_CONFIG_DPI();
    fn EVENT_TRACE_TYPE_CONFIG_FLIGHTID();
    fn EVENT_TRACE_TYPE_CONFIG_IDECHANNEL();
    fn EVENT_TRACE_TYPE_CONFIG_IRQ();
    fn EVENT_TRACE_TYPE_CONFIG_LOGICALDISK();
    fn EVENT_TRACE_TYPE_CONFIG_MACHINEID();
    fn EVENT_TRACE_TYPE_CONFIG_MOBILEPLATFORM();
    fn EVENT_TRACE_TYPE_CONFIG_NETINFO();
    fn EVENT_TRACE_TYPE_CONFIG_NIC();
    fn EVENT_TRACE_TYPE_CONFIG_NUMANODE();
    fn EVENT_TRACE_TYPE_CONFIG_OPTICALMEDIA();
    fn EVENT_TRACE_TYPE_CONFIG_PHYSICALDISK();
    fn EVENT_TRACE_TYPE_CONFIG_PLATFORM();
    fn EVENT_TRACE_TYPE_CONFIG_PNP();
    fn EVENT_TRACE_TYPE_CONFIG_POWER();
    fn EVENT_TRACE_TYPE_CONFIG_PROCESSOR();
    fn EVENT_TRACE_TYPE_CONFIG_PROCESSORGROUP();
    fn EVENT_TRACE_TYPE_CONFIG_PROCESSORNUMBER();
    fn EVENT_TRACE_TYPE_CONFIG_SERVICES();
    fn EVENT_TRACE_TYPE_CONFIG_VIDEO();
    fn EVENT_TRACE_TYPE_CONFIG_VIRTUALIZATION();
    fn EVENT_TRACE_TYPE_CONNECT();
    fn EVENT_TRACE_TYPE_CONNFAIL();
    fn EVENT_TRACE_TYPE_COPY_ARP();
    fn EVENT_TRACE_TYPE_COPY_TCP();
    fn EVENT_TRACE_TYPE_DBGID_RSDS();
    fn EVENT_TRACE_TYPE_DC_END();
    fn EVENT_TRACE_TYPE_DC_START();
    fn EVENT_TRACE_TYPE_DEQUEUE();
    fn EVENT_TRACE_TYPE_DISCONNECT();
    fn EVENT_TRACE_TYPE_END();
    fn EVENT_TRACE_TYPE_EXTENSION();
    fn EVENT_TRACE_TYPE_FLT_POSTOP_COMPLETION();
    fn EVENT_TRACE_TYPE_FLT_POSTOP_FAILURE();
    fn EVENT_TRACE_TYPE_FLT_POSTOP_INIT();
    fn EVENT_TRACE_TYPE_FLT_PREOP_COMPLETION();
    fn EVENT_TRACE_TYPE_FLT_PREOP_FAILURE();
    fn EVENT_TRACE_TYPE_FLT_PREOP_INIT();
    fn EVENT_TRACE_TYPE_GUIDMAP();
    fn EVENT_TRACE_TYPE_INFO();
    fn EVENT_TRACE_TYPE_IO_FLUSH();
    fn EVENT_TRACE_TYPE_IO_FLUSH_INIT();
    fn EVENT_TRACE_TYPE_IO_READ();
    fn EVENT_TRACE_TYPE_IO_READ_INIT();
    fn EVENT_TRACE_TYPE_IO_REDIRECTED_INIT();
    fn EVENT_TRACE_TYPE_IO_WRITE();
    fn EVENT_TRACE_TYPE_IO_WRITE_INIT();
    fn EVENT_TRACE_TYPE_LOAD();
    fn EVENT_TRACE_TYPE_MM_AV();
    fn EVENT_TRACE_TYPE_MM_COW();
    fn EVENT_TRACE_TYPE_MM_DZF();
    fn EVENT_TRACE_TYPE_MM_GPF();
    fn EVENT_TRACE_TYPE_MM_HPF();
    fn EVENT_TRACE_TYPE_MM_TF();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_FLUSH();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_FLUSH_INIT();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_READ();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_READ_INIT();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_WRITE();
    fn EVENT_TRACE_TYPE_OPTICAL_IO_WRITE_INIT();
    fn EVENT_TRACE_TYPE_RECEIVE();
    fn EVENT_TRACE_TYPE_RECONNECT();
    fn EVENT_TRACE_TYPE_REGCLOSE();
    fn EVENT_TRACE_TYPE_REGCOMMIT();
    fn EVENT_TRACE_TYPE_REGCREATE();
    fn EVENT_TRACE_TYPE_REGDELETE();
    fn EVENT_TRACE_TYPE_REGDELETEVALUE();
    fn EVENT_TRACE_TYPE_REGENUMERATEKEY();
    fn EVENT_TRACE_TYPE_REGENUMERATEVALUEKEY();
    fn EVENT_TRACE_TYPE_REGFLUSH();
    fn EVENT_TRACE_TYPE_REGKCBCREATE();
    fn EVENT_TRACE_TYPE_REGKCBDELETE();
    fn EVENT_TRACE_TYPE_REGKCBRUNDOWNBEGIN();
    fn EVENT_TRACE_TYPE_REGKCBRUNDOWNEND();
    fn EVENT_TRACE_TYPE_REGMOUNTHIVE();
    fn EVENT_TRACE_TYPE_REGOPEN();
    fn EVENT_TRACE_TYPE_REGPREPARE();
    fn EVENT_TRACE_TYPE_REGQUERY();
    fn EVENT_TRACE_TYPE_REGQUERYMULTIPLEVALUE();
    fn EVENT_TRACE_TYPE_REGQUERYSECURITY();
    fn EVENT_TRACE_TYPE_REGQUERYVALUE();
    fn EVENT_TRACE_TYPE_REGROLLBACK();
    fn EVENT_TRACE_TYPE_REGSETINFORMATION();
    fn EVENT_TRACE_TYPE_REGSETSECURITY();
    fn EVENT_TRACE_TYPE_REGSETVALUE();
    fn EVENT_TRACE_TYPE_REGVIRTUALIZE();
    fn EVENT_TRACE_TYPE_REPLY();
    fn EVENT_TRACE_TYPE_RESUME();
    fn EVENT_TRACE_TYPE_RETRANSMIT();
    fn EVENT_TRACE_TYPE_SECURITY();
    fn EVENT_TRACE_TYPE_SEND();
    fn EVENT_TRACE_TYPE_SIDINFO();
    fn EVENT_TRACE_TYPE_START();
    fn EVENT_TRACE_TYPE_STOP();
    fn EVENT_TRACE_TYPE_SUSPEND();
    fn EVENT_TRACE_TYPE_TERMINATE();
    fn EVENT_TRACE_TYPE_WINEVT_RECEIVE();
    fn EVENT_TRACE_TYPE_WINEVT_SEND();
    fn EVENT_TRACE_USE_GLOBAL_SEQUENCE();
    fn EVENT_TRACE_USE_KBYTES_FOR_SIZE();
    fn EVENT_TRACE_USE_LOCAL_SEQUENCE();
    fn EVENT_TRACE_USE_NOCPUTIME();
    fn EVENT_TRACE_USE_PAGED_MEMORY();
    fn EVENT_TRACE_USE_PROCTIME();
    fn EVENT_WRITE_FLAG_INPRIVATE();
    fn EVENT_WRITE_FLAG_NO_FAULTING();
    fn EnableTrace();
    fn EnableTraceEx();
    fn EnableTraceEx2();
    fn EnumerateTraceGuids();
    fn EnumerateTraceGuidsEx();
    fn EventAccessControl();
    fn EventAccessQuery();
    fn EventAccessRemove();
    fn EventActivityIdControl();
    fn EventEnabled();
    fn EventProviderEnabled();
    fn EventRegister();
    fn EventSetInformation();
    fn EventTraceConfigGuid();
    fn EventTraceGuid();
    fn EventUnregister();
    fn EventWrite();
    fn EventWriteEx();
    fn EventWriteString();
    fn EventWriteTransfer();
    fn FlushTraceA();
    fn FlushTraceW();
    fn GetTraceEnableFlags();
    fn GetTraceEnableLevel();
    fn GetTraceLoggerHandle();
    fn ITraceEvent();
    fn ITraceEventCallback();
    fn ITraceRelogger();
    fn MAP_FLAGS();
    fn MAP_VALUETYPE();
    fn MAX_EVENT_DATA_DESCRIPTORS();
    fn MAX_EVENT_FILTERS_COUNT();
    fn MAX_EVENT_FILTER_DATA_SIZE();
    fn MAX_EVENT_FILTER_EVENT_ID_COUNT();
    fn MAX_EVENT_FILTER_EVENT_NAME_SIZE();
    fn MAX_EVENT_FILTER_PAYLOAD_SIZE();
    fn MAX_EVENT_FILTER_PID_COUNT();
    fn MAX_MOF_FIELDS();
    fn MAX_PAYLOAD_PREDICATES();
    fn MOF_FIELD();
    fn OFFSETINSTANCEDATAANDLENGTH();
    fn OpenTraceA();
    fn OpenTraceW();
    fn PAYLOAD_FILTER_PREDICATE();
    fn PAYLOAD_OPERATOR();
    fn PENABLECALLBACK();
    fn PEVENT_CALLBACK();
    fn PEVENT_RECORD_CALLBACK();
    fn PEVENT_TRACE_BUFFER_CALLBACKA();
    fn PEVENT_TRACE_BUFFER_CALLBACKW();
    fn PROCESS_TRACE_MODE_EVENT_RECORD();
    fn PROCESS_TRACE_MODE_RAW_TIMESTAMP();
    fn PROCESS_TRACE_MODE_REAL_TIME();
    fn PROFILE_SOURCE_INFO();
    fn PROPERTY_DATA_DESCRIPTOR();
    fn PROPERTY_FLAGS();
    fn PROVIDER_ENUMERATION_INFO();
    fn PROVIDER_EVENT_INFO();
    fn PROVIDER_FIELD_INFO();
    fn PROVIDER_FIELD_INFOARRAY();
    fn PROVIDER_FILTER_INFO();
    fn PrivateLoggerNotificationGuid();
    fn ProcessTrace();
    fn QueryAllTracesA();
    fn QueryAllTracesW();
    fn QueryTraceA();
    fn QueryTraceProcessingHandle();
    fn QueryTraceW();
    fn RegisterTraceGuidsA();
    fn RegisterTraceGuidsW();
    fn RemoveTraceCallback();
    fn SYSTEM_ALPC_KW_GENERAL();
    fn SYSTEM_CONFIG_KW_GRAPHICS();
    fn SYSTEM_CONFIG_KW_NETWORK();
    fn SYSTEM_CONFIG_KW_OPTICAL();
    fn SYSTEM_CONFIG_KW_PNP();
    fn SYSTEM_CONFIG_KW_SERVICES();
    fn SYSTEM_CONFIG_KW_STORAGE();
    fn SYSTEM_CONFIG_KW_SYSTEM();
    fn SYSTEM_CPU_KW_CACHE_FLUSH();
    fn SYSTEM_CPU_KW_CONFIG();
    fn SYSTEM_CPU_KW_SPEC_CONTROL();
    fn SYSTEM_EVENT_TYPE();
    fn SYSTEM_HYPERVISOR_KW_CALLOUTS();
    fn SYSTEM_HYPERVISOR_KW_PROFILE();
    fn SYSTEM_HYPERVISOR_KW_VTL_CHANGE();
    fn SYSTEM_INTERRUPT_KW_CLOCK_INTERRUPT();
    fn SYSTEM_INTERRUPT_KW_DPC();
    fn SYSTEM_INTERRUPT_KW_DPC_QUEUE();
    fn SYSTEM_INTERRUPT_KW_GENERAL();
    fn SYSTEM_INTERRUPT_KW_IPI();
    fn SYSTEM_INTERRUPT_KW_WDF_DPC();
    fn SYSTEM_INTERRUPT_KW_WDF_INTERRUPT();
    fn SYSTEM_IOFILTER_KW_FAILURE();
    fn SYSTEM_IOFILTER_KW_FASTIO();
    fn SYSTEM_IOFILTER_KW_GENERAL();
    fn SYSTEM_IOFILTER_KW_INIT();
    fn SYSTEM_IO_KW_CC();
    fn SYSTEM_IO_KW_DISK();
    fn SYSTEM_IO_KW_DISK_INIT();
    fn SYSTEM_IO_KW_DRIVERS();
    fn SYSTEM_IO_KW_FILE();
    fn SYSTEM_IO_KW_FILENAME();
    fn SYSTEM_IO_KW_NETWORK();
    fn SYSTEM_IO_KW_OPTICAL();
    fn SYSTEM_IO_KW_OPTICAL_INIT();
    fn SYSTEM_IO_KW_SPLIT();
    fn SYSTEM_LOCK_KW_SPINLOCK();
    fn SYSTEM_LOCK_KW_SPINLOCK_COUNTERS();
    fn SYSTEM_LOCK_KW_SYNC_OBJECTS();
    fn SYSTEM_MEMORY_KW_ALL_FAULTS();
    fn SYSTEM_MEMORY_KW_CONTMEM_GEN();
    fn SYSTEM_MEMORY_KW_FOOTPRINT();
    fn SYSTEM_MEMORY_KW_GENERAL();
    fn SYSTEM_MEMORY_KW_HARD_FAULTS();
    fn SYSTEM_MEMORY_KW_HEAP();
    fn SYSTEM_MEMORY_KW_MEMINFO();
    fn SYSTEM_MEMORY_KW_MEMINFO_WS();
    fn SYSTEM_MEMORY_KW_NONTRADEABLE();
    fn SYSTEM_MEMORY_KW_PFSECTION();
    fn SYSTEM_MEMORY_KW_POOL();
    fn SYSTEM_MEMORY_KW_REFSET();
    fn SYSTEM_MEMORY_KW_SESSION();
    fn SYSTEM_MEMORY_KW_VAMAP();
    fn SYSTEM_MEMORY_KW_VIRTUAL_ALLOC();
    fn SYSTEM_MEMORY_KW_WS();
    fn SYSTEM_MEMORY_POOL_FILTER_ID();
    fn SYSTEM_OBJECT_KW_GENERAL();
    fn SYSTEM_OBJECT_KW_HANDLE();
    fn SYSTEM_POWER_KW_GENERAL();
    fn SYSTEM_POWER_KW_HIBER_RUNDOWN();
    fn SYSTEM_POWER_KW_IDLE_SELECTION();
    fn SYSTEM_POWER_KW_PPM_EXIT_LATENCY();
    fn SYSTEM_POWER_KW_PROCESSOR_IDLE();
    fn SYSTEM_PROCESS_KW_DBGPRINT();
    fn SYSTEM_PROCESS_KW_DEBUG_EVENTS();
    fn SYSTEM_PROCESS_KW_FREEZE();
    fn SYSTEM_PROCESS_KW_GENERAL();
    fn SYSTEM_PROCESS_KW_INSWAP();
    fn SYSTEM_PROCESS_KW_JOB();
    fn SYSTEM_PROCESS_KW_LOADER();
    fn SYSTEM_PROCESS_KW_PERF_COUNTER();
    fn SYSTEM_PROCESS_KW_THREAD();
    fn SYSTEM_PROCESS_KW_WAKE_COUNTER();
    fn SYSTEM_PROCESS_KW_WAKE_DROP();
    fn SYSTEM_PROCESS_KW_WAKE_EVENT();
    fn SYSTEM_PROCESS_KW_WORKER_THREAD();
    fn SYSTEM_PROFILE_KW_GENERAL();
    fn SYSTEM_PROFILE_KW_PMC_PROFILE();
    fn SYSTEM_REGISTRY_KW_GENERAL();
    fn SYSTEM_REGISTRY_KW_HIVE();
    fn SYSTEM_REGISTRY_KW_NOTIFICATION();
    fn SYSTEM_SCHEDULER_KW_AFFINITY();
    fn SYSTEM_SCHEDULER_KW_ANTI_STARVATION();
    fn SYSTEM_SCHEDULER_KW_COMPACT_CSWITCH();
    fn SYSTEM_SCHEDULER_KW_CONTEXT_SWITCH();
    fn SYSTEM_SCHEDULER_KW_DISPATCHER();
    fn SYSTEM_SCHEDULER_KW_IDEAL_PROCESSOR();
    fn SYSTEM_SCHEDULER_KW_KERNEL_QUEUE();
    fn SYSTEM_SCHEDULER_KW_LOAD_BALANCER();
    fn SYSTEM_SCHEDULER_KW_PRIORITY();
    fn SYSTEM_SCHEDULER_KW_SHOULD_YIELD();
    fn SYSTEM_SCHEDULER_KW_XSCHEDULER();
    fn SYSTEM_SYSCALL_KW_GENERAL();
    fn SYSTEM_TIMER_KW_CLOCK_TIMER();
    fn SYSTEM_TIMER_KW_GENERAL();
    fn SetTraceCallback();
    fn StartTraceA();
    fn StartTraceW();
    fn StopTraceA();
    fn StopTraceW();
    fn SystemAlpcProviderGuid();
    fn SystemConfigProviderGuid();
    fn SystemCpuProviderGuid();
    fn SystemHypervisorProviderGuid();
    fn SystemInterruptProviderGuid();
    fn SystemIoFilterProviderGuid();
    fn SystemIoProviderGuid();
    fn SystemLockProviderGuid();
    fn SystemMemoryProviderGuid();
    fn SystemObjectProviderGuid();
    fn SystemPowerProviderGuid();
    fn SystemProcessProviderGuid();
    fn SystemProfileProviderGuid();
    fn SystemRegistryProviderGuid();
    fn SystemSchedulerProviderGuid();
    fn SystemSyscallProviderGuid();
    fn SystemTimerProviderGuid();
    fn SystemTraceControlGuid();
    fn TDH_CONTEXT();
    fn TDH_CONTEXT_TYPE();
    fn TDH_HANDLE();
    fn TEMPLATE_FLAGS();
    fn TRACELOG_ACCESS_KERNEL_LOGGER();
    fn TRACELOG_ACCESS_REALTIME();
    fn TRACELOG_CREATE_INPROC();
    fn TRACELOG_CREATE_ONDISK();
    fn TRACELOG_CREATE_REALTIME();
    fn TRACELOG_GUID_ENABLE();
    fn TRACELOG_JOIN_GROUP();
    fn TRACELOG_LOG_EVENT();
    fn TRACELOG_REGISTER_GUIDS();
    fn TRACE_ENABLE_INFO();
    fn TRACE_EVENT_INFO();
    fn TRACE_GUID_INFO();
    fn TRACE_GUID_PROPERTIES();
    fn TRACE_GUID_REGISTRATION();
    fn TRACE_HEADER_FLAG_LOG_WNODE();
    fn TRACE_HEADER_FLAG_TRACED_GUID();
    fn TRACE_HEADER_FLAG_USE_GUID_PTR();
    fn TRACE_HEADER_FLAG_USE_MOF_PTR();
    fn TRACE_HEADER_FLAG_USE_TIMESTAMP();
    fn TRACE_LEVEL_CRITICAL();
    fn TRACE_LEVEL_ERROR();
    fn TRACE_LEVEL_FATAL();
    fn TRACE_LEVEL_INFORMATION();
    fn TRACE_LEVEL_NONE();
    fn TRACE_LEVEL_RESERVED6();
    fn TRACE_LEVEL_RESERVED7();
    fn TRACE_LEVEL_RESERVED8();
    fn TRACE_LEVEL_RESERVED9();
    fn TRACE_LEVEL_VERBOSE();
    fn TRACE_LEVEL_WARNING();
    fn TRACE_LOGFILE_HEADER();
    fn TRACE_LOGFILE_HEADER32();
    fn TRACE_LOGFILE_HEADER64();
    fn TRACE_MESSAGE_FLAGS();
    fn TRACE_MESSAGE_FLAG_MASK();
    fn TRACE_MESSAGE_PERFORMANCE_TIMESTAMP();
    fn TRACE_MESSAGE_POINTER32();
    fn TRACE_MESSAGE_POINTER64();
    fn TRACE_PERIODIC_CAPTURE_STATE_INFO();
    fn TRACE_PROFILE_INTERVAL();
    fn TRACE_PROVIDER_FLAG_LEGACY();
    fn TRACE_PROVIDER_FLAG_PRE_ENABLE();
    fn TRACE_PROVIDER_INFO();
    fn TRACE_PROVIDER_INSTANCE_INFO();
    fn TRACE_QUERY_INFO_CLASS();
    fn TRACE_STACK_CACHING_INFO();
    fn TRACE_VERSION_INFO();
    fn TdhAggregatePayloadFilters();
    fn TdhCleanupPayloadEventFilterDescriptor();
    fn TdhCloseDecodingHandle();
    fn TdhCreatePayloadFilter();
    fn TdhDeletePayloadFilter();
    fn TdhEnumerateManifestProviderEvents();
    fn TdhEnumerateProviderFieldInformation();
    fn TdhEnumerateProviderFilters();
    fn TdhEnumerateProviders();
    fn TdhEnumerateProvidersForDecodingSource();
    fn TdhFormatProperty();
    fn TdhGetDecodingParameter();
    fn TdhGetEventInformation();
    fn TdhGetEventMapInformation();
    fn TdhGetManifestEventInformation();
    fn TdhGetProperty();
    fn TdhGetPropertySize();
    fn TdhGetWppMessage();
    fn TdhGetWppProperty();
    fn TdhLoadManifest();
    fn TdhLoadManifestFromBinary();
    fn TdhLoadManifestFromMemory();
    fn TdhOpenDecodingHandle();
    fn TdhQueryProviderFieldInformation();
    fn TdhSetDecodingParameter();
    fn TdhUnloadManifest();
    fn TdhUnloadManifestFromMemory();
    fn TraceEvent();
    fn TraceEventInstance();
    fn TraceMessage();
    fn TraceMessageVa();
    fn TraceQueryInformation();
    fn TraceSetInformation();
    fn UnregisterTraceGuids();
    fn UpdateTraceA();
    fn UpdateTraceW();
    fn WMIDPREQUEST();
    fn WMIDPREQUESTCODE();
    fn WMIGUID_EXECUTE();
    fn WMIGUID_NOTIFICATION();
    fn WMIGUID_QUERY();
    fn WMIGUID_READ_DESCRIPTION();
    fn WMIGUID_SET();
    fn WMIREGGUIDW();
    fn WMIREGINFOW();
    fn WMIREG_FLAG_EVENT_ONLY_GUID();
    fn WMIREG_FLAG_EXPENSIVE();
    fn WMIREG_FLAG_INSTANCE_BASENAME();
    fn WMIREG_FLAG_INSTANCE_LIST();
    fn WMIREG_FLAG_INSTANCE_PDO();
    fn WMIREG_FLAG_REMOVE_GUID();
    fn WMIREG_FLAG_RESERVED1();
    fn WMIREG_FLAG_RESERVED2();
    fn WMIREG_FLAG_TRACED_GUID();
    fn WMIREG_FLAG_TRACE_CONTROL_GUID();
    fn WMI_GLOBAL_LOGGER_ID();
    fn WMI_GUIDTYPE_DATA();
    fn WMI_GUIDTYPE_EVENT();
    fn WMI_GUIDTYPE_TRACE();
    fn WMI_GUIDTYPE_TRACECONTROL();
    fn WNODE_ALL_DATA();
    fn WNODE_EVENT_ITEM();
    fn WNODE_EVENT_REFERENCE();
    fn WNODE_FLAG_ALL_DATA();
    fn WNODE_FLAG_ANSI_INSTANCENAMES();
    fn WNODE_FLAG_EVENT_ITEM();
    fn WNODE_FLAG_EVENT_REFERENCE();
    fn WNODE_FLAG_FIXED_INSTANCE_SIZE();
    fn WNODE_FLAG_INSTANCES_SAME();
    fn WNODE_FLAG_INTERNAL();
    fn WNODE_FLAG_LOG_WNODE();
    fn WNODE_FLAG_METHOD_ITEM();
    fn WNODE_FLAG_NO_HEADER();
    fn WNODE_FLAG_PDO_INSTANCE_NAMES();
    fn WNODE_FLAG_PERSIST_EVENT();
    fn WNODE_FLAG_SEND_DATA_BLOCK();
    fn WNODE_FLAG_SEVERITY_MASK();
    fn WNODE_FLAG_SINGLE_INSTANCE();
    fn WNODE_FLAG_SINGLE_ITEM();
    fn WNODE_FLAG_STATIC_INSTANCE_NAMES();
    fn WNODE_FLAG_TOO_SMALL();
    fn WNODE_FLAG_TRACED_GUID();
    fn WNODE_FLAG_USE_GUID_PTR();
    fn WNODE_FLAG_USE_MOF_PTR();
    fn WNODE_FLAG_USE_TIMESTAMP();
    fn WNODE_FLAG_VERSIONED_PROPERTIES();
    fn WNODE_HEADER();
    fn WNODE_METHOD_ITEM();
    fn WNODE_SINGLE_INSTANCE();
    fn WNODE_SINGLE_ITEM();
    fn WNODE_TOO_SMALL();
    fn _TDH_IN_TYPE();
    fn _TDH_OUT_TYPE();
}
