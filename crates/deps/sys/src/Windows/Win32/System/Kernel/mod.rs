#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn COMPARTMENT_ID();
    fn CSTRING();
    fn EVENT_TYPE();
    fn EXCEPTION_DISPOSITION();
    fn EXCEPTION_REGISTRATION_RECORD();
    fn EXCEPTION_ROUTINE();
    fn FLOATING_SAVE_AREA();
    fn LIST_ENTRY();
    fn LIST_ENTRY32();
    fn LIST_ENTRY64();
    fn MAXUCHAR();
    fn MAXULONG();
    fn MAXUSHORT();
    fn NT_PRODUCT_TYPE();
    fn NT_TIB();
    fn NULL64();
    fn OBJECTID();
    fn OBJECT_ATTRIBUTES32();
    fn OBJECT_ATTRIBUTES64();
    fn OBJ_CASE_INSENSITIVE();
    fn OBJ_DONT_REPARSE();
    fn OBJ_EXCLUSIVE();
    fn OBJ_FORCE_ACCESS_CHECK();
    fn OBJ_HANDLE_TAGBITS();
    fn OBJ_IGNORE_IMPERSONATED_DEVICEMAP();
    fn OBJ_INHERIT();
    fn OBJ_KERNEL_HANDLE();
    fn OBJ_OPENIF();
    fn OBJ_OPENLINK();
    fn OBJ_PERMANENT();
    fn OBJ_VALID_ATTRIBUTES();
    fn PROCESSOR_NUMBER();
    fn QUAD();
    fn RTL_BALANCED_NODE();
    fn RTL_BALANCED_NODE_RESERVED_PARENT_MASK();
    fn RtlFirstEntrySList();
    fn RtlInitializeSListHead();
    fn RtlInterlockedFlushSList();
    fn RtlInterlockedPopEntrySList();
    fn RtlInterlockedPushEntrySList();
    fn RtlInterlockedPushListSListEx();
    fn RtlQueryDepthSList();
    fn SINGLE_LIST_ENTRY();
    fn SINGLE_LIST_ENTRY32();
    fn SLIST_ENTRY();
    fn SLIST_HEADER();
    fn STRING();
    fn STRING32();
    fn STRING64();
    fn SUITE_TYPE();
    fn TIMER_TYPE();
    fn WAIT_TYPE();
    fn WNF_STATE_NAME();
}
