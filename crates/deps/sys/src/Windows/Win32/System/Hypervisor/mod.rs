#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ApplyGuestMemoryFix();
    fn ApplyPendingSavedStateFileReplayLog();
    fn CallStackUnwind();
    fn FindSavedStateSymbolFieldInType();
    fn ForceActiveVirtualTrustLevel();
    fn ForceArchitecture();
    fn ForceNestedHostMode();
    fn ForcePagingMode();
    fn GetActiveVirtualTrustLevel();
    fn GetArchitecture();
    fn GetEnabledVirtualTrustLevels();
    fn GetGuestEnabledVirtualTrustLevels();
    fn GetGuestOsInfo();
    fn GetGuestPhysicalMemoryChunks();
    fn GetGuestRawSavedMemorySize();
    fn GetMemoryBlockCacheLimit();
    fn GetNestedVirtualizationMode();
    fn GetPagingMode();
    fn GetRegisterValue();
    fn GetSavedStateSymbolFieldInfo();
    fn GetSavedStateSymbolProviderHandle();
    fn GetSavedStateSymbolTypeSize();
    fn GetVpCount();
    fn GuestPhysicalAddressToRawSavedMemoryOffset();
    fn GuestVirtualAddressToPhysicalAddress();
    fn HdvCreateDeviceInstance();
    fn HdvCreateGuestMemoryAperture();
    fn HdvCreateSectionBackedMmioRange();
    fn HdvDeliverGuestInterrupt();
    fn HdvDestroyGuestMemoryAperture();
    fn HdvDestroySectionBackedMmioRange();
    fn HdvInitializeDeviceHost();
    fn HdvReadGuestMemory();
    fn HdvRegisterDoorbell();
    fn HdvTeardownDeviceHost();
    fn HdvUnregisterDoorbell();
    fn HdvWriteGuestMemory();
    fn InKernelSpace();
    fn IsActiveVirtualTrustLevelEnabled();
    fn IsNestedVirtualizationEnabled();
    fn LoadSavedStateFile();
    fn LoadSavedStateFiles();
    fn LoadSavedStateModuleSymbols();
    fn LoadSavedStateModuleSymbolsEx();
    fn LoadSavedStateSymbolProvider();
    fn LocateSavedStateFiles();
    fn ReadGuestPhysicalAddress();
    fn ReadGuestRawSavedMemory();
    fn ReadSavedStateGlobalVariable();
    fn ReleaseSavedStateFiles();
    fn ReleaseSavedStateSymbolProvider();
    fn ResolveSavedStateGlobalVariableAddress();
    fn ScanMemoryForDosImages();
    fn SetMemoryBlockCacheLimit();
    fn SetSavedStateSymbolProviderDebugInfoCallback();
    fn WHvAcceptPartitionMigration();
    fn WHvAdviseGpaRange();
    fn WHvAllocateVpciResource();
    fn WHvCancelPartitionMigration();
    fn WHvCancelRunVirtualProcessor();
    fn WHvCompletePartitionMigration();
    fn WHvCreateNotificationPort();
    fn WHvCreatePartition();
    fn WHvCreateTrigger();
    fn WHvCreateVirtualProcessor();
    fn WHvCreateVirtualProcessor2();
    fn WHvCreateVpciDevice();
    fn WHvDeleteNotificationPort();
    fn WHvDeletePartition();
    fn WHvDeleteTrigger();
    fn WHvDeleteVirtualProcessor();
    fn WHvDeleteVpciDevice();
    fn WHvEmulatorCreateEmulator();
    fn WHvEmulatorDestroyEmulator();
    fn WHvEmulatorTryIoEmulation();
    fn WHvEmulatorTryMmioEmulation();
    fn WHvGetCapability();
    fn WHvGetInterruptTargetVpSet();
    fn WHvGetPartitionCounters();
    fn WHvGetPartitionProperty();
    fn WHvGetVirtualProcessorCounters();
    fn WHvGetVirtualProcessorCpuidOutput();
    fn WHvGetVirtualProcessorInterruptControllerState();
    fn WHvGetVirtualProcessorInterruptControllerState2();
    fn WHvGetVirtualProcessorRegisters();
    fn WHvGetVirtualProcessorState();
    fn WHvGetVirtualProcessorXsaveState();
    fn WHvGetVpciDeviceInterruptTarget();
    fn WHvGetVpciDeviceNotification();
    fn WHvGetVpciDeviceProperty();
    fn WHvMapGpaRange();
    fn WHvMapGpaRange2();
    fn WHvMapVpciDeviceInterrupt();
    fn WHvMapVpciDeviceMmioRanges();
    fn WHvPostVirtualProcessorSynicMessage();
    fn WHvQueryGpaRangeDirtyBitmap();
    fn WHvReadGpaRange();
    fn WHvReadVpciDeviceRegister();
    fn WHvRegisterPartitionDoorbellEvent();
    fn WHvRequestInterrupt();
    fn WHvRequestVpciDeviceInterrupt();
    fn WHvResetPartition();
    fn WHvResumePartitionTime();
    fn WHvRetargetVpciDeviceInterrupt();
    fn WHvRunVirtualProcessor();
    fn WHvSetNotificationPortProperty();
    fn WHvSetPartitionProperty();
    fn WHvSetVirtualProcessorInterruptControllerState();
    fn WHvSetVirtualProcessorInterruptControllerState2();
    fn WHvSetVirtualProcessorRegisters();
    fn WHvSetVirtualProcessorState();
    fn WHvSetVirtualProcessorXsaveState();
    fn WHvSetVpciDevicePowerState();
    fn WHvSetupPartition();
    fn WHvSignalVirtualProcessorSynicEvent();
    fn WHvStartPartitionMigration();
    fn WHvSuspendPartitionTime();
    fn WHvTranslateGva();
    fn WHvUnmapGpaRange();
    fn WHvUnmapVpciDeviceInterrupt();
    fn WHvUnmapVpciDeviceMmioRanges();
    fn WHvUnregisterPartitionDoorbellEvent();
    fn WHvUpdateTriggerParameters();
    fn WHvWriteGpaRange();
    fn WHvWriteVpciDeviceRegister();
}
