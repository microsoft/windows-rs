#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn CallNtPowerInformation();
    fn CanUserWritePwrScheme();
    fn DeletePwrScheme();
    fn DevicePowerClose();
    fn DevicePowerEnumDevices();
    fn DevicePowerOpen();
    fn DevicePowerSetDeviceState();
    fn EnumPwrSchemes();
    fn GetActivePwrScheme();
    fn GetCurrentPowerPolicies();
    fn GetDevicePowerState();
    fn GetPwrCapabilities();
    fn GetPwrDiskSpindownRange();
    fn GetSystemPowerStatus();
    fn IsAdminOverrideActive();
    fn IsPwrHibernateAllowed();
    fn IsPwrShutdownAllowed();
    fn IsPwrSuspendAllowed();
    fn IsSystemResumeAutomatic();
    fn PowerCanRestoreIndividualDefaultPowerScheme();
    fn PowerClearRequest();
    fn PowerCreatePossibleSetting();
    fn PowerCreateRequest();
    fn PowerCreateSetting();
    fn PowerDeleteScheme();
    fn PowerDeterminePlatformRole();
    fn PowerDeterminePlatformRoleEx();
    fn PowerDuplicateScheme();
    fn PowerEnumerate();
    fn PowerGetActiveScheme();
    fn PowerImportPowerScheme();
    fn PowerIsSettingRangeDefined();
    fn PowerOpenSystemPowerKey();
    fn PowerOpenUserPowerKey();
    fn PowerReadACDefaultIndex();
    fn PowerReadACValue();
    fn PowerReadACValueIndex();
    fn PowerReadDCDefaultIndex();
    fn PowerReadDCValue();
    fn PowerReadDCValueIndex();
    fn PowerReadDescription();
    fn PowerReadFriendlyName();
    fn PowerReadIconResourceSpecifier();
    fn PowerReadPossibleDescription();
    fn PowerReadPossibleFriendlyName();
    fn PowerReadPossibleValue();
    fn PowerReadSettingAttributes();
    fn PowerReadValueIncrement();
    fn PowerReadValueMax();
    fn PowerReadValueMin();
    fn PowerReadValueUnitsSpecifier();
    fn PowerRegisterForEffectivePowerModeNotifications();
    fn PowerRegisterSuspendResumeNotification();
    fn PowerRemovePowerSetting();
    fn PowerReplaceDefaultPowerSchemes();
    fn PowerReportThermalEvent();
    fn PowerRestoreDefaultPowerSchemes();
    fn PowerRestoreIndividualDefaultPowerScheme();
    fn PowerSetActiveScheme();
    fn PowerSetRequest();
    fn PowerSettingAccessCheck();
    fn PowerSettingAccessCheckEx();
    fn PowerSettingRegisterNotification();
    fn PowerSettingUnregisterNotification();
    fn PowerUnregisterFromEffectivePowerModeNotifications();
    fn PowerUnregisterSuspendResumeNotification();
    fn PowerWriteACDefaultIndex();
    fn PowerWriteACValueIndex();
    fn PowerWriteDCDefaultIndex();
    fn PowerWriteDCValueIndex();
    fn PowerWriteDescription();
    fn PowerWriteFriendlyName();
    fn PowerWriteIconResourceSpecifier();
    fn PowerWritePossibleDescription();
    fn PowerWritePossibleFriendlyName();
    fn PowerWritePossibleValue();
    fn PowerWriteSettingAttributes();
    fn PowerWriteValueIncrement();
    fn PowerWriteValueMax();
    fn PowerWriteValueMin();
    fn PowerWriteValueUnitsSpecifier();
    fn ReadGlobalPwrPolicy();
    fn ReadProcessorPwrScheme();
    fn ReadPwrScheme();
    fn RegisterPowerSettingNotification();
    fn RegisterSuspendResumeNotification();
    fn RequestWakeupLatency();
    fn SetActivePwrScheme();
    fn SetSuspendState();
    fn SetSystemPowerState();
    fn SetThreadExecutionState();
    fn UnregisterPowerSettingNotification();
    fn UnregisterSuspendResumeNotification();
    fn ValidatePowerPolicies();
    fn WriteGlobalPwrPolicy();
    fn WriteProcessorPwrScheme();
    fn WritePwrScheme();
}
