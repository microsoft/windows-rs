#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn HcnCloseEndpoint();
    fn HcnCloseGuestNetworkService();
    fn HcnCloseLoadBalancer();
    fn HcnCloseNamespace();
    fn HcnCloseNetwork();
    fn HcnCreateEndpoint();
    fn HcnCreateGuestNetworkService();
    fn HcnCreateLoadBalancer();
    fn HcnCreateNamespace();
    fn HcnCreateNetwork();
    fn HcnDeleteEndpoint();
    fn HcnDeleteGuestNetworkService();
    fn HcnDeleteLoadBalancer();
    fn HcnDeleteNamespace();
    fn HcnDeleteNetwork();
    fn HcnEnumerateEndpoints();
    fn HcnEnumerateGuestNetworkPortReservations();
    fn HcnEnumerateLoadBalancers();
    fn HcnEnumerateNamespaces();
    fn HcnEnumerateNetworks();
    fn HcnFreeGuestNetworkPortReservations();
    fn HcnModifyEndpoint();
    fn HcnModifyGuestNetworkService();
    fn HcnModifyLoadBalancer();
    fn HcnModifyNamespace();
    fn HcnModifyNetwork();
    fn HcnOpenEndpoint();
    fn HcnOpenLoadBalancer();
    fn HcnOpenNamespace();
    fn HcnOpenNetwork();
    fn HcnQueryEndpointProperties();
    fn HcnQueryLoadBalancerProperties();
    fn HcnQueryNamespaceProperties();
    fn HcnQueryNetworkProperties();
    fn HcnRegisterGuestNetworkServiceCallback();
    fn HcnRegisterServiceCallback();
    fn HcnReleaseGuestNetworkServicePortReservationHandle();
    fn HcnReserveGuestNetworkServicePort();
    fn HcnReserveGuestNetworkServicePortRange();
    fn HcnUnregisterGuestNetworkServiceCallback();
    fn HcnUnregisterServiceCallback();
}
