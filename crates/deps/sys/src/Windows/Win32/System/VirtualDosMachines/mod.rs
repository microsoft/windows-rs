#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn DBG_ATTACH();
    fn DBG_BREAK();
    fn DBG_DIVOVERFLOW();
    fn DBG_DLLSTART();
    fn DBG_DLLSTOP();
    fn DBG_GPFAULT();
    fn DBG_GPFAULT2();
    fn DBG_INIT();
    fn DBG_INSTRFAULT();
    fn DBG_MODFREE();
    fn DBG_MODLOAD();
    fn DBG_MODMOVE();
    fn DBG_SEGFREE();
    fn DBG_SEGLOAD();
    fn DBG_SEGMOVE();
    fn DBG_SINGLESTEP();
    fn DBG_STACKFAULT();
    fn DBG_TASKSTART();
    fn DBG_TASKSTOP();
    fn DBG_TEMPBP();
    fn DBG_TOOLHELP();
    fn DBG_WOWINIT();
    fn DEBUGEVENTPROC();
    fn GD_ACCELERATORS();
    fn GD_BITMAP();
    fn GD_CURSOR();
    fn GD_CURSORCOMPONENT();
    fn GD_DIALOG();
    fn GD_ERRTABLE();
    fn GD_FONT();
    fn GD_FONTDIR();
    fn GD_ICON();
    fn GD_ICONCOMPONENT();
    fn GD_MAX_RESOURCE();
    fn GD_MENU();
    fn GD_NAMETABLE();
    fn GD_RCDATA();
    fn GD_STRING();
    fn GD_USERDEFINED();
    fn GLOBALENTRY();
    fn GLOBAL_ALL();
    fn GLOBAL_FREE();
    fn GLOBAL_LRU();
    fn GT_BURGERMASTER();
    fn GT_CODE();
    fn GT_DATA();
    fn GT_DGROUP();
    fn GT_FREE();
    fn GT_INTERNAL();
    fn GT_MODULE();
    fn GT_RESOURCE();
    fn GT_SENTINEL();
    fn GT_TASK();
    fn GT_UNKNOWN();
    fn IMAGE_NOTE();
    fn MAX_MODULE_NAME();
    fn MAX_PATH16();
    fn MODULEENTRY();
    fn PROCESSENUMPROC();
    fn SEGMENT_NOTE();
    fn SN_CODE();
    fn SN_DATA();
    fn SN_V86();
    fn STATUS_VDM_EVENT();
    fn TASKENUMPROC();
    fn TASKENUMPROCEX();
    fn TEMP_BP_NOTE();
    fn V86FLAGS_ALIGNMENT();
    fn V86FLAGS_AUXCARRY();
    fn V86FLAGS_CARRY();
    fn V86FLAGS_DIRECTION();
    fn V86FLAGS_INTERRUPT();
    fn V86FLAGS_IOPL();
    fn V86FLAGS_IOPL_BITS();
    fn V86FLAGS_OVERFLOW();
    fn V86FLAGS_PARITY();
    fn V86FLAGS_RESUME();
    fn V86FLAGS_SIGN();
    fn V86FLAGS_TRACE();
    fn V86FLAGS_V86();
    fn V86FLAGS_ZERO();
    fn VDMADDR_PM16();
    fn VDMADDR_PM32();
    fn VDMADDR_V86();
    fn VDMBREAKTHREADPROC();
    fn VDMCONTEXT();
    fn VDMCONTEXT_WITHOUT_XSAVE();
    fn VDMCONTEXT_i386();
    fn VDMCONTEXT_i486();
    fn VDMDBG_BREAK_DEBUGGER();
    fn VDMDBG_BREAK_DIVIDEBYZERO();
    fn VDMDBG_BREAK_DOSTASK();
    fn VDMDBG_BREAK_EXCEPTIONS();
    fn VDMDBG_BREAK_LOADDLL();
    fn VDMDBG_BREAK_WOWTASK();
    fn VDMDBG_INITIAL_FLAGS();
    fn VDMDBG_MAX_SYMBOL_BUFFER();
    fn VDMDBG_TRACE_HISTORY();
    fn VDMDETECTWOWPROC();
    fn VDMENUMPROCESSWOWPROC();
    fn VDMENUMTASKWOWEXPROC();
    fn VDMENUMTASKWOWPROC();
    fn VDMEVENT_ALLFLAGS();
    fn VDMEVENT_NEEDS_INTERACTIVE();
    fn VDMEVENT_PE();
    fn VDMEVENT_PM16();
    fn VDMEVENT_V86();
    fn VDMEVENT_VERBOSE();
    fn VDMGETADDREXPRESSIONPROC();
    fn VDMGETCONTEXTPROC();
    fn VDMGETDBGFLAGSPROC();
    fn VDMGETMODULESELECTORPROC();
    fn VDMGETPOINTERPROC();
    fn VDMGETSEGMENTINFOPROC();
    fn VDMGETSELECTORMODULEPROC();
    fn VDMGETSYMBOLPROC();
    fn VDMGETTHREADSELECTORENTRYPROC();
    fn VDMGLOBALFIRSTPROC();
    fn VDMGLOBALNEXTPROC();
    fn VDMISMODULELOADEDPROC();
    fn VDMKILLWOWPROC();
    fn VDMLDT_ENTRY();
    fn VDMMODULEFIRSTPROC();
    fn VDMMODULENEXTPROC();
    fn VDMPROCESSEXCEPTIONPROC();
    fn VDMSETCONTEXTPROC();
    fn VDMSETDBGFLAGSPROC();
    fn VDMSTARTTASKINWOWPROC();
    fn VDMTERMINATETASKINWOWPROC();
    fn VDM_KGDT_R3_CODE();
    fn VDM_MAXIMUM_SUPPORTED_EXTENSION();
    fn VDM_SEGINFO();
}
