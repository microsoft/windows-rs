#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    #[doc = "*Required features: `Win32_System_Antimalware`*"]
    pub fn AmsiCloseSession(amsicontext: HAMSICONTEXT, amsisession: HAMSISESSION);
    #[doc = "*Required features: `Win32_System_Antimalware`, `Win32_Foundation`*"]
    #[cfg(feature = "Win32_Foundation")]
    pub fn AmsiInitialize(appname: super::super::Foundation::PWSTR, amsicontext: *mut HAMSICONTEXT) -> ::windows::runtime::HRESULT;
    #[doc = "*Required features: `Win32_System_Antimalware`, `Win32_Foundation`*"]
    #[cfg(feature = "Win32_Foundation")]
    pub fn AmsiNotifyOperation(amsicontext: HAMSICONTEXT, buffer: *const ::core::ffi::c_void, length: u32, contentname: super::super::Foundation::PWSTR, result: *mut AMSI_RESULT) -> ::windows::runtime::HRESULT;
    #[doc = "*Required features: `Win32_System_Antimalware`*"]
    pub fn AmsiOpenSession(amsicontext: HAMSICONTEXT, amsisession: *mut HAMSISESSION) -> ::windows::runtime::HRESULT;
    #[doc = "*Required features: `Win32_System_Antimalware`, `Win32_Foundation`*"]
    #[cfg(feature = "Win32_Foundation")]
    pub fn AmsiScanBuffer(amsicontext: HAMSICONTEXT, buffer: *const ::core::ffi::c_void, length: u32, contentname: super::super::Foundation::PWSTR, amsisession: HAMSISESSION, result: *mut AMSI_RESULT) -> ::windows::runtime::HRESULT;
    #[doc = "*Required features: `Win32_System_Antimalware`, `Win32_Foundation`*"]
    #[cfg(feature = "Win32_Foundation")]
    pub fn AmsiScanString(amsicontext: HAMSICONTEXT, string: super::super::Foundation::PWSTR, contentname: super::super::Foundation::PWSTR, amsisession: HAMSISESSION, result: *mut AMSI_RESULT) -> ::windows::runtime::HRESULT;
    #[doc = "*Required features: `Win32_System_Antimalware`*"]
    pub fn AmsiUninitialize(amsicontext: HAMSICONTEXT);
    #[doc = "*Required features: `Win32_System_Antimalware`, `Win32_Foundation`*"]
    #[cfg(feature = "Win32_Foundation")]
    pub fn InstallELAMCertificateInfo(elamfile: super::super::Foundation::HANDLE) -> super::super::Foundation::BOOL;
}
