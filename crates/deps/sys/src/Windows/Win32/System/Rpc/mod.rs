#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ARRAY_INFO();
    fn BinaryParam();
    fn CLIENT_CALL_RETURN();
    fn COMM_FAULT_OFFSETS();
    fn CS_TAG_GETTING_ROUTINE();
    fn CS_TYPE_FROM_NETCS_ROUTINE();
    fn CS_TYPE_LOCAL_SIZE_ROUTINE();
    fn CS_TYPE_NET_SIZE_ROUTINE();
    fn CS_TYPE_TO_NETCS_ROUTINE();
    fn DCE_C_ERROR_STRING_LEN();
    fn DceErrorInqTextA();
    fn DceErrorInqTextW();
    fn EEInfoGCCOM();
    fn EEInfoGCFRS();
    fn EEInfoNextRecordsMissing();
    fn EEInfoPreviousRecordsMissing();
    fn EEInfoUseFileTime();
    fn EXPR_EVAL();
    fn EXPR_TOKEN();
    fn ExtendedErrorParamTypes();
    fn FULL_PTR_XLAT_TABLES();
    fn GENERIC_BINDING_INFO();
    fn GENERIC_BINDING_ROUTINE();
    fn GENERIC_BINDING_ROUTINE_PAIR();
    fn GENERIC_UNBIND_ROUTINE();
    fn GROUP_NAME_SYNTAX();
    fn IDL_CS_CONVERT();
    fn INVALID_FRAGMENT_ID();
    fn IUnknown_AddRef_Proxy();
    fn IUnknown_QueryInterface_Proxy();
    fn IUnknown_Release_Proxy();
    fn I_RpcAllocate();
    fn I_RpcAsyncAbortCall();
    fn I_RpcAsyncSetHandle();
    fn I_RpcBindingCopy();
    fn I_RpcBindingCreateNP();
    fn I_RpcBindingHandleToAsyncHandle();
    fn I_RpcBindingInqClientTokenAttributes();
    fn I_RpcBindingInqDynamicEndpointA();
    fn I_RpcBindingInqDynamicEndpointW();
    fn I_RpcBindingInqLocalClientPID();
    fn I_RpcBindingInqMarshalledTargetInfo();
    fn I_RpcBindingInqSecurityContext();
    fn I_RpcBindingInqSecurityContextKeyInfo();
    fn I_RpcBindingInqTransportType();
    fn I_RpcBindingInqWireIdForSnego();
    fn I_RpcBindingIsClientLocal();
    fn I_RpcBindingIsServerLocal();
    fn I_RpcBindingSetPrivateOption();
    fn I_RpcBindingToStaticStringBindingW();
    fn I_RpcClearMutex();
    fn I_RpcDeleteMutex();
    fn I_RpcExceptionFilter();
    fn I_RpcFree();
    fn I_RpcFreeBuffer();
    fn I_RpcFreeCalloutStateFn();
    fn I_RpcFreePipeBuffer();
    fn I_RpcGetBuffer();
    fn I_RpcGetBufferWithObject();
    fn I_RpcGetCurrentCallHandle();
    fn I_RpcGetDefaultSD();
    fn I_RpcGetExtendedError();
    fn I_RpcIfInqTransferSyntaxes();
    fn I_RpcMapWin32Status();
    fn I_RpcMgmtEnableDedicatedThreadPool();
    fn I_RpcNegotiateTransferSyntax();
    fn I_RpcNsBindingSetEntryNameA();
    fn I_RpcNsBindingSetEntryNameW();
    fn I_RpcNsGetBuffer();
    fn I_RpcNsInterfaceExported();
    fn I_RpcNsInterfaceUnexported();
    fn I_RpcNsRaiseException();
    fn I_RpcNsSendReceive();
    fn I_RpcOpenClientProcess();
    fn I_RpcPauseExecution();
    fn I_RpcPerformCalloutFn();
    fn I_RpcProxyCallbackInterface();
    fn I_RpcProxyFilterIfFn();
    fn I_RpcProxyGetClientAddressFn();
    fn I_RpcProxyGetClientSessionAndResourceUUID();
    fn I_RpcProxyGetConnectionTimeoutFn();
    fn I_RpcProxyIsValidMachineFn();
    fn I_RpcProxyUpdatePerfCounterBackendServerFn();
    fn I_RpcProxyUpdatePerfCounterFn();
    fn I_RpcReBindBuffer();
    fn I_RpcReallocPipeBuffer();
    fn I_RpcReceive();
    fn I_RpcRecordCalloutFailure();
    fn I_RpcRequestMutex();
    fn I_RpcSend();
    fn I_RpcSendReceive();
    fn I_RpcServerCheckClientRestriction();
    fn I_RpcServerDisableExceptionFilter();
    fn I_RpcServerGetAssociationID();
    fn I_RpcServerInqAddressChangeFn();
    fn I_RpcServerInqLocalConnAddress();
    fn I_RpcServerInqRemoteConnAddress();
    fn I_RpcServerInqTransportType();
    fn I_RpcServerRegisterForwardFunction();
    fn I_RpcServerSetAddressChangeFn();
    fn I_RpcServerStartService();
    fn I_RpcServerSubscribeForDisconnectNotification();
    fn I_RpcServerSubscribeForDisconnectNotification2();
    fn I_RpcServerUnsubscribeForDisconnectNotification();
    fn I_RpcServerUseProtseq2A();
    fn I_RpcServerUseProtseq2W();
    fn I_RpcServerUseProtseqEp2A();
    fn I_RpcServerUseProtseqEp2W();
    fn I_RpcSessionStrictContextHandle();
    fn I_RpcSsDontSerializeContext();
    fn I_RpcSystemHandleTypeSpecificWork();
    fn I_RpcTurnOnEEInfoPropagation();
    fn I_UuidCreate();
    fn LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION();
    fn MALLOC_FREE_STRUCT();
    fn MIDL_ES_ALLOC();
    fn MIDL_ES_CODE();
    fn MIDL_ES_HANDLE_STYLE();
    fn MIDL_ES_READ();
    fn MIDL_ES_WRITE();
    fn MIDL_FORMAT_STRING();
    fn MIDL_INTERCEPTION_INFO();
    fn MIDL_INTERFACE_METHOD_PROPERTIES();
    fn MIDL_METHOD_PROPERTY();
    fn MIDL_METHOD_PROPERTY_MAP();
    fn MIDL_SERVER_INFO();
    fn MIDL_STUBLESS_PROXY_INFO();
    fn MIDL_STUB_DESC();
    fn MIDL_STUB_MESSAGE();
    fn MIDL_SYNTAX_INFO();
    fn MIDL_TYPE_PICKLING_INFO();
    fn MIDL_WINRT_TYPE_SERIALIZATION_INFO();
    fn MIDL_WINRT_TYPE_SERIALIZATION_INFO_CURRENT_VERSION();
    fn MaxNumberOfEEInfoParams();
    fn MesBufferHandleReset();
    fn MesDecodeBufferHandleCreate();
    fn MesDecodeIncrementalHandleCreate();
    fn MesEncodeDynBufferHandleCreate();
    fn MesEncodeFixedBufferHandleCreate();
    fn MesEncodeIncrementalHandleCreate();
    fn MesHandleFree();
    fn MesIncrementalHandleReset();
    fn MesInqProcEncodingId();
    fn MidlInterceptionInfoVersionOne();
    fn MidlWinrtTypeSerializationInfoVersionOne();
    fn NDR64_ARRAY_ELEMENT_INFO();
    fn NDR64_ARRAY_FLAGS();
    fn NDR64_BINDINGS();
    fn NDR64_BIND_AND_NOTIFY_EXTENSION();
    fn NDR64_BIND_CONTEXT();
    fn NDR64_BIND_GENERIC();
    fn NDR64_BIND_PRIMITIVE();
    fn NDR64_BOGUS_ARRAY_HEADER_FORMAT();
    fn NDR64_BOGUS_STRUCTURE_HEADER_FORMAT();
    fn NDR64_BUFFER_ALIGN_FORMAT();
    fn NDR64_CONFORMANT_STRING_FORMAT();
    fn NDR64_CONF_ARRAY_HEADER_FORMAT();
    fn NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT();
    fn NDR64_CONF_STRUCTURE_HEADER_FORMAT();
    fn NDR64_CONF_VAR_ARRAY_HEADER_FORMAT();
    fn NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT();
    fn NDR64_CONSTANT_IID_FORMAT();
    fn NDR64_CONTEXT_HANDLE_FLAGS();
    fn NDR64_CONTEXT_HANDLE_FORMAT();
    fn NDR64_EMBEDDED_COMPLEX_FORMAT();
    fn NDR64_ENCAPSULATED_UNION();
    fn NDR64_EXPR_CONST32();
    fn NDR64_EXPR_CONST64();
    fn NDR64_EXPR_NOOP();
    fn NDR64_EXPR_OPERATOR();
    fn NDR64_EXPR_VAR();
    fn NDR64_FC_AUTO_HANDLE();
    fn NDR64_FC_BIND_GENERIC();
    fn NDR64_FC_BIND_PRIMITIVE();
    fn NDR64_FC_CALLBACK_HANDLE();
    fn NDR64_FC_EXPLICIT_HANDLE();
    fn NDR64_FC_NO_HANDLE();
    fn NDR64_FIXED_REPEAT_FORMAT();
    fn NDR64_FIX_ARRAY_HEADER_FORMAT();
    fn NDR64_IID_FLAGS();
    fn NDR64_IID_FORMAT();
    fn NDR64_MEMPAD_FORMAT();
    fn NDR64_NON_CONFORMANT_STRING_FORMAT();
    fn NDR64_NON_ENCAPSULATED_UNION();
    fn NDR64_NO_REPEAT_FORMAT();
    fn NDR64_PARAM_FLAGS();
    fn NDR64_PARAM_FORMAT();
    fn NDR64_PIPE_FLAGS();
    fn NDR64_PIPE_FORMAT();
    fn NDR64_POINTER_FORMAT();
    fn NDR64_POINTER_INSTANCE_HEADER_FORMAT();
    fn NDR64_POINTER_REPEAT_FLAGS();
    fn NDR64_PROC_FLAGS();
    fn NDR64_PROC_FORMAT();
    fn NDR64_RANGED_STRING_FORMAT();
    fn NDR64_RANGE_FORMAT();
    fn NDR64_RANGE_PIPE_FORMAT();
    fn NDR64_REPEAT_FORMAT();
    fn NDR64_RPC_FLAGS();
    fn NDR64_SIMPLE_MEMBER_FORMAT();
    fn NDR64_SIMPLE_REGION_FORMAT();
    fn NDR64_SIZED_CONFORMANT_STRING_FORMAT();
    fn NDR64_STRING_FLAGS();
    fn NDR64_STRING_HEADER_FORMAT();
    fn NDR64_STRUCTURE_FLAGS();
    fn NDR64_STRUCTURE_HEADER_FORMAT();
    fn NDR64_SYSTEM_HANDLE_FORMAT();
    fn NDR64_TRANSMIT_AS_FLAGS();
    fn NDR64_TRANSMIT_AS_FORMAT();
    fn NDR64_TYPE_STRICT_CONTEXT_HANDLE();
    fn NDR64_UNION_ARM();
    fn NDR64_UNION_ARM_SELECTOR();
    fn NDR64_USER_MARSHAL_FLAGS();
    fn NDR64_USER_MARSHAL_FORMAT();
    fn NDR64_VAR_ARRAY_HEADER_FORMAT();
    fn NDRCContextBinding();
    fn NDRCContextMarshall();
    fn NDRCContextUnmarshall();
    fn NDRSContextMarshall();
    fn NDRSContextMarshall2();
    fn NDRSContextMarshallEx();
    fn NDRSContextUnmarshall();
    fn NDRSContextUnmarshall2();
    fn NDRSContextUnmarshallEx();
    fn NDR_ALLOC_ALL_NODES_CONTEXT();
    fn NDR_CS_ROUTINES();
    fn NDR_CS_SIZE_CONVERT_ROUTINES();
    fn NDR_CUSTOM_OR_DEFAULT_ALLOCATOR();
    fn NDR_DEFAULT_ALLOCATOR();
    fn NDR_EXPR_DESC();
    fn NDR_NOTIFY2_ROUTINE();
    fn NDR_NOTIFY_ROUTINE();
    fn NDR_POINTER_QUEUE_STATE();
    fn NDR_RUNDOWN();
    fn NDR_SCONTEXT_1();
    fn NDR_USER_MARSHAL_INFO();
    fn NDR_USER_MARSHAL_INFO_LEVEL1();
    fn NT351_INTERFACE_SIZE();
    fn Ndr64AsyncClientCall();
    fn Ndr64AsyncServerCall64();
    fn Ndr64AsyncServerCallAll();
    fn Ndr64DcomAsyncClientCall();
    fn Ndr64DcomAsyncStubCall();
    fn NdrAllocate();
    fn NdrAsyncClientCall();
    fn NdrAsyncServerCall();
    fn NdrByteCountPointerBufferSize();
    fn NdrByteCountPointerFree();
    fn NdrByteCountPointerMarshall();
    fn NdrByteCountPointerUnmarshall();
    fn NdrClearOutParameters();
    fn NdrClientCall2();
    fn NdrClientCall3();
    fn NdrClientContextMarshall();
    fn NdrClientContextUnmarshall();
    fn NdrClientInitialize();
    fn NdrClientInitializeNew();
    fn NdrComplexArrayBufferSize();
    fn NdrComplexArrayFree();
    fn NdrComplexArrayMarshall();
    fn NdrComplexArrayMemorySize();
    fn NdrComplexArrayUnmarshall();
    fn NdrComplexStructBufferSize();
    fn NdrComplexStructFree();
    fn NdrComplexStructMarshall();
    fn NdrComplexStructMemorySize();
    fn NdrComplexStructUnmarshall();
    fn NdrConformantArrayBufferSize();
    fn NdrConformantArrayFree();
    fn NdrConformantArrayMarshall();
    fn NdrConformantArrayMemorySize();
    fn NdrConformantArrayUnmarshall();
    fn NdrConformantStringBufferSize();
    fn NdrConformantStringMarshall();
    fn NdrConformantStringMemorySize();
    fn NdrConformantStringUnmarshall();
    fn NdrConformantStructBufferSize();
    fn NdrConformantStructFree();
    fn NdrConformantStructMarshall();
    fn NdrConformantStructMemorySize();
    fn NdrConformantStructUnmarshall();
    fn NdrConformantVaryingArrayBufferSize();
    fn NdrConformantVaryingArrayFree();
    fn NdrConformantVaryingArrayMarshall();
    fn NdrConformantVaryingArrayMemorySize();
    fn NdrConformantVaryingArrayUnmarshall();
    fn NdrConformantVaryingStructBufferSize();
    fn NdrConformantVaryingStructFree();
    fn NdrConformantVaryingStructMarshall();
    fn NdrConformantVaryingStructMemorySize();
    fn NdrConformantVaryingStructUnmarshall();
    fn NdrContextHandleInitialize();
    fn NdrContextHandleSize();
    fn NdrConvert();
    fn NdrConvert2();
    fn NdrCorrelationFree();
    fn NdrCorrelationInitialize();
    fn NdrCorrelationPass();
    fn NdrCreateServerInterfaceFromStub();
    fn NdrDcomAsyncClientCall();
    fn NdrDcomAsyncStubCall();
    fn NdrEncapsulatedUnionBufferSize();
    fn NdrEncapsulatedUnionFree();
    fn NdrEncapsulatedUnionMarshall();
    fn NdrEncapsulatedUnionMemorySize();
    fn NdrEncapsulatedUnionUnmarshall();
    fn NdrFixedArrayBufferSize();
    fn NdrFixedArrayFree();
    fn NdrFixedArrayMarshall();
    fn NdrFixedArrayMemorySize();
    fn NdrFixedArrayUnmarshall();
    fn NdrFreeBuffer();
    fn NdrFullPointerXlatFree();
    fn NdrFullPointerXlatInit();
    fn NdrGetBuffer();
    fn NdrGetDcomProtocolVersion();
    fn NdrGetUserMarshalInfo();
    fn NdrInterfacePointerBufferSize();
    fn NdrInterfacePointerFree();
    fn NdrInterfacePointerMarshall();
    fn NdrInterfacePointerMemorySize();
    fn NdrInterfacePointerUnmarshall();
    fn NdrMapCommAndFaultStatus();
    fn NdrMesProcEncodeDecode();
    fn NdrMesProcEncodeDecode2();
    fn NdrMesProcEncodeDecode3();
    fn NdrMesSimpleTypeAlignSize();
    fn NdrMesSimpleTypeAlignSizeAll();
    fn NdrMesSimpleTypeDecode();
    fn NdrMesSimpleTypeDecodeAll();
    fn NdrMesSimpleTypeEncode();
    fn NdrMesSimpleTypeEncodeAll();
    fn NdrMesTypeAlignSize();
    fn NdrMesTypeAlignSize2();
    fn NdrMesTypeAlignSize3();
    fn NdrMesTypeDecode();
    fn NdrMesTypeDecode2();
    fn NdrMesTypeDecode3();
    fn NdrMesTypeEncode();
    fn NdrMesTypeEncode2();
    fn NdrMesTypeEncode3();
    fn NdrMesTypeFree2();
    fn NdrMesTypeFree3();
    fn NdrNonConformantStringBufferSize();
    fn NdrNonConformantStringMarshall();
    fn NdrNonConformantStringMemorySize();
    fn NdrNonConformantStringUnmarshall();
    fn NdrNonEncapsulatedUnionBufferSize();
    fn NdrNonEncapsulatedUnionFree();
    fn NdrNonEncapsulatedUnionMarshall();
    fn NdrNonEncapsulatedUnionMemorySize();
    fn NdrNonEncapsulatedUnionUnmarshall();
    fn NdrNsGetBuffer();
    fn NdrNsSendReceive();
    fn NdrOleAllocate();
    fn NdrOleFree();
    fn NdrPartialIgnoreClientBufferSize();
    fn NdrPartialIgnoreClientMarshall();
    fn NdrPartialIgnoreServerInitialize();
    fn NdrPartialIgnoreServerUnmarshall();
    fn NdrPointerBufferSize();
    fn NdrPointerFree();
    fn NdrPointerMarshall();
    fn NdrPointerMemorySize();
    fn NdrPointerUnmarshall();
    fn NdrRangeUnmarshall();
    fn NdrRpcSmClientAllocate();
    fn NdrRpcSmClientFree();
    fn NdrRpcSmSetClientToOsf();
    fn NdrRpcSsDefaultAllocate();
    fn NdrRpcSsDefaultFree();
    fn NdrRpcSsDisableAllocate();
    fn NdrRpcSsEnableAllocate();
    fn NdrSendReceive();
    fn NdrServerCall2();
    fn NdrServerCallAll();
    fn NdrServerCallNdr64();
    fn NdrServerContextMarshall();
    fn NdrServerContextNewMarshall();
    fn NdrServerContextNewUnmarshall();
    fn NdrServerContextUnmarshall();
    fn NdrServerInitialize();
    fn NdrServerInitializeMarshall();
    fn NdrServerInitializeNew();
    fn NdrServerInitializePartial();
    fn NdrServerInitializeUnmarshall();
    fn NdrSimpleStructBufferSize();
    fn NdrSimpleStructFree();
    fn NdrSimpleStructMarshall();
    fn NdrSimpleStructMemorySize();
    fn NdrSimpleStructUnmarshall();
    fn NdrSimpleTypeMarshall();
    fn NdrSimpleTypeUnmarshall();
    fn NdrStubCall2();
    fn NdrStubCall3();
    fn NdrUserMarshalBufferSize();
    fn NdrUserMarshalFree();
    fn NdrUserMarshalMarshall();
    fn NdrUserMarshalMemorySize();
    fn NdrUserMarshalSimpleTypeConvert();
    fn NdrUserMarshalUnmarshall();
    fn NdrVaryingArrayBufferSize();
    fn NdrVaryingArrayFree();
    fn NdrVaryingArrayMarshall();
    fn NdrVaryingArrayMemorySize();
    fn NdrVaryingArrayUnmarshall();
    fn NdrXmitOrRepAsBufferSize();
    fn NdrXmitOrRepAsFree();
    fn NdrXmitOrRepAsMarshall();
    fn NdrXmitOrRepAsMemorySize();
    fn NdrXmitOrRepAsUnmarshall();
    fn PFN_RPCNOTIFICATION_ROUTINE();
    fn PROXY_PHASE();
    fn PRPC_RUNDOWN();
    fn RDR_CALLOUT_STATE();
    fn RPCFLG_ACCESSIBILITY_BIT1();
    fn RPCFLG_ACCESSIBILITY_BIT2();
    fn RPCFLG_ACCESS_LOCAL();
    fn RPCFLG_ASYNCHRONOUS();
    fn RPCFLG_AUTO_COMPLETE();
    fn RPCFLG_HAS_CALLBACK();
    fn RPCFLG_HAS_GUARANTEE();
    fn RPCFLG_HAS_MULTI_SYNTAXES();
    fn RPCFLG_INPUT_SYNCHRONOUS();
    fn RPCFLG_LOCAL_CALL();
    fn RPCFLG_MESSAGE();
    fn RPCFLG_NDR64_CONTAINS_ARM_LAYOUT();
    fn RPCFLG_NON_NDR();
    fn RPCFLG_SENDER_WAITING_FOR_REPLY();
    fn RPCFLG_WINRT_REMOTE_ASYNC();
    fn RPCLT_PDU_FILTER_FUNC();
    fn RPC_ADDRESS_CHANGE_FN();
    fn RPC_ADDRESS_CHANGE_TYPE();
    fn RPC_ASYNC_EVENT();
    fn RPC_ASYNC_NOTIFICATION_INFO();
    fn RPC_ASYNC_STATE();
    fn RPC_AUTH_KEY_RETRIEVAL_FN();
    fn RPC_BHO_EXCLUSIVE_AND_GUARANTEED();
    fn RPC_BHT_OBJECT_UUID_VALID();
    fn RPC_BINDING_HANDLE_OPTIONS_FLAGS();
    fn RPC_BINDING_HANDLE_OPTIONS_V1();
    fn RPC_BINDING_HANDLE_SECURITY_V1_A();
    fn RPC_BINDING_HANDLE_SECURITY_V1_W();
    fn RPC_BINDING_HANDLE_TEMPLATE_V1_A();
    fn RPC_BINDING_HANDLE_TEMPLATE_V1_W();
    fn RPC_BINDING_VECTOR();
    fn RPC_BLOCKING_FN();
    fn RPC_BUFFER_ASYNC();
    fn RPC_BUFFER_COMPLETE();
    fn RPC_BUFFER_EXTRA();
    fn RPC_BUFFER_NONOTIFY();
    fn RPC_BUFFER_PARTIAL();
    fn RPC_CALL_ATTRIBUTES_V1_A();
    fn RPC_CALL_ATTRIBUTES_V1_W();
    fn RPC_CALL_ATTRIBUTES_V2_A();
    fn RPC_CALL_ATTRIBUTES_V2_W();
    fn RPC_CALL_ATTRIBUTES_V3_A();
    fn RPC_CALL_ATTRIBUTES_V3_W();
    fn RPC_CALL_ATTRIBUTES_VERSION();
    fn RPC_CALL_LOCAL_ADDRESS_V1();
    fn RPC_CALL_STATUS_CANCELLED();
    fn RPC_CALL_STATUS_DISCONNECTED();
    fn RPC_CLIENT_ALLOC();
    fn RPC_CLIENT_FREE();
    fn RPC_CLIENT_INFORMATION1();
    fn RPC_CLIENT_INTERFACE();
    fn RPC_CONTEXT_HANDLE_DEFAULT_FLAGS();
    fn RPC_CONTEXT_HANDLE_DONT_SERIALIZE();
    fn RPC_CONTEXT_HANDLE_FLAGS();
    fn RPC_CONTEXT_HANDLE_SERIALIZE();
    fn RPC_C_AUTHN_CLOUD_AP();
    fn RPC_C_AUTHN_DCE_PRIVATE();
    fn RPC_C_AUTHN_DCE_PUBLIC();
    fn RPC_C_AUTHN_DEC_PUBLIC();
    fn RPC_C_AUTHN_DEFAULT();
    fn RPC_C_AUTHN_DIGEST();
    fn RPC_C_AUTHN_DPA();
    fn RPC_C_AUTHN_GSS_KERBEROS();
    fn RPC_C_AUTHN_GSS_NEGOTIATE();
    fn RPC_C_AUTHN_GSS_SCHANNEL();
    fn RPC_C_AUTHN_INFO_TYPE();
    fn RPC_C_AUTHN_KERNEL();
    fn RPC_C_AUTHN_LIVEXP_SSP();
    fn RPC_C_AUTHN_LIVE_SSP();
    fn RPC_C_AUTHN_MQ();
    fn RPC_C_AUTHN_MSN();
    fn RPC_C_AUTHN_MSONLINE();
    fn RPC_C_AUTHN_NEGO_EXTENDER();
    fn RPC_C_AUTHN_NONE();
    fn RPC_C_AUTHN_PKU2U();
    fn RPC_C_AUTHN_WINNT();
    fn RPC_C_AUTHZ_DCE();
    fn RPC_C_AUTHZ_DEFAULT();
    fn RPC_C_AUTHZ_NAME();
    fn RPC_C_AUTHZ_NONE();
    fn RPC_C_BINDING_DEFAULT_TIMEOUT();
    fn RPC_C_BINDING_INFINITE_TIMEOUT();
    fn RPC_C_BINDING_MAX_TIMEOUT();
    fn RPC_C_BINDING_MIN_TIMEOUT();
    fn RPC_C_BIND_TO_ALL_NICS();
    fn RPC_C_CANCEL_INFINITE_TIMEOUT();
    fn RPC_C_DONT_FAIL();
    fn RPC_C_EP_ALL_ELTS();
    fn RPC_C_EP_MATCH_BY_BOTH();
    fn RPC_C_EP_MATCH_BY_IF();
    fn RPC_C_EP_MATCH_BY_OBJ();
    fn RPC_C_FULL_CERT_CHAIN();
    fn RPC_C_HTTP_AUTHN_SCHEME_BASIC();
    fn RPC_C_HTTP_AUTHN_SCHEME_CERT();
    fn RPC_C_HTTP_AUTHN_SCHEME_DIGEST();
    fn RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE();
    fn RPC_C_HTTP_AUTHN_SCHEME_NTLM();
    fn RPC_C_HTTP_AUTHN_SCHEME_PASSPORT();
    fn RPC_C_HTTP_AUTHN_TARGET();
    fn RPC_C_HTTP_FLAGS();
    fn RPC_C_LISTEN_MAX_CALLS_DEFAULT();
    fn RPC_C_MGMT_INQ_IF_IDS();
    fn RPC_C_MGMT_INQ_PRINC_NAME();
    fn RPC_C_MGMT_INQ_STATS();
    fn RPC_C_MGMT_IS_SERVER_LISTEN();
    fn RPC_C_MGMT_STOP_SERVER_LISTEN();
    fn RPC_C_MQ_AUTHN_LEVEL_NONE();
    fn RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY();
    fn RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY();
    fn RPC_C_MQ_CLEAR_ON_OPEN();
    fn RPC_C_MQ_EXPRESS();
    fn RPC_C_MQ_JOURNAL_ALWAYS();
    fn RPC_C_MQ_JOURNAL_DEADLETTER();
    fn RPC_C_MQ_JOURNAL_NONE();
    fn RPC_C_MQ_PERMANENT();
    fn RPC_C_MQ_RECOVERABLE();
    fn RPC_C_MQ_TEMPORARY();
    fn RPC_C_MQ_USE_EXISTING_SECURITY();
    fn RPC_C_NOTIFY_ON_SEND_COMPLETE();
    fn RPC_C_NS_DEFAULT_EXP_AGE();
    fn RPC_C_OPT_ASYNC_BLOCK();
    fn RPC_C_OPT_BINDING_NONCAUSAL();
    fn RPC_C_OPT_CALL_TIMEOUT();
    fn RPC_C_OPT_COOKIE_AUTH();
    fn RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR();
    fn RPC_C_OPT_DONT_LINGER();
    fn RPC_C_OPT_MAX_OPTIONS();
    fn RPC_C_OPT_MQ_ACKNOWLEDGE();
    fn RPC_C_OPT_MQ_AUTHN_LEVEL();
    fn RPC_C_OPT_MQ_AUTHN_SERVICE();
    fn RPC_C_OPT_MQ_DELIVERY();
    fn RPC_C_OPT_MQ_JOURNAL();
    fn RPC_C_OPT_MQ_PRIORITY();
    fn RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED();
    fn RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE();
    fn RPC_C_OPT_OPTIMIZE_TIME();
    fn RPC_C_OPT_PRIVATE_BREAK_ON_SUSPEND();
    fn RPC_C_OPT_PRIVATE_DO_NOT_DISTURB();
    fn RPC_C_OPT_PRIVATE_SUPPRESS_WAKE();
    fn RPC_C_OPT_RESOURCE_TYPE_UUID();
    fn RPC_C_OPT_SECURITY_CALLBACK();
    fn RPC_C_OPT_SESSION_ID();
    fn RPC_C_OPT_TRANS_SEND_BUFFER_SIZE();
    fn RPC_C_OPT_TRUST_PEER();
    fn RPC_C_OPT_UNIQUE_BINDING();
    fn RPC_C_PARM_BUFFER_LENGTH();
    fn RPC_C_PARM_MAX_PACKET_LENGTH();
    fn RPC_C_PROFILE_ALL_ELT();
    fn RPC_C_PROFILE_ALL_ELTS();
    fn RPC_C_PROFILE_DEFAULT_ELT();
    fn RPC_C_PROFILE_MATCH_BY_BOTH();
    fn RPC_C_PROFILE_MATCH_BY_IF();
    fn RPC_C_PROFILE_MATCH_BY_MBR();
    fn RPC_C_PROTSEQ_MAX_REQS_DEFAULT();
    fn RPC_C_QOS_CAPABILITIES();
    fn RPC_C_QOS_IDENTITY();
    fn RPC_C_RPCHTTP_USE_LOAD_BALANCE();
    fn RPC_C_SECURITY_QOS_VERSION();
    fn RPC_C_SECURITY_QOS_VERSION_1();
    fn RPC_C_SECURITY_QOS_VERSION_2();
    fn RPC_C_SECURITY_QOS_VERSION_3();
    fn RPC_C_SECURITY_QOS_VERSION_4();
    fn RPC_C_SECURITY_QOS_VERSION_5();
    fn RPC_C_STATS_CALLS_IN();
    fn RPC_C_STATS_CALLS_OUT();
    fn RPC_C_STATS_PKTS_IN();
    fn RPC_C_STATS_PKTS_OUT();
    fn RPC_C_TRY_ENFORCE_MAX_CALLS();
    fn RPC_C_USE_INTERNET_PORT();
    fn RPC_C_USE_INTRANET_PORT();
    fn RPC_C_VERS_ALL();
    fn RPC_C_VERS_COMPATIBLE();
    fn RPC_C_VERS_EXACT();
    fn RPC_C_VERS_MAJOR_ONLY();
    fn RPC_C_VERS_UPTO();
    fn RPC_DISPATCH_FUNCTION();
    fn RPC_DISPATCH_TABLE();
    fn RPC_EEINFO_VERSION();
    fn RPC_EE_INFO_PARAM();
    fn RPC_ENDPOINT_TEMPLATEA();
    fn RPC_ENDPOINT_TEMPLATEW();
    fn RPC_ERROR_ENUM_HANDLE();
    fn RPC_EXTENDED_ERROR_INFO();
    fn RPC_FLAGS_VALID_BIT();
    fn RPC_FORWARD_FUNCTION();
    fn RPC_FW_IF_FLAG_DCOM();
    fn RPC_HTTP_PROXY_FREE_STRING();
    fn RPC_HTTP_REDIRECTOR_STAGE();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_A();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W();
    fn RPC_HTTP_TRANSPORT_CREDENTIALS_W();
    fn RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH();
    fn RPC_IF_ALLOW_LOCAL_ONLY();
    fn RPC_IF_ALLOW_SECURE_ONLY();
    fn RPC_IF_ALLOW_UNKNOWN_AUTHORITY();
    fn RPC_IF_ASYNC_CALLBACK();
    fn RPC_IF_AUTOLISTEN();
    fn RPC_IF_CALLBACK_FN();
    fn RPC_IF_ID();
    fn RPC_IF_ID_VECTOR();
    fn RPC_IF_OLE();
    fn RPC_IF_SEC_CACHE_PER_PROC();
    fn RPC_IF_SEC_NO_CACHE();
    fn RPC_IMPORT_CONTEXT_P();
    fn RPC_INTERFACE_GROUP_IDLE_CALLBACK_FN();
    fn RPC_INTERFACE_HAS_PIPES();
    fn RPC_INTERFACE_TEMPLATEA();
    fn RPC_INTERFACE_TEMPLATEW();
    fn RPC_MESSAGE();
    fn RPC_MGMT_AUTHORIZATION_FN();
    fn RPC_NCA_FLAGS_BROADCAST();
    fn RPC_NCA_FLAGS_DEFAULT();
    fn RPC_NCA_FLAGS_IDEMPOTENT();
    fn RPC_NCA_FLAGS_MAYBE();
    fn RPC_NEW_HTTP_PROXY_CHANNEL();
    fn RPC_NOTIFICATIONS();
    fn RPC_NOTIFICATION_TYPES();
    fn RPC_OBJECT_INQ_FN();
    fn RPC_POLICY();
    fn RPC_PROTSEQ_ENDPOINT();
    fn RPC_PROTSEQ_HTTP();
    fn RPC_PROTSEQ_LRPC();
    fn RPC_PROTSEQ_NMP();
    fn RPC_PROTSEQ_TCP();
    fn RPC_PROTSEQ_VECTORA();
    fn RPC_PROTSEQ_VECTORW();
    fn RPC_PROXY_CONNECTION_TYPE_IN_PROXY();
    fn RPC_PROXY_CONNECTION_TYPE_OUT_PROXY();
    fn RPC_P_ADDR_FORMAT_TCP_IPV4();
    fn RPC_P_ADDR_FORMAT_TCP_IPV6();
    fn RPC_QUERY_CALL_LOCAL_ADDRESS();
    fn RPC_QUERY_CLIENT_ID();
    fn RPC_QUERY_CLIENT_PID();
    fn RPC_QUERY_CLIENT_PRINCIPAL_NAME();
    fn RPC_QUERY_IS_CLIENT_LOCAL();
    fn RPC_QUERY_NO_AUTH_REQUIRED();
    fn RPC_QUERY_SERVER_PRINCIPAL_NAME();
    fn RPC_SECURITY_CALLBACK_FN();
    fn RPC_SECURITY_QOS();
    fn RPC_SECURITY_QOS_V2_A();
    fn RPC_SECURITY_QOS_V2_W();
    fn RPC_SECURITY_QOS_V3_A();
    fn RPC_SECURITY_QOS_V3_W();
    fn RPC_SECURITY_QOS_V4_A();
    fn RPC_SECURITY_QOS_V4_W();
    fn RPC_SECURITY_QOS_V5_A();
    fn RPC_SECURITY_QOS_V5_W();
    fn RPC_SEC_CONTEXT_KEY_INFO();
    fn RPC_SERVER_INTERFACE();
    fn RPC_SETFILTER_FUNC();
    fn RPC_STATS_VECTOR();
    fn RPC_STATUS();
    fn RPC_SYNTAX_IDENTIFIER();
    fn RPC_SYSTEM_HANDLE_FREE_ALL();
    fn RPC_SYSTEM_HANDLE_FREE_ERROR_ON_CLOSE();
    fn RPC_SYSTEM_HANDLE_FREE_RETRIEVED();
    fn RPC_SYSTEM_HANDLE_FREE_UNRETRIEVED();
    fn RPC_TRANSFER_SYNTAX();
    fn RPC_TYPE_DISCONNECT_EVENT_CONTEXT_HANDLE();
    fn RPC_TYPE_STRICT_CONTEXT_HANDLE();
    fn RPC_VERSION();
    fn RpcAsyncAbortCall();
    fn RpcAsyncCancelCall();
    fn RpcAsyncCompleteCall();
    fn RpcAsyncGetCallStatus();
    fn RpcAsyncInitializeHandle();
    fn RpcAsyncRegisterInfo();
    fn RpcBindingBind();
    fn RpcBindingCopy();
    fn RpcBindingCreateA();
    fn RpcBindingCreateW();
    fn RpcBindingFree();
    fn RpcBindingFromStringBindingA();
    fn RpcBindingFromStringBindingW();
    fn RpcBindingInqAuthClientA();
    fn RpcBindingInqAuthClientExA();
    fn RpcBindingInqAuthClientExW();
    fn RpcBindingInqAuthClientW();
    fn RpcBindingInqAuthInfoA();
    fn RpcBindingInqAuthInfoExA();
    fn RpcBindingInqAuthInfoExW();
    fn RpcBindingInqAuthInfoW();
    fn RpcBindingInqMaxCalls();
    fn RpcBindingInqObject();
    fn RpcBindingInqOption();
    fn RpcBindingReset();
    fn RpcBindingServerFromClient();
    fn RpcBindingSetAuthInfoA();
    fn RpcBindingSetAuthInfoExA();
    fn RpcBindingSetAuthInfoExW();
    fn RpcBindingSetAuthInfoW();
    fn RpcBindingSetObject();
    fn RpcBindingSetOption();
    fn RpcBindingToStringBindingA();
    fn RpcBindingToStringBindingW();
    fn RpcBindingUnbind();
    fn RpcBindingVectorFree();
    fn RpcCallClientLocality();
    fn RpcCallType();
    fn RpcCancelThread();
    fn RpcCancelThreadEx();
    fn RpcCertGeneratePrincipalNameA();
    fn RpcCertGeneratePrincipalNameW();
    fn RpcEpRegisterA();
    fn RpcEpRegisterNoReplaceA();
    fn RpcEpRegisterNoReplaceW();
    fn RpcEpRegisterW();
    fn RpcEpResolveBinding();
    fn RpcEpUnregister();
    fn RpcErrorAddRecord();
    fn RpcErrorClearInformation();
    fn RpcErrorEndEnumeration();
    fn RpcErrorGetNextRecord();
    fn RpcErrorGetNumberOfRecords();
    fn RpcErrorLoadErrorInfo();
    fn RpcErrorResetEnumeration();
    fn RpcErrorSaveErrorInfo();
    fn RpcErrorStartEnumeration();
    fn RpcExceptionFilter();
    fn RpcFreeAuthorizationContext();
    fn RpcGetAuthorizationContextForClient();
    fn RpcIfIdVectorFree();
    fn RpcIfInqId();
    fn RpcImpersonateClient();
    fn RpcImpersonateClient2();
    fn RpcImpersonateClientContainer();
    fn RpcLocalAddressFormat();
    fn RpcMgmtEnableIdleCleanup();
    fn RpcMgmtEpEltInqBegin();
    fn RpcMgmtEpEltInqDone();
    fn RpcMgmtEpEltInqNextA();
    fn RpcMgmtEpEltInqNextW();
    fn RpcMgmtEpUnregister();
    fn RpcMgmtInqComTimeout();
    fn RpcMgmtInqDefaultProtectLevel();
    fn RpcMgmtInqIfIds();
    fn RpcMgmtInqServerPrincNameA();
    fn RpcMgmtInqServerPrincNameW();
    fn RpcMgmtInqStats();
    fn RpcMgmtIsServerListening();
    fn RpcMgmtSetAuthorizationFn();
    fn RpcMgmtSetCancelTimeout();
    fn RpcMgmtSetComTimeout();
    fn RpcMgmtSetServerStackSize();
    fn RpcMgmtStatsVectorFree();
    fn RpcMgmtStopServerListening();
    fn RpcMgmtWaitServerListen();
    fn RpcNetworkInqProtseqsA();
    fn RpcNetworkInqProtseqsW();
    fn RpcNetworkIsProtseqValidA();
    fn RpcNetworkIsProtseqValidW();
    fn RpcNsBindingExportA();
    fn RpcNsBindingExportPnPA();
    fn RpcNsBindingExportPnPW();
    fn RpcNsBindingExportW();
    fn RpcNsBindingImportBeginA();
    fn RpcNsBindingImportBeginW();
    fn RpcNsBindingImportDone();
    fn RpcNsBindingImportNext();
    fn RpcNsBindingInqEntryNameA();
    fn RpcNsBindingInqEntryNameW();
    fn RpcNsBindingLookupBeginA();
    fn RpcNsBindingLookupBeginW();
    fn RpcNsBindingLookupDone();
    fn RpcNsBindingLookupNext();
    fn RpcNsBindingSelect();
    fn RpcNsBindingUnexportA();
    fn RpcNsBindingUnexportPnPA();
    fn RpcNsBindingUnexportPnPW();
    fn RpcNsBindingUnexportW();
    fn RpcNsEntryExpandNameA();
    fn RpcNsEntryExpandNameW();
    fn RpcNsEntryObjectInqBeginA();
    fn RpcNsEntryObjectInqBeginW();
    fn RpcNsEntryObjectInqDone();
    fn RpcNsEntryObjectInqNext();
    fn RpcNsGroupDeleteA();
    fn RpcNsGroupDeleteW();
    fn RpcNsGroupMbrAddA();
    fn RpcNsGroupMbrAddW();
    fn RpcNsGroupMbrInqBeginA();
    fn RpcNsGroupMbrInqBeginW();
    fn RpcNsGroupMbrInqDone();
    fn RpcNsGroupMbrInqNextA();
    fn RpcNsGroupMbrInqNextW();
    fn RpcNsGroupMbrRemoveA();
    fn RpcNsGroupMbrRemoveW();
    fn RpcNsMgmtBindingUnexportA();
    fn RpcNsMgmtBindingUnexportW();
    fn RpcNsMgmtEntryCreateA();
    fn RpcNsMgmtEntryCreateW();
    fn RpcNsMgmtEntryDeleteA();
    fn RpcNsMgmtEntryDeleteW();
    fn RpcNsMgmtEntryInqIfIdsA();
    fn RpcNsMgmtEntryInqIfIdsW();
    fn RpcNsMgmtHandleSetExpAge();
    fn RpcNsMgmtInqExpAge();
    fn RpcNsMgmtSetExpAge();
    fn RpcNsProfileDeleteA();
    fn RpcNsProfileDeleteW();
    fn RpcNsProfileEltAddA();
    fn RpcNsProfileEltAddW();
    fn RpcNsProfileEltInqBeginA();
    fn RpcNsProfileEltInqBeginW();
    fn RpcNsProfileEltInqDone();
    fn RpcNsProfileEltInqNextA();
    fn RpcNsProfileEltInqNextW();
    fn RpcNsProfileEltRemoveA();
    fn RpcNsProfileEltRemoveW();
    fn RpcObjectInqType();
    fn RpcObjectSetInqFn();
    fn RpcObjectSetType();
    fn RpcProtseqVectorFreeA();
    fn RpcProtseqVectorFreeW();
    fn RpcProxyPerfCounters();
    fn RpcRaiseException();
    fn RpcRevertContainerImpersonation();
    fn RpcRevertToSelf();
    fn RpcRevertToSelfEx();
    fn RpcServerCompleteSecurityCallback();
    fn RpcServerInqBindingHandle();
    fn RpcServerInqBindings();
    fn RpcServerInqBindingsEx();
    fn RpcServerInqCallAttributesA();
    fn RpcServerInqCallAttributesW();
    fn RpcServerInqDefaultPrincNameA();
    fn RpcServerInqDefaultPrincNameW();
    fn RpcServerInqIf();
    fn RpcServerInterfaceGroupActivate();
    fn RpcServerInterfaceGroupClose();
    fn RpcServerInterfaceGroupCreateA();
    fn RpcServerInterfaceGroupCreateW();
    fn RpcServerInterfaceGroupDeactivate();
    fn RpcServerInterfaceGroupInqBindings();
    fn RpcServerListen();
    fn RpcServerRegisterAuthInfoA();
    fn RpcServerRegisterAuthInfoW();
    fn RpcServerRegisterIf();
    fn RpcServerRegisterIf2();
    fn RpcServerRegisterIf3();
    fn RpcServerRegisterIfEx();
    fn RpcServerSubscribeForNotification();
    fn RpcServerTestCancel();
    fn RpcServerUnregisterIf();
    fn RpcServerUnregisterIfEx();
    fn RpcServerUnsubscribeForNotification();
    fn RpcServerUseAllProtseqs();
    fn RpcServerUseAllProtseqsEx();
    fn RpcServerUseAllProtseqsIf();
    fn RpcServerUseAllProtseqsIfEx();
    fn RpcServerUseProtseqA();
    fn RpcServerUseProtseqEpA();
    fn RpcServerUseProtseqEpExA();
    fn RpcServerUseProtseqEpExW();
    fn RpcServerUseProtseqEpW();
    fn RpcServerUseProtseqExA();
    fn RpcServerUseProtseqExW();
    fn RpcServerUseProtseqIfA();
    fn RpcServerUseProtseqIfExA();
    fn RpcServerUseProtseqIfExW();
    fn RpcServerUseProtseqIfW();
    fn RpcServerUseProtseqW();
    fn RpcServerYield();
    fn RpcSmAllocate();
    fn RpcSmClientFree();
    fn RpcSmDestroyClientContext();
    fn RpcSmDisableAllocate();
    fn RpcSmEnableAllocate();
    fn RpcSmFree();
    fn RpcSmGetThreadHandle();
    fn RpcSmSetClientAllocFree();
    fn RpcSmSetThreadHandle();
    fn RpcSmSwapClientAllocFree();
    fn RpcSsAllocate();
    fn RpcSsContextLockExclusive();
    fn RpcSsContextLockShared();
    fn RpcSsDestroyClientContext();
    fn RpcSsDisableAllocate();
    fn RpcSsDontSerializeContext();
    fn RpcSsEnableAllocate();
    fn RpcSsFree();
    fn RpcSsGetContextBinding();
    fn RpcSsGetThreadHandle();
    fn RpcSsSetClientAllocFree();
    fn RpcSsSetThreadHandle();
    fn RpcSsSwapClientAllocFree();
    fn RpcStringBindingComposeA();
    fn RpcStringBindingComposeW();
    fn RpcStringBindingParseA();
    fn RpcStringBindingParseW();
    fn RpcStringFreeA();
    fn RpcStringFreeW();
    fn RpcTestCancel();
    fn RpcUserFree();
    fn SCONTEXT_QUEUE();
    fn SEC_WINNT_AUTH_IDENTITY();
    fn SEC_WINNT_AUTH_IDENTITY_A();
    fn SEC_WINNT_AUTH_IDENTITY_W();
    fn SERVER_ROUTINE();
    fn STUB_PHASE();
    fn STUB_THUNK();
    fn TARGET_IS_NT100_OR_LATER();
    fn TARGET_IS_NT351_OR_WIN95_OR_LATER();
    fn TARGET_IS_NT40_OR_LATER();
    fn TARGET_IS_NT50_OR_LATER();
    fn TARGET_IS_NT51_OR_LATER();
    fn TARGET_IS_NT60_OR_LATER();
    fn TARGET_IS_NT61_OR_LATER();
    fn TARGET_IS_NT62_OR_LATER();
    fn TARGET_IS_NT63_OR_LATER();
    fn TRANSPORT_TYPE_CN();
    fn TRANSPORT_TYPE_DG();
    fn TRANSPORT_TYPE_LPC();
    fn TRANSPORT_TYPE_WMSG();
    fn USER_CALL_IS_ASYNC();
    fn USER_CALL_NEW_CORRELATION_DESC();
    fn USER_MARSHAL_CB();
    fn USER_MARSHAL_CB_TYPE();
    fn USER_MARSHAL_FC_BYTE();
    fn USER_MARSHAL_FC_CHAR();
    fn USER_MARSHAL_FC_DOUBLE();
    fn USER_MARSHAL_FC_FLOAT();
    fn USER_MARSHAL_FC_HYPER();
    fn USER_MARSHAL_FC_LONG();
    fn USER_MARSHAL_FC_SHORT();
    fn USER_MARSHAL_FC_SMALL();
    fn USER_MARSHAL_FC_ULONG();
    fn USER_MARSHAL_FC_USHORT();
    fn USER_MARSHAL_FC_USMALL();
    fn USER_MARSHAL_FC_WCHAR();
    fn USER_MARSHAL_FREEING_ROUTINE();
    fn USER_MARSHAL_MARSHALLING_ROUTINE();
    fn USER_MARSHAL_ROUTINE_QUADRUPLE();
    fn USER_MARSHAL_SIZING_ROUTINE();
    fn USER_MARSHAL_UNMARSHALLING_ROUTINE();
    fn UUID_VECTOR();
    fn UuidCompare();
    fn UuidCreate();
    fn UuidCreateNil();
    fn UuidCreateSequential();
    fn UuidEqual();
    fn UuidFromStringA();
    fn UuidFromStringW();
    fn UuidHash();
    fn UuidIsNil();
    fn UuidToStringA();
    fn UuidToStringW();
    fn XLAT_SIDE();
    fn XMIT_HELPER_ROUTINE();
    fn XMIT_ROUTINE_QUINTUPLE();
    fn _NDR_ASYNC_MESSAGE();
    fn _NDR_CORRELATION_INFO();
    fn _NDR_PROC_CONTEXT();
    fn _NDR_SCONTEXT();
    fn __RPCPROXY_H_VERSION__();
    fn system_handle_t();
}
