#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ACTIVATE_KEYBOARD_LAYOUT_FLAGS();
    fn ACUTE();
    fn AX_KBD_DESKTOP_TYPE();
    fn ActivateKeyboardLayout();
    fn BREVE();
    fn BlockInput();
    fn CAPLOK();
    fn CAPLOKALTGR();
    fn CEDILLA();
    fn CIRCUMFLEX();
    fn DEADKEY();
    fn DEC_KBD_ANSI_LAYOUT_TYPE();
    fn DEC_KBD_JIS_LAYOUT_TYPE();
    fn DIARESIS();
    fn DIARESIS_TONOS();
    fn DKF_DEAD();
    fn DONTCARE_BIT();
    fn DOT_ABOVE();
    fn DOUBLE_ACUTE();
    fn DragDetect();
    fn EXTENDED_BIT();
    fn EnableWindow();
    fn FAKE_KEYSTROKE();
    fn FMR_KBD_JIS_TYPE();
    fn FMR_KBD_OASYS_TYPE();
    fn FMV_KBD_OASYS_TYPE();
    fn GET_MOUSE_MOVE_POINTS_EX_RESOLUTION();
    fn GRAVE();
    fn GRPSELTAP();
    fn GetActiveWindow();
    fn GetAsyncKeyState();
    fn GetCapture();
    fn GetDoubleClickTime();
    fn GetFocus();
    fn GetKBCodePage();
    fn GetKeyNameTextA();
    fn GetKeyNameTextW();
    fn GetKeyState();
    fn GetKeyboardLayout();
    fn GetKeyboardLayoutList();
    fn GetKeyboardLayoutNameA();
    fn GetKeyboardLayoutNameW();
    fn GetKeyboardState();
    fn GetKeyboardType();
    fn GetLastInputInfo();
    fn GetMouseMovePointsEx();
    fn HACEK();
    fn HARDWAREINPUT();
    fn HOOK_ABOVE();
    fn HOT_KEY_MODIFIERS();
    fn INPUT();
    fn INPUT_TYPE();
    fn IsWindowEnabled();
    fn KANALOK();
    fn KBDALT();
    fn KBDBASE();
    fn KBDCTRL();
    fn KBDGRPSELTAP();
    fn KBDKANA();
    fn KBDLOYA();
    fn KBDNLS_ALPHANUM();
    fn KBDNLS_CODEINPUT();
    fn KBDNLS_CONV_OR_NONCONV();
    fn KBDNLS_HELP_OR_END();
    fn KBDNLS_HIRAGANA();
    fn KBDNLS_HOME_OR_CLEAR();
    fn KBDNLS_INDEX_ALT();
    fn KBDNLS_INDEX_NORMAL();
    fn KBDNLS_KANAEVENT();
    fn KBDNLS_KANALOCK();
    fn KBDNLS_KATAKANA();
    fn KBDNLS_NOEVENT();
    fn KBDNLS_NULL();
    fn KBDNLS_NUMPAD();
    fn KBDNLS_ROMAN();
    fn KBDNLS_SBCSDBCS();
    fn KBDNLS_SEND_BASE_VK();
    fn KBDNLS_SEND_PARAM_VK();
    fn KBDNLS_TYPE_NORMAL();
    fn KBDNLS_TYPE_NULL();
    fn KBDNLS_TYPE_TOGGLE();
    fn KBDROYA();
    fn KBDSHIFT();
    fn KBDTABLE_DESC();
    fn KBDTABLE_MULTI();
    fn KBDTABLE_MULTI_MAX();
    fn KBD_TYPE();
    fn KBD_TYPE_INFO();
    fn KBD_VERSION();
    fn KEYBDINPUT();
    fn KEYBD_EVENT_FLAGS();
    fn KEYBOARD_TYPE_GENERIC_101();
    fn KEYBOARD_TYPE_JAPAN();
    fn KEYBOARD_TYPE_KOREA();
    fn KEYBOARD_TYPE_UNKNOWN();
    fn KLLF_ALTGR();
    fn KLLF_GLOBAL_ATTRS();
    fn KLLF_LRM_RLM();
    fn KLLF_SHIFTLOCK();
    fn LASTINPUTINFO();
    fn LIGATURE1();
    fn LIGATURE2();
    fn LIGATURE3();
    fn LIGATURE4();
    fn LIGATURE5();
    fn LoadKeyboardLayoutA();
    fn LoadKeyboardLayoutW();
    fn MACRON();
    fn MICROSOFT_KBD_001_TYPE();
    fn MICROSOFT_KBD_002_TYPE();
    fn MICROSOFT_KBD_101A_TYPE();
    fn MICROSOFT_KBD_101B_TYPE();
    fn MICROSOFT_KBD_101C_TYPE();
    fn MICROSOFT_KBD_101_TYPE();
    fn MICROSOFT_KBD_103_TYPE();
    fn MICROSOFT_KBD_106_TYPE();
    fn MICROSOFT_KBD_AX_TYPE();
    fn MICROSOFT_KBD_FUNC();
    fn MODIFIERS();
    fn MOUSEINPUT();
    fn MOUSEMOVEPOINT();
    fn MOUSE_EVENT_FLAGS();
    fn MapVirtualKeyA();
    fn MapVirtualKeyExA();
    fn MapVirtualKeyExW();
    fn MapVirtualKeyW();
    fn NEC_KBD_106_TYPE();
    fn NEC_KBD_H_MODE_TYPE();
    fn NEC_KBD_LAPTOP_TYPE();
    fn NEC_KBD_NORMAL_TYPE();
    fn NEC_KBD_N_MODE_TYPE();
    fn NLSKBD_INFO_ACCESSIBILITY_KEYMAP();
    fn NLSKBD_INFO_EMURATE_101_KEYBOARD();
    fn NLSKBD_INFO_EMURATE_106_KEYBOARD();
    fn NLSKBD_INFO_SEND_IME_NOTIFICATION();
    fn NLSKBD_OEM_AX();
    fn NLSKBD_OEM_DEC();
    fn NLSKBD_OEM_EPSON();
    fn NLSKBD_OEM_FUJITSU();
    fn NLSKBD_OEM_IBM();
    fn NLSKBD_OEM_MATSUSHITA();
    fn NLSKBD_OEM_MICROSOFT();
    fn NLSKBD_OEM_NEC();
    fn NLSKBD_OEM_TOSHIBA();
    fn OGONEK();
    fn OVERSCORE();
    fn OemKeyScan();
    fn RING();
    fn RegisterHotKey();
    fn ReleaseCapture();
    fn SCANCODE_ALT();
    fn SCANCODE_CTRL();
    fn SCANCODE_LSHIFT();
    fn SCANCODE_LWIN();
    fn SCANCODE_NUMPAD_FIRST();
    fn SCANCODE_NUMPAD_LAST();
    fn SCANCODE_RSHIFT();
    fn SCANCODE_RWIN();
    fn SCANCODE_THAI_LAYOUT_TOGGLE();
    fn SGCAPS();
    fn SHFT_INVALID();
    fn SendInput();
    fn SetActiveWindow();
    fn SetCapture();
    fn SetDoubleClickTime();
    fn SetFocus();
    fn SetKeyboardState();
    fn SwapMouseButton();
    fn TILDE();
    fn TONOS();
    fn TOSHIBA_KBD_DESKTOP_TYPE();
    fn TOSHIBA_KBD_LAPTOP_TYPE();
    fn TRACKMOUSEEVENT();
    fn TRACKMOUSEEVENT_FLAGS();
    fn ToAscii();
    fn ToAsciiEx();
    fn ToUnicode();
    fn ToUnicodeEx();
    fn TrackMouseEvent();
    fn UMLAUT();
    fn UnloadKeyboardLayout();
    fn UnregisterHotKey();
    fn VIRTUAL_KEY();
    fn VK_ABNT_C1();
    fn VK_ABNT_C2();
    fn VK_DBE_ALPHANUMERIC();
    fn VK_DBE_CODEINPUT();
    fn VK_DBE_DBCSCHAR();
    fn VK_DBE_DETERMINESTRING();
    fn VK_DBE_ENTERDLGCONVERSIONMODE();
    fn VK_DBE_ENTERIMECONFIGMODE();
    fn VK_DBE_ENTERWORDREGISTERMODE();
    fn VK_DBE_FLUSHSTRING();
    fn VK_DBE_HIRAGANA();
    fn VK_DBE_KATAKANA();
    fn VK_DBE_NOCODEINPUT();
    fn VK_DBE_NOROMAN();
    fn VK_DBE_ROMAN();
    fn VK_DBE_SBCSCHAR();
    fn VK_TO_BIT();
    fn VK_TO_WCHARS1();
    fn VK_TO_WCHARS10();
    fn VK_TO_WCHARS2();
    fn VK_TO_WCHARS3();
    fn VK_TO_WCHARS4();
    fn VK_TO_WCHARS5();
    fn VK_TO_WCHARS6();
    fn VK_TO_WCHARS7();
    fn VK_TO_WCHARS8();
    fn VK_TO_WCHARS9();
    fn VK_TO_WCHAR_TABLE();
    fn VK_VSC();
    fn VK__none_();
    fn VSC_LPWSTR();
    fn VSC_VK();
    fn VkKeyScanA();
    fn VkKeyScanExA();
    fn VkKeyScanExW();
    fn VkKeyScanW();
    fn WCH_DEAD();
    fn WCH_LGTR();
    fn WCH_NONE();
    fn _TrackMouseEvent();
    fn _VK_FUNCTION_PARAM();
    fn _VK_TO_FUNCTION_TABLE();
    fn keybd_event();
    fn mouse_event();
    fn tagKbdLayer();
    fn tagKbdNlsLayer();
}
