#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "Win32_Security_Authentication_Identity_Provider")]
pub mod Provider;
#[link(name = "windows")]
extern "system" {
    fn AcceptSecurityContext();
    fn AcquireCredentialsHandleA();
    fn AcquireCredentialsHandleW();
    fn AddCredentialsA();
    fn AddCredentialsW();
    fn AddSecurityPackageA();
    fn AddSecurityPackageW();
    fn ApplyControlToken();
    fn AuditComputeEffectivePolicyBySid();
    fn AuditComputeEffectivePolicyByToken();
    fn AuditEnumerateCategories();
    fn AuditEnumeratePerUserPolicy();
    fn AuditEnumerateSubCategories();
    fn AuditFree();
    fn AuditLookupCategoryGuidFromCategoryId();
    fn AuditLookupCategoryIdFromCategoryGuid();
    fn AuditLookupCategoryNameA();
    fn AuditLookupCategoryNameW();
    fn AuditLookupSubCategoryNameA();
    fn AuditLookupSubCategoryNameW();
    fn AuditQueryGlobalSaclA();
    fn AuditQueryGlobalSaclW();
    fn AuditQueryPerUserPolicy();
    fn AuditQuerySecurity();
    fn AuditQuerySystemPolicy();
    fn AuditSetGlobalSaclA();
    fn AuditSetGlobalSaclW();
    fn AuditSetPerUserPolicy();
    fn AuditSetSecurity();
    fn AuditSetSystemPolicy();
    fn ChangeAccountPasswordA();
    fn ChangeAccountPasswordW();
    fn CompleteAuthToken();
    fn CredMarshalTargetInfo();
    fn CredUnmarshalTargetInfo();
    fn DecryptMessage();
    fn DeleteSecurityContext();
    fn DeleteSecurityPackageA();
    fn DeleteSecurityPackageW();
    fn EncryptMessage();
    fn EnumerateSecurityPackagesA();
    fn EnumerateSecurityPackagesW();
    fn ExportSecurityContext();
    fn FreeContextBuffer();
    fn FreeCredentialsHandle();
    fn GetComputerObjectNameA();
    fn GetComputerObjectNameW();
    fn GetUserNameExA();
    fn GetUserNameExW();
    fn ImpersonateSecurityContext();
    fn ImportSecurityContextA();
    fn ImportSecurityContextW();
    fn InitSecurityInterfaceA();
    fn InitSecurityInterfaceW();
    fn InitializeSecurityContextA();
    fn InitializeSecurityContextW();
    fn LsaAddAccountRights();
    fn LsaCallAuthenticationPackage();
    fn LsaClose();
    fn LsaConnectUntrusted();
    fn LsaCreateTrustedDomainEx();
    fn LsaDeleteTrustedDomain();
    fn LsaDeregisterLogonProcess();
    fn LsaEnumerateAccountRights();
    fn LsaEnumerateAccountsWithUserRight();
    fn LsaEnumerateLogonSessions();
    fn LsaEnumerateTrustedDomains();
    fn LsaEnumerateTrustedDomainsEx();
    fn LsaFreeMemory();
    fn LsaFreeReturnBuffer();
    fn LsaGetAppliedCAPIDs();
    fn LsaGetLogonSessionData();
    fn LsaLogonUser();
    fn LsaLookupAuthenticationPackage();
    fn LsaLookupNames();
    fn LsaLookupNames2();
    fn LsaLookupSids();
    fn LsaLookupSids2();
    fn LsaNtStatusToWinError();
    fn LsaOpenPolicy();
    fn LsaOpenTrustedDomainByName();
    fn LsaQueryCAPs();
    fn LsaQueryDomainInformationPolicy();
    fn LsaQueryForestTrustInformation();
    fn LsaQueryInformationPolicy();
    fn LsaQueryTrustedDomainInfo();
    fn LsaQueryTrustedDomainInfoByName();
    fn LsaRegisterLogonProcess();
    fn LsaRegisterPolicyChangeNotification();
    fn LsaRemoveAccountRights();
    fn LsaRetrievePrivateData();
    fn LsaSetCAPs();
    fn LsaSetDomainInformationPolicy();
    fn LsaSetForestTrustInformation();
    fn LsaSetInformationPolicy();
    fn LsaSetTrustedDomainInfoByName();
    fn LsaSetTrustedDomainInformation();
    fn LsaStorePrivateData();
    fn LsaUnregisterPolicyChangeNotification();
    fn MakeSignature();
    fn QueryContextAttributesA();
    fn QueryContextAttributesExA();
    fn QueryContextAttributesExW();
    fn QueryContextAttributesW();
    fn QueryCredentialsAttributesA();
    fn QueryCredentialsAttributesExA();
    fn QueryCredentialsAttributesExW();
    fn QueryCredentialsAttributesW();
    fn QuerySecurityContextToken();
    fn QuerySecurityPackageInfoA();
    fn QuerySecurityPackageInfoW();
    fn RevertSecurityContext();
    fn SLAcquireGenuineTicket();
    fn SLActivateProduct();
    fn SLClose();
    fn SLConsumeRight();
    fn SLDepositOfflineConfirmationId();
    fn SLDepositOfflineConfirmationIdEx();
    fn SLFireEvent();
    fn SLGenerateOfflineInstallationId();
    fn SLGenerateOfflineInstallationIdEx();
    fn SLGetApplicationInformation();
    fn SLGetGenuineInformation();
    fn SLGetInstalledProductKeyIds();
    fn SLGetLicense();
    fn SLGetLicenseFileId();
    fn SLGetLicenseInformation();
    fn SLGetLicensingStatusInformation();
    fn SLGetPKeyId();
    fn SLGetPKeyInformation();
    fn SLGetPolicyInformation();
    fn SLGetPolicyInformationDWORD();
    fn SLGetProductSkuInformation();
    fn SLGetReferralInformation();
    fn SLGetSLIDList();
    fn SLGetServerStatus();
    fn SLGetServiceInformation();
    fn SLGetWindowsInformation();
    fn SLGetWindowsInformationDWORD();
    fn SLInstallLicense();
    fn SLInstallProofOfPurchase();
    fn SLIsGenuineLocal();
    fn SLOpen();
    fn SLQueryLicenseValueFromApp();
    fn SLRegisterEvent();
    fn SLSetCurrentProductKey();
    fn SLSetGenuineInformation();
    fn SLUninstallLicense();
    fn SLUninstallProofOfPurchase();
    fn SLUnregisterEvent();
    fn SaslAcceptSecurityContext();
    fn SaslEnumerateProfilesA();
    fn SaslEnumerateProfilesW();
    fn SaslGetContextOption();
    fn SaslGetProfilePackageA();
    fn SaslGetProfilePackageW();
    fn SaslIdentifyPackageA();
    fn SaslIdentifyPackageW();
    fn SaslInitializeSecurityContextA();
    fn SaslInitializeSecurityContextW();
    fn SaslSetContextOption();
    fn SetContextAttributesA();
    fn SetContextAttributesW();
    fn SetCredentialsAttributesA();
    fn SetCredentialsAttributesW();
    fn SslCrackCertificate();
    fn SslEmptyCacheA();
    fn SslEmptyCacheW();
    fn SslFreeCertificate();
    fn SslGenerateRandomBits();
    fn SslGetExtensions();
    fn SslGetMaximumKeySize();
    fn SslGetServerIdentity();
    fn SspiCompareAuthIdentities();
    fn SspiCopyAuthIdentity();
    fn SspiDecryptAuthIdentity();
    fn SspiDecryptAuthIdentityEx();
    fn SspiEncodeAuthIdentityAsStrings();
    fn SspiEncodeStringsAsAuthIdentity();
    fn SspiEncryptAuthIdentity();
    fn SspiEncryptAuthIdentityEx();
    fn SspiExcludePackage();
    fn SspiFreeAuthIdentity();
    fn SspiGetTargetHostName();
    fn SspiIsAuthIdentityEncrypted();
    fn SspiIsPromptingNeeded();
    fn SspiLocalFree();
    fn SspiMarshalAuthIdentity();
    fn SspiPrepareForCredRead();
    fn SspiPrepareForCredWrite();
    fn SspiPromptForCredentialsA();
    fn SspiPromptForCredentialsW();
    fn SspiUnmarshalAuthIdentity();
    fn SspiValidateAuthIdentity();
    fn SspiZeroAuthIdentity();
    fn SystemFunction036();
    fn SystemFunction040();
    fn SystemFunction041();
    fn TokenBindingDeleteAllBindings();
    fn TokenBindingDeleteBinding();
    fn TokenBindingGenerateBinding();
    fn TokenBindingGenerateID();
    fn TokenBindingGenerateIDForUri();
    fn TokenBindingGenerateMessage();
    fn TokenBindingGetHighestSupportedVersion();
    fn TokenBindingGetKeyTypesClient();
    fn TokenBindingGetKeyTypesServer();
    fn TokenBindingVerifyMessage();
    fn TranslateNameA();
    fn TranslateNameW();
    fn VerifySignature();
}
