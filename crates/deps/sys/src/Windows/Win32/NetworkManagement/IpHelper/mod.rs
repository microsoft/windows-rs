#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn AddIPAddress();
    fn CancelIPChangeNotify();
    fn CancelMibChangeNotify2();
    fn CaptureInterfaceHardwareCrossTimestamp();
    fn ConvertCompartmentGuidToId();
    fn ConvertCompartmentIdToGuid();
    fn ConvertInterfaceAliasToLuid();
    fn ConvertInterfaceGuidToLuid();
    fn ConvertInterfaceIndexToLuid();
    fn ConvertInterfaceLuidToAlias();
    fn ConvertInterfaceLuidToGuid();
    fn ConvertInterfaceLuidToIndex();
    fn ConvertInterfaceLuidToNameA();
    fn ConvertInterfaceLuidToNameW();
    fn ConvertInterfaceNameToLuidA();
    fn ConvertInterfaceNameToLuidW();
    fn ConvertIpv4MaskToLength();
    fn ConvertLengthToIpv4Mask();
    fn CreateAnycastIpAddressEntry();
    fn CreateIpForwardEntry();
    fn CreateIpForwardEntry2();
    fn CreateIpNetEntry();
    fn CreateIpNetEntry2();
    fn CreatePersistentTcpPortReservation();
    fn CreatePersistentUdpPortReservation();
    fn CreateProxyArpEntry();
    fn CreateSortedAddressPairs();
    fn CreateUnicastIpAddressEntry();
    fn DeleteAnycastIpAddressEntry();
    fn DeleteIPAddress();
    fn DeleteIpForwardEntry();
    fn DeleteIpForwardEntry2();
    fn DeleteIpNetEntry();
    fn DeleteIpNetEntry2();
    fn DeletePersistentTcpPortReservation();
    fn DeletePersistentUdpPortReservation();
    fn DeleteProxyArpEntry();
    fn DeleteUnicastIpAddressEntry();
    fn DisableMediaSense();
    fn EnableRouter();
    fn FlushIpNetTable();
    fn FlushIpNetTable2();
    fn FlushIpPathTable();
    fn FreeDnsSettings();
    fn FreeInterfaceDnsSettings();
    fn FreeMibTable();
    fn GetAdapterIndex();
    fn GetAdapterOrderMap();
    fn GetAdaptersAddresses();
    fn GetAdaptersInfo();
    fn GetAnycastIpAddressEntry();
    fn GetAnycastIpAddressTable();
    fn GetBestInterface();
    fn GetBestInterfaceEx();
    fn GetBestRoute();
    fn GetBestRoute2();
    fn GetCurrentThreadCompartmentId();
    fn GetCurrentThreadCompartmentScope();
    fn GetDefaultCompartmentId();
    fn GetDnsSettings();
    fn GetExtendedTcpTable();
    fn GetExtendedUdpTable();
    fn GetFriendlyIfIndex();
    fn GetIcmpStatistics();
    fn GetIcmpStatisticsEx();
    fn GetIfEntry();
    fn GetIfEntry2();
    fn GetIfEntry2Ex();
    fn GetIfStackTable();
    fn GetIfTable();
    fn GetIfTable2();
    fn GetIfTable2Ex();
    fn GetInterfaceActiveTimestampCapabilities();
    fn GetInterfaceDnsSettings();
    fn GetInterfaceInfo();
    fn GetInterfaceSupportedTimestampCapabilities();
    fn GetInvertedIfStackTable();
    fn GetIpAddrTable();
    fn GetIpErrorString();
    fn GetIpForwardEntry2();
    fn GetIpForwardTable();
    fn GetIpForwardTable2();
    fn GetIpInterfaceEntry();
    fn GetIpInterfaceTable();
    fn GetIpNetEntry2();
    fn GetIpNetTable();
    fn GetIpNetTable2();
    fn GetIpNetworkConnectionBandwidthEstimates();
    fn GetIpPathEntry();
    fn GetIpPathTable();
    fn GetIpStatistics();
    fn GetIpStatisticsEx();
    fn GetJobCompartmentId();
    fn GetMulticastIpAddressEntry();
    fn GetMulticastIpAddressTable();
    fn GetNetworkConnectivityHint();
    fn GetNetworkConnectivityHintForInterface();
    fn GetNetworkInformation();
    fn GetNetworkParams();
    fn GetNumberOfInterfaces();
    fn GetOwnerModuleFromPidAndInfo();
    fn GetOwnerModuleFromTcp6Entry();
    fn GetOwnerModuleFromTcpEntry();
    fn GetOwnerModuleFromUdp6Entry();
    fn GetOwnerModuleFromUdpEntry();
    fn GetPerAdapterInfo();
    fn GetPerTcp6ConnectionEStats();
    fn GetPerTcpConnectionEStats();
    fn GetRTTAndHopCount();
    fn GetSessionCompartmentId();
    fn GetTcp6Table();
    fn GetTcp6Table2();
    fn GetTcpStatistics();
    fn GetTcpStatisticsEx();
    fn GetTcpStatisticsEx2();
    fn GetTcpTable();
    fn GetTcpTable2();
    fn GetTeredoPort();
    fn GetUdp6Table();
    fn GetUdpStatistics();
    fn GetUdpStatisticsEx();
    fn GetUdpStatisticsEx2();
    fn GetUdpTable();
    fn GetUniDirectionalAdapterInfo();
    fn GetUnicastIpAddressEntry();
    fn GetUnicastIpAddressTable();
    fn Icmp6CreateFile();
    fn Icmp6ParseReplies();
    fn Icmp6SendEcho2();
    fn IcmpCloseHandle();
    fn IcmpCreateFile();
    fn IcmpParseReplies();
    fn IcmpSendEcho();
    fn IcmpSendEcho2();
    fn IcmpSendEcho2Ex();
    fn InitializeIpForwardEntry();
    fn InitializeIpInterfaceEntry();
    fn InitializeUnicastIpAddressEntry();
    fn IpReleaseAddress();
    fn IpRenewAddress();
    fn LookupPersistentTcpPortReservation();
    fn LookupPersistentUdpPortReservation();
    fn NhpAllocateAndGetInterfaceInfoFromStack();
    fn NotifyAddrChange();
    fn NotifyIpInterfaceChange();
    fn NotifyNetworkConnectivityHintChange();
    fn NotifyRouteChange();
    fn NotifyRouteChange2();
    fn NotifyStableUnicastIpAddressTable();
    fn NotifyTeredoPortChange();
    fn NotifyUnicastIpAddressChange();
    fn PfAddFiltersToInterface();
    fn PfAddGlobalFilterToInterface();
    fn PfBindInterfaceToIPAddress();
    fn PfBindInterfaceToIndex();
    fn PfCreateInterface();
    fn PfDeleteInterface();
    fn PfDeleteLog();
    fn PfGetInterfaceStatistics();
    fn PfMakeLog();
    fn PfRebindFilters();
    fn PfRemoveFilterHandles();
    fn PfRemoveFiltersFromInterface();
    fn PfRemoveGlobalFilterFromInterface();
    fn PfSetLogBuffer();
    fn PfTestPacket();
    fn PfUnBindInterface();
    fn RegisterInterfaceTimestampConfigChange();
    fn ResolveIpNetEntry2();
    fn ResolveNeighbor();
    fn RestoreMediaSense();
    fn SendARP();
    fn SetCurrentThreadCompartmentId();
    fn SetCurrentThreadCompartmentScope();
    fn SetDnsSettings();
    fn SetIfEntry();
    fn SetInterfaceDnsSettings();
    fn SetIpForwardEntry();
    fn SetIpForwardEntry2();
    fn SetIpInterfaceEntry();
    fn SetIpNetEntry();
    fn SetIpNetEntry2();
    fn SetIpStatistics();
    fn SetIpStatisticsEx();
    fn SetIpTTL();
    fn SetJobCompartmentId();
    fn SetNetworkInformation();
    fn SetPerTcp6ConnectionEStats();
    fn SetPerTcpConnectionEStats();
    fn SetSessionCompartmentId();
    fn SetTcpEntry();
    fn SetUnicastIpAddressEntry();
    fn UnenableRouter();
    fn UnregisterInterfaceTimestampConfigChange();
    fn if_indextoname();
    fn if_nametoindex();
}
