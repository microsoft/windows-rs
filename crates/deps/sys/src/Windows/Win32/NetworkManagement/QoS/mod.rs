#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ABLE_TO_RECV_RSVP();
    fn ADDRESS_LIST_DESCRIPTOR();
    fn ADM_CTRL_FAILED();
    fn ADSPEC();
    fn AD_FLAG_BREAK_BIT();
    fn AD_GENERAL_PARAMS();
    fn AD_GUARANTEED();
    fn ALLOWED_TO_SEND_DATA();
    fn ANY_DEST_ADDR();
    fn CBADMITRESULT();
    fn CBGETRSVPOBJECTS();
    fn CONTROLLED_DELAY_SERV();
    fn CONTROLLED_LOAD_SERV();
    fn CONTROL_SERVICE();
    fn CREDENTIAL_SUB_TYPE_ASCII_ID();
    fn CREDENTIAL_SUB_TYPE_KERBEROS_TKT();
    fn CREDENTIAL_SUB_TYPE_PGP_CERT();
    fn CREDENTIAL_SUB_TYPE_UNICODE_ID();
    fn CREDENTIAL_SUB_TYPE_X509_V3_CERT();
    fn CURRENT_TCI_VERSION();
    fn CtrlLoadFlowspec();
    fn DUP_RESULTS();
    fn END_TO_END_QOSABILITY();
    fn ENUMERATION_BUFFER();
    fn ERROR_ADDRESS_TYPE_NOT_SUPPORTED();
    fn ERROR_DS_MAPPING_EXISTS();
    fn ERROR_DUPLICATE_FILTER();
    fn ERROR_FILTER_CONFLICT();
    fn ERROR_INCOMPATABLE_QOS();
    fn ERROR_INCOMPATIBLE_TCI_VERSION();
    fn ERROR_INVALID_ADDRESS_TYPE();
    fn ERROR_INVALID_DIFFSERV_FLOW();
    fn ERROR_INVALID_DS_CLASS();
    fn ERROR_INVALID_FLOW_MODE();
    fn ERROR_INVALID_PEAK_RATE();
    fn ERROR_INVALID_QOS_PRIORITY();
    fn ERROR_INVALID_SD_MODE();
    fn ERROR_INVALID_SERVICE_TYPE();
    fn ERROR_INVALID_SHAPE_RATE();
    fn ERROR_INVALID_TOKEN_RATE();
    fn ERROR_INVALID_TRAFFIC_CLASS();
    fn ERROR_NO_MORE_INFO();
    fn ERROR_SPEC();
    fn ERROR_SPECF_InPlace();
    fn ERROR_SPECF_NotGuilty();
    fn ERROR_TC_NOT_SUPPORTED();
    fn ERROR_TC_OBJECT_LENGTH_INVALID();
    fn ERROR_TC_SUPPORTED_OBJECTS_EXIST();
    fn ERROR_TOO_MANY_CLIENTS();
    fn ERR_FORWARD_OK();
    fn ERR_Usage_globl();
    fn ERR_Usage_local();
    fn ERR_Usage_serv();
    fn ERR_global_mask();
    fn EXPIRED_CREDENTIAL();
    fn Error_Spec_IPv4();
    fn FILTER_SPEC();
    fn FLOWDESCRIPTOR();
    fn FLOWSPEC();
    fn FLOW_DURATION();
    fn FORCE_IMMEDIATE_REFRESH();
    fn FSCTL_TCP_BASE();
    fn FVEB_UNLOCK_FLAG_AUK_OSFVEINFO();
    fn FVEB_UNLOCK_FLAG_CACHED();
    fn FVEB_UNLOCK_FLAG_EXTERNAL();
    fn FVEB_UNLOCK_FLAG_MEDIA();
    fn FVEB_UNLOCK_FLAG_NBP();
    fn FVEB_UNLOCK_FLAG_NONE();
    fn FVEB_UNLOCK_FLAG_PASSPHRASE();
    fn FVEB_UNLOCK_FLAG_PIN();
    fn FVEB_UNLOCK_FLAG_RECOVERY();
    fn FVEB_UNLOCK_FLAG_TPM();
    fn FilterType();
    fn Filter_Spec_IPv4();
    fn Filter_Spec_IPv4GPI();
    fn GENERAL_INFO();
    fn GQOS_API();
    fn GQOS_ERRORCODE_UNKNOWN();
    fn GQOS_ERRORVALUE_UNKNOWN();
    fn GQOS_KERNEL_TC();
    fn GQOS_KERNEL_TC_SYS();
    fn GQOS_NET_ADMISSION();
    fn GQOS_NET_POLICY();
    fn GQOS_NO_ERRORCODE();
    fn GQOS_NO_ERRORVALUE();
    fn GQOS_RSVP();
    fn GQOS_RSVP_SYS();
    fn GUARANTEED_SERV();
    fn GUAR_ADSPARM_C();
    fn GUAR_ADSPARM_Csum();
    fn GUAR_ADSPARM_Ctot();
    fn GUAR_ADSPARM_D();
    fn GUAR_ADSPARM_Dsum();
    fn GUAR_ADSPARM_Dtot();
    fn GUID_QOS_BESTEFFORT_BANDWIDTH();
    fn GUID_QOS_ENABLE_AVG_STATS();
    fn GUID_QOS_ENABLE_WINDOW_ADJUSTMENT();
    fn GUID_QOS_FLOW_8021P_CONFORMING();
    fn GUID_QOS_FLOW_8021P_NONCONFORMING();
    fn GUID_QOS_FLOW_COUNT();
    fn GUID_QOS_FLOW_IP_CONFORMING();
    fn GUID_QOS_FLOW_IP_NONCONFORMING();
    fn GUID_QOS_FLOW_MODE();
    fn GUID_QOS_ISSLOW_FLOW();
    fn GUID_QOS_LATENCY();
    fn GUID_QOS_MAX_OUTSTANDING_SENDS();
    fn GUID_QOS_NON_BESTEFFORT_LIMIT();
    fn GUID_QOS_REMAINING_BANDWIDTH();
    fn GUID_QOS_STATISTICS_BUFFER();
    fn GUID_QOS_TIMER_RESOLUTION();
    fn Gads_parms_t();
    fn GenAdspecParams();
    fn GenTspec();
    fn GenTspecParms();
    fn GuarFlowSpec();
    fn GuarRspec();
    fn HIGHLY_DELAY_SENSITIVE();
    fn IDENTITY_CHANGED();
    fn IDPE_ATTR();
    fn ID_ERROR_OBJECT();
    fn IF_MIB_STATS_ID();
    fn INFO_NOT_AVAILABLE();
    fn INSUFFICIENT_PRIVILEGES();
    fn INTSERV_VERSION0();
    fn INTSERV_VERS_MASK();
    fn INV_LPM_HANDLE();
    fn INV_REQ_HANDLE();
    fn INV_RESULTS();
    fn IN_ADDR_IPV4();
    fn IN_ADDR_IPV6();
    fn IPX_PATTERN();
    fn IP_INTFC_INFO_ID();
    fn IP_MIB_ADDRTABLE_ENTRY_ID();
    fn IP_MIB_STATS_ID();
    fn IP_PATTERN();
    fn ISPH_FLG_INV();
    fn ISSH_BREAK_BIT();
    fn IS_ADSPEC_BODY();
    fn IS_FLOWSPEC();
    fn IS_GUAR_RSPEC();
    fn IntServFlowSpec();
    fn IntServMainHdr();
    fn IntServParmHdr();
    fn IntServServiceHdr();
    fn IntServTspecBody();
    fn LINE_RATE();
    fn LOCAL_QOSABILITY();
    fn LOCAL_TRAFFIC_CONTROL();
    fn LPM_API_VERSION_1();
    fn LPM_HANDLE();
    fn LPM_INIT_INFO();
    fn LPM_OK();
    fn LPM_PE_ALL_TYPES();
    fn LPM_PE_APP_IDENTITY();
    fn LPM_PE_USER_IDENTITY();
    fn LPM_RESULT_DEFER();
    fn LPM_RESULT_READY();
    fn LPM_TIME_OUT();
    fn LPV_DONT_CARE();
    fn LPV_DROP_MSG();
    fn LPV_MAX_PRIORITY();
    fn LPV_MIN_PRIORITY();
    fn LPV_REJECT();
    fn LPV_RESERVED();
    fn MAX_PHYSADDR_SIZE();
    fn MAX_STRING_LENGTH();
    fn MODERATELY_DELAY_SENSITIVE();
    fn OSDEVICE_TYPE_BLOCKIO_CDROM();
    fn OSDEVICE_TYPE_BLOCKIO_FILE();
    fn OSDEVICE_TYPE_BLOCKIO_HARDDISK();
    fn OSDEVICE_TYPE_BLOCKIO_PARTITION();
    fn OSDEVICE_TYPE_BLOCKIO_RAMDISK();
    fn OSDEVICE_TYPE_BLOCKIO_REMOVABLEDISK();
    fn OSDEVICE_TYPE_BLOCKIO_VIRTUALHARDDISK();
    fn OSDEVICE_TYPE_COMPOSITE();
    fn OSDEVICE_TYPE_SERIAL();
    fn OSDEVICE_TYPE_UDP();
    fn OSDEVICE_TYPE_UNKNOWN();
    fn OSDEVICE_TYPE_VMBUS();
    fn Opt_Distinct();
    fn Opt_Explicit();
    fn Opt_Share_mask();
    fn Opt_Shared();
    fn Opt_SndSel_mask();
    fn Opt_Wildcard();
    fn PALLOCMEM();
    fn PARAM_BUFFER();
    fn PCM_VERSION_1();
    fn PE_ATTRIB_TYPE_CREDENTIAL();
    fn PE_ATTRIB_TYPE_POLICY_LOCATOR();
    fn PE_TYPE_APPID();
    fn PFREEMEM();
    fn POLICY_DATA();
    fn POLICY_ELEMENT();
    fn POLICY_ERRV_CRAZY_FLOWSPEC();
    fn POLICY_ERRV_EXPIRED_CREDENTIALS();
    fn POLICY_ERRV_EXPIRED_USER_TOKEN();
    fn POLICY_ERRV_GLOBAL_DEF_FLOW_COUNT();
    fn POLICY_ERRV_GLOBAL_DEF_FLOW_DURATION();
    fn POLICY_ERRV_GLOBAL_DEF_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_DEF_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_DEF_SUM_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_DEF_SUM_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_GRP_FLOW_COUNT();
    fn POLICY_ERRV_GLOBAL_GRP_FLOW_DURATION();
    fn POLICY_ERRV_GLOBAL_GRP_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_GRP_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_GRP_SUM_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_GRP_SUM_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_COUNT();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_DURATION();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_USER_FLOW_COUNT();
    fn POLICY_ERRV_GLOBAL_USER_FLOW_DURATION();
    fn POLICY_ERRV_GLOBAL_USER_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_USER_PEAK_RATE();
    fn POLICY_ERRV_GLOBAL_USER_SUM_FLOW_RATE();
    fn POLICY_ERRV_GLOBAL_USER_SUM_PEAK_RATE();
    fn POLICY_ERRV_IDENTITY_CHANGED();
    fn POLICY_ERRV_INSUFFICIENT_PRIVILEGES();
    fn POLICY_ERRV_NO_ACCEPTS();
    fn POLICY_ERRV_NO_MEMORY();
    fn POLICY_ERRV_NO_MORE_INFO();
    fn POLICY_ERRV_NO_PRIVILEGES();
    fn POLICY_ERRV_NO_RESOURCES();
    fn POLICY_ERRV_PRE_EMPTED();
    fn POLICY_ERRV_SUBNET_DEF_FLOW_COUNT();
    fn POLICY_ERRV_SUBNET_DEF_FLOW_DURATION();
    fn POLICY_ERRV_SUBNET_DEF_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_DEF_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_DEF_SUM_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_DEF_SUM_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_GRP_FLOW_COUNT();
    fn POLICY_ERRV_SUBNET_GRP_FLOW_DURATION();
    fn POLICY_ERRV_SUBNET_GRP_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_GRP_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_GRP_SUM_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_GRP_SUM_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_COUNT();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_DURATION();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_USER_FLOW_COUNT();
    fn POLICY_ERRV_SUBNET_USER_FLOW_DURATION();
    fn POLICY_ERRV_SUBNET_USER_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_USER_PEAK_RATE();
    fn POLICY_ERRV_SUBNET_USER_SUM_FLOW_RATE();
    fn POLICY_ERRV_SUBNET_USER_SUM_PEAK_RATE();
    fn POLICY_ERRV_UNKNOWN();
    fn POLICY_ERRV_UNKNOWN_USER();
    fn POLICY_ERRV_UNSUPPORTED_CREDENTIAL_TYPE();
    fn POLICY_ERRV_USER_CHANGED();
    fn POLICY_LOCATOR_SUB_TYPE_ASCII_DN();
    fn POLICY_LOCATOR_SUB_TYPE_ASCII_DN_ENC();
    fn POLICY_LOCATOR_SUB_TYPE_UNICODE_DN();
    fn POLICY_LOCATOR_SUB_TYPE_UNICODE_DN_ENC();
    fn POSITIVE_INFINITY_RATE();
    fn PREDICTIVE_SERV();
    fn QOS();
    fn QOSAddSocketToFlow();
    fn QOSCancel();
    fn QOSCloseHandle();
    fn QOSCreateHandle();
    fn QOSEnumerateFlows();
    fn QOSNotifyFlow();
    fn QOSQueryFlow();
    fn QOSRemoveSocketFromFlow();
    fn QOSSPBASE();
    fn QOSSP_ERR_BASE();
    fn QOSSetFlow();
    fn QOSStartTrackingClient();
    fn QOSStopTrackingClient();
    fn QOS_DESTADDR();
    fn QOS_DIFFSERV();
    fn QOS_DIFFSERV_RULE();
    fn QOS_DS_CLASS();
    fn QOS_FLOWRATE_OUTGOING();
    fn QOS_FLOWRATE_REASON();
    fn QOS_FLOW_FUNDAMENTALS();
    fn QOS_FRIENDLY_NAME();
    fn QOS_GENERAL_ID_BASE();
    fn QOS_MAX_OBJECT_STRING_LENGTH();
    fn QOS_NON_ADAPTIVE_FLOW();
    fn QOS_NOTIFY_FLOW();
    fn QOS_NOT_SPECIFIED();
    fn QOS_OBJECT_HDR();
    fn QOS_OUTGOING_DEFAULT_MINIMUM_BANDWIDTH();
    fn QOS_PACKET_PRIORITY();
    fn QOS_QUERYFLOW_FRESH();
    fn QOS_QUERY_FLOW();
    fn QOS_SD_MODE();
    fn QOS_SET_FLOW();
    fn QOS_SHAPING();
    fn QOS_SHAPING_RATE();
    fn QOS_TCP_TRAFFIC();
    fn QOS_TRAFFIC_CLASS();
    fn QOS_TRAFFIC_GENERAL_ID_BASE();
    fn QOS_TRAFFIC_TYPE();
    fn QOS_VERSION();
    fn QUALITATIVE_SERV();
    fn QualAppFlowSpec();
    fn QualTspec();
    fn QualTspecParms();
    fn RCVD_PATH_TEAR();
    fn RCVD_RESV_TEAR();
    fn RESOURCES_ALLOCATED();
    fn RESOURCES_MODIFIED();
    fn RESV_STYLE();
    fn RHANDLE();
    fn RSVP_ADSPEC();
    fn RSVP_DEFAULT_STYLE();
    fn RSVP_Err_ADMISSION();
    fn RSVP_Err_AMBIG_FILTER();
    fn RSVP_Err_API_ERROR();
    fn RSVP_Err_BAD_DSTPORT();
    fn RSVP_Err_BAD_SNDPORT();
    fn RSVP_Err_BAD_STYLE();
    fn RSVP_Err_NONE();
    fn RSVP_Err_NO_PATH();
    fn RSVP_Err_NO_SENDER();
    fn RSVP_Err_POLICY();
    fn RSVP_Err_PREEMPTED();
    fn RSVP_Err_RSVP_SYS_ERROR();
    fn RSVP_Err_TC_ERROR();
    fn RSVP_Err_TC_SYS_ERROR();
    fn RSVP_Err_UNKNOWN_CTYPE();
    fn RSVP_Err_UNKNOWN_STYLE();
    fn RSVP_Err_UNKN_OBJ_CLASS();
    fn RSVP_Erv_API();
    fn RSVP_Erv_Bandwidth();
    fn RSVP_Erv_Bucket_szie();
    fn RSVP_Erv_Conflict_Serv();
    fn RSVP_Erv_Crazy_Flowspec();
    fn RSVP_Erv_Crazy_Tspec();
    fn RSVP_Erv_DelayBnd();
    fn RSVP_Erv_Flow_Rate();
    fn RSVP_Erv_MEMORY();
    fn RSVP_Erv_MTU();
    fn RSVP_Erv_Min_Policied_size();
    fn RSVP_Erv_No_Serv();
    fn RSVP_Erv_Nonev();
    fn RSVP_Erv_Other();
    fn RSVP_Erv_Peak_Rate();
    fn RSVP_FILTERSPEC();
    fn RSVP_FILTERSPEC_V4();
    fn RSVP_FILTERSPEC_V4_GPI();
    fn RSVP_FILTERSPEC_V6();
    fn RSVP_FILTERSPEC_V6_FLOW();
    fn RSVP_FILTERSPEC_V6_GPI();
    fn RSVP_FIXED_FILTER_STYLE();
    fn RSVP_HOP();
    fn RSVP_MSG_OBJS();
    fn RSVP_OBJECT_ID_BASE();
    fn RSVP_PATH();
    fn RSVP_PATH_ERR();
    fn RSVP_PATH_TEAR();
    fn RSVP_POLICY();
    fn RSVP_POLICY_INFO();
    fn RSVP_RESERVE_INFO();
    fn RSVP_RESV();
    fn RSVP_RESV_ERR();
    fn RSVP_RESV_TEAR();
    fn RSVP_SCOPE();
    fn RSVP_SESSION();
    fn RSVP_SHARED_EXPLICIT_STYLE();
    fn RSVP_STATUS_INFO();
    fn RSVP_WILDCARD_STYLE();
    fn RsvpObjHdr();
    fn Rsvp_Hop_IPv4();
    fn SENDER_TSPEC();
    fn SERVICETYPE_BESTEFFORT();
    fn SERVICETYPE_CONTROLLEDLOAD();
    fn SERVICETYPE_GENERAL_INFORMATION();
    fn SERVICETYPE_GUARANTEED();
    fn SERVICETYPE_NETWORK_CONTROL();
    fn SERVICETYPE_NETWORK_UNAVAILABLE();
    fn SERVICETYPE_NOCHANGE();
    fn SERVICETYPE_NONCONFORMING();
    fn SERVICETYPE_NOTRAFFIC();
    fn SERVICETYPE_QUALITATIVE();
    fn SERVICE_BESTEFFORT();
    fn SERVICE_CONTROLLEDLOAD();
    fn SERVICE_GUARANTEED();
    fn SERVICE_NO_QOS_SIGNALING();
    fn SERVICE_NO_TRAFFIC_CONTROL();
    fn SERVICE_QUALITATIVE();
    fn SESSFLG_E_Police();
    fn SIPAERROR_FIRMWAREFAILURE();
    fn SIPAERROR_INTERNALFAILURE();
    fn SIPAEVENTTYPE_AGGREGATION();
    fn SIPAEVENTTYPE_AUTHORITY();
    fn SIPAEVENTTYPE_CONTAINER();
    fn SIPAEVENTTYPE_DRTM();
    fn SIPAEVENTTYPE_ELAM();
    fn SIPAEVENTTYPE_ERROR();
    fn SIPAEVENTTYPE_INFORMATION();
    fn SIPAEVENTTYPE_KSR();
    fn SIPAEVENTTYPE_LOADEDMODULE();
    fn SIPAEVENTTYPE_NONMEASURED();
    fn SIPAEVENTTYPE_OSPARAMETER();
    fn SIPAEVENTTYPE_PREOSPARAMETER();
    fn SIPAEVENTTYPE_TRUSTPOINT();
    fn SIPAEVENTTYPE_VBS();
    fn SIPAEVENT_APPLICATION_RETURN();
    fn SIPAEVENT_APPLICATION_SVN();
    fn SIPAEVENT_AUTHENTICODEHASH();
    fn SIPAEVENT_AUTHORITYISSUER();
    fn SIPAEVENT_AUTHORITYPUBKEY();
    fn SIPAEVENT_AUTHORITYPUBLISHER();
    fn SIPAEVENT_AUTHORITYSERIAL();
    fn SIPAEVENT_AUTHORITYSHA1THUMBPRINT();
    fn SIPAEVENT_BITLOCKER_UNLOCK();
    fn SIPAEVENT_BOOTCOUNTER();
    fn SIPAEVENT_BOOTDEBUGGING();
    fn SIPAEVENT_BOOT_REVOCATION_LIST();
    fn SIPAEVENT_CODEINTEGRITY();
    fn SIPAEVENT_COUNTERID();
    fn SIPAEVENT_DATAEXECUTIONPREVENTION();
    fn SIPAEVENT_DRIVER_LOAD_POLICY();
    fn SIPAEVENT_DRTM_AMD_SMM_HASH();
    fn SIPAEVENT_DRTM_AMD_SMM_SIGNER_KEY();
    fn SIPAEVENT_DRTM_SMM_LEVEL();
    fn SIPAEVENT_DRTM_STATE_AUTH();
    fn SIPAEVENT_DUMPS_DISABLED();
    fn SIPAEVENT_DUMP_ENCRYPTION_ENABLED();
    fn SIPAEVENT_DUMP_ENCRYPTION_KEY_DIGEST();
    fn SIPAEVENT_ELAM_CONFIGURATION();
    fn SIPAEVENT_ELAM_KEYNAME();
    fn SIPAEVENT_ELAM_MEASURED();
    fn SIPAEVENT_ELAM_POLICY();
    fn SIPAEVENT_EVENTCOUNTER();
    fn SIPAEVENT_FILEPATH();
    fn SIPAEVENT_FLIGHTSIGNING();
    fn SIPAEVENT_HASHALGORITHMID();
    fn SIPAEVENT_HIBERNATION_DISABLED();
    fn SIPAEVENT_HYPERVISOR_BOOT_DMA_PROTECTION();
    fn SIPAEVENT_HYPERVISOR_DEBUG();
    fn SIPAEVENT_HYPERVISOR_IOMMU_POLICY();
    fn SIPAEVENT_HYPERVISOR_LAUNCH_TYPE();
    fn SIPAEVENT_HYPERVISOR_MMIO_NX_POLICY();
    fn SIPAEVENT_HYPERVISOR_MSR_FILTER_POLICY();
    fn SIPAEVENT_HYPERVISOR_PATH();
    fn SIPAEVENT_IMAGEBASE();
    fn SIPAEVENT_IMAGESIZE();
    fn SIPAEVENT_IMAGEVALIDATED();
    fn SIPAEVENT_INFORMATION();
    fn SIPAEVENT_KSR_SIGNATURE();
    fn SIPAEVENT_LSAISO_CONFIG();
    fn SIPAEVENT_MODULE_SVN();
    fn SIPAEVENT_MORBIT_API_STATUS();
    fn SIPAEVENT_MORBIT_NOT_CANCELABLE();
    fn SIPAEVENT_NOAUTHORITY();
    fn SIPAEVENT_OSDEVICE();
    fn SIPAEVENT_OSKERNELDEBUG();
    fn SIPAEVENT_OS_REVOCATION_LIST();
    fn SIPAEVENT_PAGEFILE_ENCRYPTION_ENABLED();
    fn SIPAEVENT_PHYSICALADDRESSEXTENSION();
    fn SIPAEVENT_SAFEMODE();
    fn SIPAEVENT_SBCP_INFO();
    fn SIPAEVENT_SI_POLICY();
    fn SIPAEVENT_SMT_STATUS();
    fn SIPAEVENT_SVN_CHAIN_STATUS();
    fn SIPAEVENT_SYSTEMROOT();
    fn SIPAEVENT_TESTSIGNING();
    fn SIPAEVENT_TRANSFER_CONTROL();
    fn SIPAEVENT_VBS_DUMP_USES_AMEROOT();
    fn SIPAEVENT_VBS_HVCI_POLICY();
    fn SIPAEVENT_VBS_IOMMU_REQUIRED();
    fn SIPAEVENT_VBS_MANDATORY_ENFORCEMENT();
    fn SIPAEVENT_VBS_MICROSOFT_BOOT_CHAIN_REQUIRED();
    fn SIPAEVENT_VBS_MMIO_NX_REQUIRED();
    fn SIPAEVENT_VBS_MSR_FILTERING_REQUIRED();
    fn SIPAEVENT_VBS_SECUREBOOT_REQUIRED();
    fn SIPAEVENT_VBS_VSM_NOSECRETS_ENFORCED();
    fn SIPAEVENT_VBS_VSM_REQUIRED();
    fn SIPAEVENT_VSM_IDKS_INFO();
    fn SIPAEVENT_VSM_IDK_INFO();
    fn SIPAEVENT_VSM_LAUNCH_TYPE();
    fn SIPAEVENT_WINPE();
    fn SIPAEV_ACTION();
    fn SIPAEV_AMD_SL_EVENT_BASE();
    fn SIPAEV_AMD_SL_LOAD();
    fn SIPAEV_AMD_SL_LOAD_1();
    fn SIPAEV_AMD_SL_PSP_FW_SPLT();
    fn SIPAEV_AMD_SL_PUB_KEY();
    fn SIPAEV_AMD_SL_SEPARATOR();
    fn SIPAEV_AMD_SL_SVN();
    fn SIPAEV_AMD_SL_TSME_RB_FUSE();
    fn SIPAEV_COMPACT_HASH();
    fn SIPAEV_CPU_MICROCODE();
    fn SIPAEV_EFI_ACTION();
    fn SIPAEV_EFI_BOOT_SERVICES_APPLICATION();
    fn SIPAEV_EFI_BOOT_SERVICES_DRIVER();
    fn SIPAEV_EFI_EVENT_BASE();
    fn SIPAEV_EFI_GPT_EVENT();
    fn SIPAEV_EFI_HANDOFF_TABLES();
    fn SIPAEV_EFI_HANDOFF_TABLES2();
    fn SIPAEV_EFI_HCRTM_EVENT();
    fn SIPAEV_EFI_PLATFORM_FIRMWARE_BLOB();
    fn SIPAEV_EFI_PLATFORM_FIRMWARE_BLOB2();
    fn SIPAEV_EFI_RUNTIME_SERVICES_DRIVER();
    fn SIPAEV_EFI_SPDM_FIRMWARE_BLOB();
    fn SIPAEV_EFI_SPDM_FIRMWARE_CONFIG();
    fn SIPAEV_EFI_VARIABLE_AUTHORITY();
    fn SIPAEV_EFI_VARIABLE_BOOT();
    fn SIPAEV_EFI_VARIABLE_DRIVER_CONFIG();
    fn SIPAEV_EVENT_TAG();
    fn SIPAEV_IPL();
    fn SIPAEV_IPL_PARTITION_DATA();
    fn SIPAEV_NONHOST_CODE();
    fn SIPAEV_NONHOST_CONFIG();
    fn SIPAEV_NONHOST_INFO();
    fn SIPAEV_NO_ACTION();
    fn SIPAEV_OMIT_BOOT_DEVICE_EVENTS();
    fn SIPAEV_PLATFORM_CONFIG_FLAGS();
    fn SIPAEV_POST_CODE();
    fn SIPAEV_PREBOOT_CERT();
    fn SIPAEV_SEPARATOR();
    fn SIPAEV_S_CRTM_CONTENTS();
    fn SIPAEV_S_CRTM_VERSION();
    fn SIPAEV_TABLE_OF_DEVICES();
    fn SIPAEV_TXT_BIOSAC_REG_DATA();
    fn SIPAEV_TXT_BOOT_POL_HASH();
    fn SIPAEV_TXT_BPM_HASH();
    fn SIPAEV_TXT_BPM_INFO_HASH();
    fn SIPAEV_TXT_CAP_VALUE();
    fn SIPAEV_TXT_COLD_BOOT_BIOS_HASH();
    fn SIPAEV_TXT_COMBINED_HASH();
    fn SIPAEV_TXT_CPU_SCRTM_STAT();
    fn SIPAEV_TXT_ELEMENTS_HASH();
    fn SIPAEV_TXT_EVENT_BASE();
    fn SIPAEV_TXT_HASH_START();
    fn SIPAEV_TXT_KM_HASH();
    fn SIPAEV_TXT_KM_INFO_HASH();
    fn SIPAEV_TXT_LCP_AUTHORITIES_HASH();
    fn SIPAEV_TXT_LCP_CONTROL_HASH();
    fn SIPAEV_TXT_LCP_DETAILS_HASH();
    fn SIPAEV_TXT_LCP_HASH();
    fn SIPAEV_TXT_MLE_HASH();
    fn SIPAEV_TXT_NV_INFO_HASH();
    fn SIPAEV_TXT_OSSINITDATA_CAP_HASH();
    fn SIPAEV_TXT_PCR_MAPPING();
    fn SIPAEV_TXT_RANDOM_VALUE();
    fn SIPAEV_TXT_SINIT_PUBKEY_HASH();
    fn SIPAEV_TXT_STM_HASH();
    fn SIPAEV_UNUSED();
    fn SIPAHDRSIGNATURE();
    fn SIPAKSRHDRSIGNATURE();
    fn SIPALOGVERSION();
    fn STATE_TIMEOUT();
    fn Scope_list_ipv4();
    fn Session_IPv4();
    fn TCBASE();
    fn TCG_PCClientPCREventStruct();
    fn TCG_PCClientTaggedEventStruct();
    fn TCI_ADD_FLOW_COMPLETE_HANDLER();
    fn TCI_CLIENT_FUNC_LIST();
    fn TCI_DEL_FLOW_COMPLETE_HANDLER();
    fn TCI_MOD_FLOW_COMPLETE_HANDLER();
    fn TCI_NOTIFY_HANDLER();
    fn TC_GEN_FILTER();
    fn TC_GEN_FLOW();
    fn TC_IFC_DESCRIPTOR();
    fn TC_NONCONF_BORROW();
    fn TC_NONCONF_BORROW_PLUS();
    fn TC_NONCONF_DISCARD();
    fn TC_NONCONF_SHAPE();
    fn TC_NOTIFY_FLOW_CLOSE();
    fn TC_NOTIFY_IFC_CHANGE();
    fn TC_NOTIFY_IFC_CLOSE();
    fn TC_NOTIFY_IFC_UP();
    fn TC_NOTIFY_PARAM_CHANGED();
    fn TC_SUPPORTED_INFO_BUFFER();
    fn TcAddFilter();
    fn TcAddFlow();
    fn TcCloseInterface();
    fn TcDeleteFilter();
    fn TcDeleteFlow();
    fn TcDeregisterClient();
    fn TcEnumerateFlows();
    fn TcEnumerateInterfaces();
    fn TcGetFlowNameA();
    fn TcGetFlowNameW();
    fn TcModifyFlow();
    fn TcOpenInterfaceA();
    fn TcOpenInterfaceW();
    fn TcQueryFlowA();
    fn TcQueryFlowW();
    fn TcQueryInterface();
    fn TcRegisterClient();
    fn TcSetFlowA();
    fn TcSetFlowW();
    fn TcSetInterface();
    fn UNSUPPORTED_CREDENTIAL_TYPE();
    fn WBCL_DIGEST_ALG_BITMAP_SHA3_256();
    fn WBCL_DIGEST_ALG_BITMAP_SHA3_384();
    fn WBCL_DIGEST_ALG_BITMAP_SHA3_512();
    fn WBCL_DIGEST_ALG_BITMAP_SHA_1();
    fn WBCL_DIGEST_ALG_BITMAP_SHA_2_256();
    fn WBCL_DIGEST_ALG_BITMAP_SHA_2_384();
    fn WBCL_DIGEST_ALG_BITMAP_SHA_2_512();
    fn WBCL_DIGEST_ALG_BITMAP_SM3_256();
    fn WBCL_DIGEST_ALG_ID_SHA3_256();
    fn WBCL_DIGEST_ALG_ID_SHA3_384();
    fn WBCL_DIGEST_ALG_ID_SHA3_512();
    fn WBCL_DIGEST_ALG_ID_SHA_1();
    fn WBCL_DIGEST_ALG_ID_SHA_2_256();
    fn WBCL_DIGEST_ALG_ID_SHA_2_384();
    fn WBCL_DIGEST_ALG_ID_SHA_2_512();
    fn WBCL_DIGEST_ALG_ID_SM3_256();
    fn WBCL_HASH_LEN_SHA1();
    fn WBCL_Iterator();
    fn WBCL_LogHdr();
    fn flow_desc();
    fn int_serv_wkp();
    fn lpmiptable();
    fn policy_decision();
    fn tag_SIPAEVENT_KSR_SIGNATURE_PAYLOAD();
    fn tag_SIPAEVENT_REVOCATION_LIST_PAYLOAD();
    fn tag_SIPAEVENT_SBCP_INFO_PAYLOAD_V1();
    fn tag_SIPAEVENT_SI_POLICY_PAYLOAD();
    fn tag_SIPAEVENT_VSM_IDK_INFO_PAYLOAD();
    fn tag_SIPAEVENT_VSM_IDK_RSA_INFO();
}
