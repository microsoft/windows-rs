#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn AddLogContainer();
    fn AddLogContainerSet();
    fn AddUsersToEncryptedFile();
    fn AdvanceLogBase();
    fn AlignReservedLog();
    fn AllocReservedLog();
    fn AreFileApisANSI();
    fn AreShortNamesEnabled();
    fn BY_HANDLE_FILE_INFORMATION();
    fn BackupRead();
    fn BackupSeek();
    fn BackupWrite();
    fn BuildIoRingCancelRequest();
    fn BuildIoRingReadFile();
    fn BuildIoRingRegisterBuffers();
    fn BuildIoRingRegisterFileHandles();
    fn CACHE_ACCESS_CHECK();
    fn CACHE_DESTROY_CALLBACK();
    fn CACHE_KEY_COMPARE();
    fn CACHE_KEY_HASH();
    fn CACHE_READ_CALLBACK();
    fn CLAIMMEDIALABEL();
    fn CLAIMMEDIALABELEX();
    fn CLFS_BLOCK_ALLOCATION();
    fn CLFS_BLOCK_DEALLOCATION();
    fn CLFS_CONTEXT_MODE();
    fn CLFS_FLAG();
    fn CLFS_FLAG_FILTER_INTERMEDIATE_LEVEL();
    fn CLFS_FLAG_FILTER_TOP_LEVEL();
    fn CLFS_FLAG_HIDDEN_SYSTEM_LOG();
    fn CLFS_FLAG_IGNORE_SHARE_ACCESS();
    fn CLFS_FLAG_MINIFILTER_LEVEL();
    fn CLFS_FLAG_NON_REENTRANT_FILTER();
    fn CLFS_FLAG_READ_IN_PROGRESS();
    fn CLFS_FLAG_REENTRANT_FILE_SYSTEM();
    fn CLFS_FLAG_REENTRANT_FILTER();
    fn CLFS_IOSTATS_CLASS();
    fn CLFS_LOG_ARCHIVE_MODE();
    fn CLFS_LOG_NAME_INFORMATION();
    fn CLFS_MARSHALLING_FLAG_DISABLE_BUFF_INIT();
    fn CLFS_MARSHALLING_FLAG_NONE();
    fn CLFS_MAX_CONTAINER_INFO();
    fn CLFS_MGMT_CLIENT_REGISTRATION_VERSION();
    fn CLFS_MGMT_NOTIFICATION();
    fn CLFS_MGMT_NOTIFICATION_TYPE();
    fn CLFS_MGMT_POLICY();
    fn CLFS_MGMT_POLICY_TYPE();
    fn CLFS_MGMT_POLICY_VERSION();
    fn CLFS_NODE_ID();
    fn CLFS_PHYSICAL_LSN_INFORMATION();
    fn CLFS_SCAN_BACKWARD();
    fn CLFS_SCAN_BUFFERED();
    fn CLFS_SCAN_CLOSE();
    fn CLFS_SCAN_FORWARD();
    fn CLFS_SCAN_INIT();
    fn CLFS_SCAN_INITIALIZED();
    fn CLFS_STREAM_ID_INFORMATION();
    fn CLSID_DiskQuotaControl();
    fn CLS_ARCHIVE_DESCRIPTOR();
    fn CLS_CONTAINER_INFORMATION();
    fn CLS_CONTEXT_MODE();
    fn CLS_INFORMATION();
    fn CLS_IOSTATS_CLASS();
    fn CLS_IO_STATISTICS();
    fn CLS_IO_STATISTICS_HEADER();
    fn CLS_LOG_INFORMATION_CLASS();
    fn CLS_LSN();
    fn CLS_SCAN_CONTEXT();
    fn CLS_WRITE_ENTRY();
    fn CONNECTION_INFO_0();
    fn CONNECTION_INFO_1();
    fn COPYFILE2_COPY_PHASE();
    fn COPYFILE2_EXTENDED_PARAMETERS();
    fn COPYFILE2_EXTENDED_PARAMETERS_V2();
    fn COPYFILE2_MESSAGE();
    fn COPYFILE2_MESSAGE_ACTION();
    fn COPYFILE2_MESSAGE_TYPE();
    fn CREATEFILE2_EXTENDED_PARAMETERS();
    fn CREATE_TAPE_PARTITION_METHOD();
    fn CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO();
    fn CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY();
    fn CRM_PROTOCOL_MAXIMUM_OPTION();
    fn CSC_CACHE_AUTO_REINT();
    fn CSC_CACHE_MANUAL_REINT();
    fn CSC_CACHE_NONE();
    fn CSC_CACHE_VDO();
    fn CSC_MASK();
    fn CSC_MASK_EXT();
    fn CSV_BLOCK_AND_FILE_CACHE_CALLBACK_VERSION();
    fn CSV_BLOCK_CACHE_CALLBACK_VERSION();
    fn CheckNameLegalDOS8Dot3A();
    fn CheckNameLegalDOS8Dot3W();
    fn ClfsClientRecord();
    fn ClfsContainerActive();
    fn ClfsContainerActivePendingDelete();
    fn ClfsContainerInactive();
    fn ClfsContainerInitializing();
    fn ClfsContainerPendingArchive();
    fn ClfsContainerPendingArchiveAndDelete();
    fn ClfsDataRecord();
    fn ClfsNullRecord();
    fn ClfsRestartRecord();
    fn CloseAndResetLogFile();
    fn CloseEncryptedFileRaw();
    fn CloseIoRing();
    fn ClsContainerActive();
    fn ClsContainerActivePendingDelete();
    fn ClsContainerInactive();
    fn ClsContainerInitializing();
    fn ClsContainerPendingArchive();
    fn ClsContainerPendingArchiveAndDelete();
    fn CommitComplete();
    fn CommitEnlistment();
    fn CommitTransaction();
    fn CommitTransactionAsync();
    fn CompareFileTime();
    fn CopyFile2();
    fn CopyFileA();
    fn CopyFileExA();
    fn CopyFileExW();
    fn CopyFileFromAppW();
    fn CopyFileTransactedA();
    fn CopyFileTransactedW();
    fn CopyFileW();
    fn CopyLZFile();
    fn CreateDirectoryA();
    fn CreateDirectoryExA();
    fn CreateDirectoryExW();
    fn CreateDirectoryFromAppW();
    fn CreateDirectoryTransactedA();
    fn CreateDirectoryTransactedW();
    fn CreateDirectoryW();
    fn CreateEnlistment();
    fn CreateFile2();
    fn CreateFile2FromAppW();
    fn CreateFileA();
    fn CreateFileFromAppW();
    fn CreateFileTransactedA();
    fn CreateFileTransactedW();
    fn CreateFileW();
    fn CreateHardLinkA();
    fn CreateHardLinkTransactedA();
    fn CreateHardLinkTransactedW();
    fn CreateHardLinkW();
    fn CreateIoRing();
    fn CreateLogContainerScanContext();
    fn CreateLogFile();
    fn CreateLogMarshallingArea();
    fn CreateResourceManager();
    fn CreateSymbolicLinkA();
    fn CreateSymbolicLinkTransactedA();
    fn CreateSymbolicLinkTransactedW();
    fn CreateSymbolicLinkW();
    fn CreateTapePartition();
    fn CreateTransaction();
    fn CreateTransactionManager();
    fn DEFINE_DOS_DEVICE_FLAGS();
    fn DISKQUOTA_FILESTATE_INCOMPLETE();
    fn DISKQUOTA_FILESTATE_MASK();
    fn DISKQUOTA_FILESTATE_REBUILDING();
    fn DISKQUOTA_LOGFLAG_USER_LIMIT();
    fn DISKQUOTA_LOGFLAG_USER_THRESHOLD();
    fn DISKQUOTA_STATE_DISABLED();
    fn DISKQUOTA_STATE_ENFORCE();
    fn DISKQUOTA_STATE_MASK();
    fn DISKQUOTA_STATE_TRACK();
    fn DISKQUOTA_USERNAME_RESOLVE();
    fn DISKQUOTA_USER_ACCOUNT_DELETED();
    fn DISKQUOTA_USER_ACCOUNT_INVALID();
    fn DISKQUOTA_USER_ACCOUNT_RESOLVED();
    fn DISKQUOTA_USER_ACCOUNT_UNAVAILABLE();
    fn DISKQUOTA_USER_ACCOUNT_UNKNOWN();
    fn DISKQUOTA_USER_ACCOUNT_UNRESOLVED();
    fn DISKQUOTA_USER_INFORMATION();
    fn DISK_SPACE_INFORMATION();
    fn DecryptFileA();
    fn DecryptFileW();
    fn DefineDosDeviceA();
    fn DefineDosDeviceW();
    fn DeleteFileA();
    fn DeleteFileFromAppW();
    fn DeleteFileTransactedA();
    fn DeleteFileTransactedW();
    fn DeleteFileW();
    fn DeleteLogByHandle();
    fn DeleteLogFile();
    fn DeleteLogMarshallingArea();
    fn DeleteVolumeMountPointA();
    fn DeleteVolumeMountPointW();
    fn DeregisterManageableLogClient();
    fn DuplicateEncryptionInfoFile();
    fn EFS_CERTIFICATE_BLOB();
    fn EFS_COMPATIBILITY_INFO();
    fn EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR();
    fn EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR();
    fn EFS_DECRYPTION_STATUS_INFO();
    fn EFS_EFS_SUBVER_EFS_CERT();
    fn EFS_ENCRYPTION_STATUS_INFO();
    fn EFS_HASH_BLOB();
    fn EFS_KEY_INFO();
    fn EFS_METADATA_ADD_USER();
    fn EFS_METADATA_GENERAL_OP();
    fn EFS_METADATA_REMOVE_USER();
    fn EFS_METADATA_REPLACE_USER();
    fn EFS_PFILE_SUBVER_APPX();
    fn EFS_PFILE_SUBVER_RMS();
    fn EFS_PIN_BLOB();
    fn EFS_RPC_BLOB();
    fn EFS_SUBVER_UNKNOWN();
    fn EFS_VERSION_INFO();
    fn ENCRYPTED_FILE_METADATA_SIGNATURE();
    fn ENCRYPTION_CERTIFICATE();
    fn ENCRYPTION_CERTIFICATE_HASH();
    fn ENCRYPTION_CERTIFICATE_HASH_LIST();
    fn ENCRYPTION_CERTIFICATE_LIST();
    fn ENCRYPTION_PROTECTOR();
    fn ENCRYPTION_PROTECTOR_LIST();
    fn ENLISTMENT_MAXIMUM_OPTION();
    fn ENLISTMENT_SUPERIOR();
    fn ERASE_TAPE_TYPE();
    fn EncryptFileA();
    fn EncryptFileW();
    fn EncryptionDisable();
    fn EraseTape();
    fn FCACHE_CREATE_CALLBACK();
    fn FCACHE_RICHCREATE_CALLBACK();
    fn FH_OVERLAPPED();
    fn FILE_ACCESS_FLAGS();
    fn FILE_ACTION();
    fn FILE_ALIGNMENT_INFO();
    fn FILE_ALLOCATION_INFO();
    fn FILE_ATTRIBUTE_TAG_INFO();
    fn FILE_BASIC_INFO();
    fn FILE_COMPRESSION_INFO();
    fn FILE_CREATION_DISPOSITION();
    fn FILE_DEVICE_TYPE();
    fn FILE_DISPOSITION_INFO();
    fn FILE_END_OF_FILE_INFO();
    fn FILE_EXTENT();
    fn FILE_FLAGS_AND_ATTRIBUTES();
    fn FILE_FULL_DIR_INFO();
    fn FILE_ID_128();
    fn FILE_ID_BOTH_DIR_INFO();
    fn FILE_ID_DESCRIPTOR();
    fn FILE_ID_EXTD_DIR_INFO();
    fn FILE_ID_INFO();
    fn FILE_ID_TYPE();
    fn FILE_INFO_2();
    fn FILE_INFO_3();
    fn FILE_INFO_BY_HANDLE_CLASS();
    fn FILE_INFO_FLAGS_PERMISSIONS();
    fn FILE_IO_PRIORITY_HINT_INFO();
    fn FILE_NAME();
    fn FILE_NAME_INFO();
    fn FILE_NOTIFY_CHANGE();
    fn FILE_NOTIFY_EXTENDED_INFORMATION();
    fn FILE_NOTIFY_INFORMATION();
    fn FILE_PROVIDER_COMPRESSION_LZX();
    fn FILE_PROVIDER_COMPRESSION_XPRESS16K();
    fn FILE_PROVIDER_COMPRESSION_XPRESS4K();
    fn FILE_PROVIDER_COMPRESSION_XPRESS8K();
    fn FILE_REMOTE_PROTOCOL_INFO();
    fn FILE_RENAME_INFO();
    fn FILE_SEGMENT_ELEMENT();
    fn FILE_SHARE_MODE();
    fn FILE_STANDARD_INFO();
    fn FILE_STORAGE_INFO();
    fn FILE_STREAM_INFO();
    fn FINDEX_INFO_LEVELS();
    fn FINDEX_SEARCH_OPS();
    fn FIND_FIRST_EX_FLAGS();
    fn FIO_CONTEXT();
    fn FileEncryptionStatusA();
    fn FileEncryptionStatusW();
    fn FileTimeToLocalFileTime();
    fn FindChangeNotificationHandle();
    fn FindClose();
    fn FindCloseChangeNotification();
    fn FindFileHandle();
    fn FindFileNameHandle();
    fn FindFirstChangeNotificationA();
    fn FindFirstChangeNotificationW();
    fn FindFirstFileA();
    fn FindFirstFileExA();
    fn FindFirstFileExFromAppW();
    fn FindFirstFileExW();
    fn FindFirstFileNameTransactedW();
    fn FindFirstFileNameW();
    fn FindFirstFileTransactedA();
    fn FindFirstFileTransactedW();
    fn FindFirstFileW();
    fn FindFirstStreamTransactedW();
    fn FindFirstStreamW();
    fn FindFirstVolumeA();
    fn FindFirstVolumeMountPointA();
    fn FindFirstVolumeMountPointW();
    fn FindFirstVolumeW();
    fn FindNextChangeNotification();
    fn FindNextFileA();
    fn FindNextFileNameW();
    fn FindNextFileW();
    fn FindNextStreamW();
    fn FindNextVolumeA();
    fn FindNextVolumeMountPointA();
    fn FindNextVolumeMountPointW();
    fn FindNextVolumeW();
    fn FindStreamHandle();
    fn FindVolumeClose();
    fn FindVolumeHandle();
    fn FindVolumeMointPointHandle();
    fn FindVolumeMountPointClose();
    fn FlushFileBuffers();
    fn FlushLogBuffers();
    fn FlushLogToLsn();
    fn FreeEncryptedFileMetadata();
    fn FreeEncryptionCertificateHashList();
    fn FreeReservedLog();
    fn GET_FILEEX_INFO_LEVELS();
    fn GET_FILE_VERSION_INFO_FLAGS();
    fn GET_TAPE_DRIVE_PARAMETERS_OPERATION();
    fn GetBinaryTypeA();
    fn GetBinaryTypeW();
    fn GetCompressedFileSizeA();
    fn GetCompressedFileSizeTransactedA();
    fn GetCompressedFileSizeTransactedW();
    fn GetCompressedFileSizeW();
    fn GetCurrentClockTransactionManager();
    fn GetDiskFreeSpaceA();
    fn GetDiskFreeSpaceExA();
    fn GetDiskFreeSpaceExW();
    fn GetDiskFreeSpaceW();
    fn GetDiskSpaceInformationA();
    fn GetDiskSpaceInformationW();
    fn GetDriveTypeA();
    fn GetDriveTypeW();
    fn GetEncryptedFileMetadata();
    fn GetEnlistmentId();
    fn GetEnlistmentRecoveryInformation();
    fn GetExpandedNameA();
    fn GetExpandedNameW();
    fn GetFileAttributesA();
    fn GetFileAttributesExA();
    fn GetFileAttributesExFromAppW();
    fn GetFileAttributesExW();
    fn GetFileAttributesTransactedA();
    fn GetFileAttributesTransactedW();
    fn GetFileAttributesW();
    fn GetFileBandwidthReservation();
    fn GetFileInformationByHandle();
    fn GetFileInformationByHandleEx();
    fn GetFileSize();
    fn GetFileSizeEx();
    fn GetFileTime();
    fn GetFileType();
    fn GetFileVersionInfoA();
    fn GetFileVersionInfoExA();
    fn GetFileVersionInfoExW();
    fn GetFileVersionInfoSizeA();
    fn GetFileVersionInfoSizeExA();
    fn GetFileVersionInfoSizeExW();
    fn GetFileVersionInfoSizeW();
    fn GetFileVersionInfoW();
    fn GetFinalPathNameByHandleA();
    fn GetFinalPathNameByHandleW();
    fn GetFullPathNameA();
    fn GetFullPathNameTransactedA();
    fn GetFullPathNameTransactedW();
    fn GetFullPathNameW();
    fn GetIoRingInfo();
    fn GetLogContainerName();
    fn GetLogFileInformation();
    fn GetLogIoStatistics();
    fn GetLogReservationInfo();
    fn GetLogicalDriveStringsA();
    fn GetLogicalDriveStringsW();
    fn GetLogicalDrives();
    fn GetLongPathNameA();
    fn GetLongPathNameTransactedA();
    fn GetLongPathNameTransactedW();
    fn GetLongPathNameW();
    fn GetNextLogArchiveExtent();
    fn GetNotificationResourceManager();
    fn GetNotificationResourceManagerAsync();
    fn GetShortPathNameA();
    fn GetShortPathNameW();
    fn GetTapeParameters();
    fn GetTapePosition();
    fn GetTapeStatus();
    fn GetTempFileNameA();
    fn GetTempFileNameW();
    fn GetTempPath2A();
    fn GetTempPath2W();
    fn GetTempPathA();
    fn GetTempPathW();
    fn GetTransactionId();
    fn GetTransactionInformation();
    fn GetTransactionManagerId();
    fn GetVolumeInformationA();
    fn GetVolumeInformationByHandleW();
    fn GetVolumeInformationW();
    fn GetVolumeNameForVolumeMountPointA();
    fn GetVolumeNameForVolumeMountPointW();
    fn GetVolumePathNameA();
    fn GetVolumePathNameW();
    fn GetVolumePathNamesForVolumeNameA();
    fn GetVolumePathNamesForVolumeNameW();
    fn HIORING__();
    fn HandleLogFull();
    fn IDiskQuotaControl();
    fn IDiskQuotaEvents();
    fn IDiskQuotaUser();
    fn IDiskQuotaUserBatch();
    fn IEnumDiskQuotaUsers();
    fn INVALID_FILE_ATTRIBUTES();
    fn INVALID_SET_FILE_POINTER();
    fn IOCTL_VOLUME_ALLOCATE_BC_STREAM();
    fn IOCTL_VOLUME_BASE();
    fn IOCTL_VOLUME_BC_VERSION();
    fn IOCTL_VOLUME_FREE_BC_STREAM();
    fn IOCTL_VOLUME_GET_BC_PROPERTIES();
    fn IOCTL_VOLUME_GET_CSVBLOCKCACHE_CALLBACK();
    fn IOCTL_VOLUME_GET_GPT_ATTRIBUTES();
    fn IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS();
    fn IOCTL_VOLUME_IS_CLUSTERED();
    fn IOCTL_VOLUME_IS_CSV();
    fn IOCTL_VOLUME_IS_DYNAMIC();
    fn IOCTL_VOLUME_IS_IO_CAPABLE();
    fn IOCTL_VOLUME_IS_OFFLINE();
    fn IOCTL_VOLUME_IS_PARTITION();
    fn IOCTL_VOLUME_LOGICAL_TO_PHYSICAL();
    fn IOCTL_VOLUME_OFFLINE();
    fn IOCTL_VOLUME_ONLINE();
    fn IOCTL_VOLUME_PHYSICAL_TO_LOGICAL();
    fn IOCTL_VOLUME_POST_ONLINE();
    fn IOCTL_VOLUME_PREPARE_FOR_CRITICAL_IO();
    fn IOCTL_VOLUME_PREPARE_FOR_SHRINK();
    fn IOCTL_VOLUME_QUERY_ALLOCATION_HINT();
    fn IOCTL_VOLUME_QUERY_FAILOVER_SET();
    fn IOCTL_VOLUME_QUERY_MINIMUM_SHRINK_SIZE();
    fn IOCTL_VOLUME_QUERY_VOLUME_NUMBER();
    fn IOCTL_VOLUME_READ_PLEX();
    fn IOCTL_VOLUME_SET_GPT_ATTRIBUTES();
    fn IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE();
    fn IOCTL_VOLUME_UPDATE_PROPERTIES();
    fn IORING_BUFFER_INFO();
    fn IORING_BUFFER_REF();
    fn IORING_CAPABILITIES();
    fn IORING_CQE();
    fn IORING_CREATE_ADVISORY_FLAGS();
    fn IORING_CREATE_FLAGS();
    fn IORING_CREATE_REQUIRED_FLAGS();
    fn IORING_FEATURE_FLAGS();
    fn IORING_HANDLE_REF();
    fn IORING_INFO();
    fn IORING_OP_CODE();
    fn IORING_REF_KIND();
    fn IORING_REGISTERED_BUFFER();
    fn IORING_SQE_FLAGS();
    fn IORING_VERSION();
    fn InstallLogPolicy();
    fn IsIoRingOpSupported();
    fn KCRM_MARSHAL_HEADER();
    fn KCRM_PROTOCOL_BLOB();
    fn KCRM_TRANSACTION_BLOB();
    fn KTM_MARSHAL_BLOB_VERSION_MAJOR();
    fn KTM_MARSHAL_BLOB_VERSION_MINOR();
    fn LOCK_FILE_FLAGS();
    fn LOG_MANAGEMENT_CALLBACKS();
    fn LOG_POLICY_OVERWRITE();
    fn LOG_POLICY_PERSIST();
    fn LPPROGRESS_ROUTINE();
    fn LPPROGRESS_ROUTINE_CALLBACK_REASON();
    fn LZClose();
    fn LZCopy();
    fn LZDone();
    fn LZERROR_BADINHANDLE();
    fn LZERROR_BADOUTHANDLE();
    fn LZERROR_BADVALUE();
    fn LZERROR_GLOBALLOC();
    fn LZERROR_GLOBLOCK();
    fn LZERROR_READ();
    fn LZERROR_UNKNOWNALG();
    fn LZERROR_WRITE();
    fn LZInit();
    fn LZOPENFILE_STYLE();
    fn LZOpenFileA();
    fn LZOpenFileW();
    fn LZRead();
    fn LZSeek();
    fn LZStart();
    fn LocalFileTimeToFileTime();
    fn LockFile();
    fn LockFileEx();
    fn LogTailAdvanceFailure();
    fn LsnBlockOffset();
    fn LsnContainer();
    fn LsnCreate();
    fn LsnEqual();
    fn LsnGreater();
    fn LsnIncrement();
    fn LsnInvalid();
    fn LsnLess();
    fn LsnNull();
    fn LsnRecordSequence();
    fn MAXMEDIALABEL();
    fn MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH();
    fn MAX_SID_SIZE();
    fn MAX_TRANSACTION_DESCRIPTION_LENGTH();
    fn MOVE_FILE_FLAGS();
    fn MediaLabelInfo();
    fn MoveFileA();
    fn MoveFileExA();
    fn MoveFileExW();
    fn MoveFileFromAppW();
    fn MoveFileTransactedA();
    fn MoveFileTransactedW();
    fn MoveFileW();
    fn MoveFileWithProgressA();
    fn MoveFileWithProgressW();
    fn NAME_CACHE_CONTEXT();
    fn NTMSMLI_MAXAPPDESCR();
    fn NTMSMLI_MAXIDSIZE();
    fn NTMSMLI_MAXTYPE();
    fn NTMS_ALLOCATION_INFORMATION();
    fn NTMS_APPLICATIONNAME_LENGTH();
    fn NTMS_ASYNC_IO();
    fn NTMS_BARCODE_LENGTH();
    fn NTMS_CHANGERINFORMATIONA();
    fn NTMS_CHANGERINFORMATIONW();
    fn NTMS_CHANGERTYPEINFORMATIONA();
    fn NTMS_CHANGERTYPEINFORMATIONW();
    fn NTMS_COMPUTERINFORMATION();
    fn NTMS_COMPUTERNAME_LENGTH();
    fn NTMS_DESCRIPTION_LENGTH();
    fn NTMS_DEVICENAME_LENGTH();
    fn NTMS_DRIVEINFORMATIONA();
    fn NTMS_DRIVEINFORMATIONW();
    fn NTMS_DRIVETYPEINFORMATIONA();
    fn NTMS_DRIVETYPEINFORMATIONW();
    fn NTMS_FILESYSTEM_INFO();
    fn NTMS_I1_LIBRARYINFORMATION();
    fn NTMS_I1_LIBREQUESTINFORMATIONA();
    fn NTMS_I1_LIBREQUESTINFORMATIONW();
    fn NTMS_I1_MESSAGE_LENGTH();
    fn NTMS_I1_OBJECTINFORMATIONA();
    fn NTMS_I1_OBJECTINFORMATIONW();
    fn NTMS_I1_OPREQUESTINFORMATIONA();
    fn NTMS_I1_OPREQUESTINFORMATIONW();
    fn NTMS_I1_PARTITIONINFORMATIONA();
    fn NTMS_I1_PARTITIONINFORMATIONW();
    fn NTMS_I1_PMIDINFORMATIONA();
    fn NTMS_I1_PMIDINFORMATIONW();
    fn NTMS_IEDOORINFORMATION();
    fn NTMS_IEPORTINFORMATION();
    fn NTMS_LIBRARYINFORMATION();
    fn NTMS_LIBREQUESTINFORMATIONA();
    fn NTMS_LIBREQUESTINFORMATIONW();
    fn NTMS_LMIDINFORMATION();
    fn NTMS_MAXATTR_LENGTH();
    fn NTMS_MAXATTR_NAMELEN();
    fn NTMS_MEDIAPOOLINFORMATION();
    fn NTMS_MEDIATYPEINFORMATION();
    fn NTMS_MESSAGE_LENGTH();
    fn NTMS_MOUNT_INFORMATION();
    fn NTMS_NOTIFICATIONINFORMATION();
    fn NTMS_OBJECTINFORMATIONA();
    fn NTMS_OBJECTINFORMATIONW();
    fn NTMS_OBJECTNAME_LENGTH();
    fn NTMS_OMIDLABELID_LENGTH();
    fn NTMS_OMIDLABELINFO_LENGTH();
    fn NTMS_OMIDLABELTYPE_LENGTH();
    fn NTMS_OMID_TYPE();
    fn NTMS_OPREQUESTINFORMATIONA();
    fn NTMS_OPREQUESTINFORMATIONW();
    fn NTMS_PARTITIONINFORMATIONA();
    fn NTMS_PARTITIONINFORMATIONW();
    fn NTMS_PMIDINFORMATIONA();
    fn NTMS_PMIDINFORMATIONW();
    fn NTMS_POOLHIERARCHY_LENGTH();
    fn NTMS_PRODUCTNAME_LENGTH();
    fn NTMS_REVISION_LENGTH();
    fn NTMS_SEQUENCE_LENGTH();
    fn NTMS_SERIALNUMBER_LENGTH();
    fn NTMS_STORAGESLOTINFORMATION();
    fn NTMS_USERNAME_LENGTH();
    fn NTMS_VENDORNAME_LENGTH();
    fn NT_CREATE_FILE_DISPOSITION();
    fn NetConnectionEnum();
    fn NetFileClose();
    fn NetFileEnum();
    fn NetFileGetInfo();
    fn NetServerAliasAdd();
    fn NetServerAliasDel();
    fn NetServerAliasEnum();
    fn NetSessionDel();
    fn NetSessionEnum();
    fn NetSessionGetInfo();
    fn NetShareAdd();
    fn NetShareCheck();
    fn NetShareDel();
    fn NetShareDelEx();
    fn NetShareDelSticky();
    fn NetShareEnum();
    fn NetShareEnumSticky();
    fn NetShareGetInfo();
    fn NetShareSetInfo();
    fn NetStatisticsGet();
    fn NtCreateFile();
    fn NtmsAccessMask();
    fn NtmsAllocateOptions();
    fn NtmsAllocationPolicy();
    fn NtmsAsyncOperations();
    fn NtmsAsyncStatus();
    fn NtmsBarCodeState();
    fn NtmsCreateNtmsMediaOptions();
    fn NtmsCreateOptions();
    fn NtmsDeallocationPolicy();
    fn NtmsDismountOptions();
    fn NtmsDoorState();
    fn NtmsDriveState();
    fn NtmsDriveType();
    fn NtmsEjectOperation();
    fn NtmsEnumerateOption();
    fn NtmsInjectOperation();
    fn NtmsInventoryMethod();
    fn NtmsLibRequestFlags();
    fn NtmsLibraryFlags();
    fn NtmsLibraryType();
    fn NtmsLmOperation();
    fn NtmsLmState();
    fn NtmsMediaPoolPolicy();
    fn NtmsMediaState();
    fn NtmsMountOptions();
    fn NtmsMountPriority();
    fn NtmsNotificationOperations();
    fn NtmsObjectsTypes();
    fn NtmsOpRequestFlags();
    fn NtmsOperationalState();
    fn NtmsOpreqCommand();
    fn NtmsOpreqState();
    fn NtmsPartitionState();
    fn NtmsPoolType();
    fn NtmsPortContent();
    fn NtmsPortPosition();
    fn NtmsReadWriteCharacteristics();
    fn NtmsSessionOptions();
    fn NtmsSlotState();
    fn NtmsUIOperations();
    fn NtmsUITypes();
    fn OFSTRUCT();
    fn OpenEncryptedFileRawA();
    fn OpenEncryptedFileRawW();
    fn OpenEnlistment();
    fn OpenFile();
    fn OpenFileById();
    fn OpenResourceManager();
    fn OpenTransaction();
    fn OpenTransactionManager();
    fn OpenTransactionManagerById();
    fn PARTITION_BASIC_DATA_GUID();
    fn PARTITION_BSP_GUID();
    fn PARTITION_CLUSTER_GUID();
    fn PARTITION_DPP_GUID();
    fn PARTITION_ENTRY_UNUSED_GUID();
    fn PARTITION_LDM_DATA_GUID();
    fn PARTITION_LDM_METADATA_GUID();
    fn PARTITION_LEGACY_BL_GUID();
    fn PARTITION_LEGACY_BL_GUID_BACKUP();
    fn PARTITION_MAIN_OS_GUID();
    fn PARTITION_MSFT_RECOVERY_GUID();
    fn PARTITION_MSFT_RESERVED_GUID();
    fn PARTITION_MSFT_SNAPSHOT_GUID();
    fn PARTITION_OS_DATA_GUID();
    fn PARTITION_PATCH_GUID();
    fn PARTITION_PRE_INSTALLED_GUID();
    fn PARTITION_SERVICING_FILES_GUID();
    fn PARTITION_SERVICING_METADATA_GUID();
    fn PARTITION_SERVICING_RESERVE_GUID();
    fn PARTITION_SERVICING_STAGING_ROOT_GUID();
    fn PARTITION_SPACES_DATA_GUID();
    fn PARTITION_SPACES_GUID();
    fn PARTITION_SYSTEM_GUID();
    fn PARTITION_WINDOWS_SYSTEM_GUID();
    fn PCLFS_COMPLETION_ROUTINE();
    fn PCOPYFILE2_PROGRESS_ROUTINE();
    fn PFE_EXPORT_FUNC();
    fn PFE_IMPORT_FUNC();
    fn PFN_IO_COMPLETION();
    fn PLOG_FULL_HANDLER_CALLBACK();
    fn PLOG_TAIL_ADVANCE_CALLBACK();
    fn PLOG_UNPINNED_CALLBACK();
    fn PREPARE_TAPE_OPERATION();
    fn PRIORITY_HINT();
    fn PopIoRingCompletion();
    fn PrePrepareComplete();
    fn PrePrepareEnlistment();
    fn PrepareComplete();
    fn PrepareEnlistment();
    fn PrepareLogArchive();
    fn PrepareTape();
    fn QueryDosDeviceA();
    fn QueryDosDeviceW();
    fn QueryIoRingCapabilities();
    fn QueryLogPolicy();
    fn QueryRecoveryAgentsOnEncryptedFile();
    fn QueryUsersOnEncryptedFile();
    fn READ_DIRECTORY_NOTIFY_INFORMATION_CLASS();
    fn REPARSE_GUID_DATA_BUFFER();
    fn REPLACE_FILE_FLAGS();
    fn RESOURCE_MANAGER_COMMUNICATION();
    fn RESOURCE_MANAGER_MAXIMUM_OPTION();
    fn RESOURCE_MANAGER_VOLATILE();
    fn ReOpenFile();
    fn ReadDirectoryChangesExW();
    fn ReadDirectoryChangesW();
    fn ReadEncryptedFileRaw();
    fn ReadFile();
    fn ReadFileEx();
    fn ReadFileScatter();
    fn ReadLogArchiveMetadata();
    fn ReadLogNotification();
    fn ReadLogRecord();
    fn ReadLogRestartArea();
    fn ReadNextLogRecord();
    fn ReadOnlyEnlistment();
    fn ReadPreviousLogRestartArea();
    fn RecoverEnlistment();
    fn RecoverResourceManager();
    fn RecoverTransactionManager();
    fn RegisterForLogWriteNotification();
    fn RegisterManageableLogClient();
    fn RemoveDirectoryA();
    fn RemoveDirectoryFromAppW();
    fn RemoveDirectoryTransactedA();
    fn RemoveDirectoryTransactedW();
    fn RemoveDirectoryW();
    fn RemoveLogContainer();
    fn RemoveLogContainerSet();
    fn RemoveLogPolicy();
    fn RemoveUsersFromEncryptedFile();
    fn RenameTransactionManager();
    fn ReplaceFileA();
    fn ReplaceFileFromAppW();
    fn ReplaceFileW();
    fn ReserveAndAppendLog();
    fn ReserveAndAppendLogAligned();
    fn RollbackComplete();
    fn RollbackEnlistment();
    fn RollbackTransaction();
    fn RollbackTransactionAsync();
    fn RollforwardTransactionManager();
    fn SERVER_ALIAS_INFO_0();
    fn SERVER_CERTIFICATE_INFO_0();
    fn SERVER_CERTIFICATE_TYPE();
    fn SESI1_NUM_ELEMENTS();
    fn SESI2_NUM_ELEMENTS();
    fn SESSION_INFO_0();
    fn SESSION_INFO_1();
    fn SESSION_INFO_10();
    fn SESSION_INFO_2();
    fn SESSION_INFO_502();
    fn SESSION_INFO_USER_FLAGS();
    fn SET_FILE_POINTER_MOVE_METHOD();
    fn SHARE_CURRENT_USES_PARMNUM();
    fn SHARE_FILE_SD_PARMNUM();
    fn SHARE_INFO_0();
    fn SHARE_INFO_1();
    fn SHARE_INFO_1004();
    fn SHARE_INFO_1005();
    fn SHARE_INFO_1006();
    fn SHARE_INFO_1501();
    fn SHARE_INFO_1503();
    fn SHARE_INFO_2();
    fn SHARE_INFO_501();
    fn SHARE_INFO_502();
    fn SHARE_INFO_503();
    fn SHARE_INFO_PERMISSIONS();
    fn SHARE_MAX_USES_PARMNUM();
    fn SHARE_NETNAME_PARMNUM();
    fn SHARE_PASSWD_PARMNUM();
    fn SHARE_PATH_PARMNUM();
    fn SHARE_PERMISSIONS_PARMNUM();
    fn SHARE_REMARK_PARMNUM();
    fn SHARE_SERVER_PARMNUM();
    fn SHARE_TYPE();
    fn SHARE_TYPE_PARMNUM();
    fn SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM();
    fn SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING();
    fn SHI1005_FLAGS_CLUSTER_MANAGED();
    fn SHI1005_FLAGS_COMPRESS_DATA();
    fn SHI1005_FLAGS_DFS();
    fn SHI1005_FLAGS_DFS_ROOT();
    fn SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING();
    fn SHI1005_FLAGS_ENABLE_CA();
    fn SHI1005_FLAGS_ENABLE_HASH();
    fn SHI1005_FLAGS_ENCRYPT_DATA();
    fn SHI1005_FLAGS_FORCE_LEVELII_OPLOCK();
    fn SHI1005_FLAGS_FORCE_SHARED_DELETE();
    fn SHI1005_FLAGS_IDENTITY_REMOTING();
    fn SHI1005_FLAGS_RESERVED();
    fn SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS();
    fn SHI1_NUM_ELEMENTS();
    fn SHI2_NUM_ELEMENTS();
    fn SHI_USES_UNLIMITED();
    fn STATSOPT_CLR();
    fn STAT_SERVER_0();
    fn STAT_WORKSTATION_0();
    fn STORAGE_BUS_TYPE();
    fn STREAM_INFO_LEVELS();
    fn STYPE_RESERVED1();
    fn STYPE_RESERVED2();
    fn STYPE_RESERVED3();
    fn STYPE_RESERVED4();
    fn STYPE_RESERVED5();
    fn STYPE_RESERVED_ALL();
    fn SYMBOLIC_LINK_FLAGS();
    fn ScanLogContainers();
    fn SearchPathA();
    fn SearchPathW();
    fn SetEncryptedFileMetadata();
    fn SetEndOfFile();
    fn SetEndOfLog();
    fn SetEnlistmentRecoveryInformation();
    fn SetFileApisToANSI();
    fn SetFileApisToOEM();
    fn SetFileAttributesA();
    fn SetFileAttributesFromAppW();
    fn SetFileAttributesTransactedA();
    fn SetFileAttributesTransactedW();
    fn SetFileAttributesW();
    fn SetFileBandwidthReservation();
    fn SetFileCompletionNotificationModes();
    fn SetFileInformationByHandle();
    fn SetFileIoOverlappedRange();
    fn SetFilePointer();
    fn SetFilePointerEx();
    fn SetFileShortNameA();
    fn SetFileShortNameW();
    fn SetFileTime();
    fn SetFileValidData();
    fn SetIoRingCompletionEvent();
    fn SetLogArchiveMode();
    fn SetLogArchiveTail();
    fn SetLogFileSizeWithPolicy();
    fn SetResourceManagerCompletionPort();
    fn SetSearchPathMode();
    fn SetTapeParameters();
    fn SetTapePosition();
    fn SetTransactionInformation();
    fn SetUserFileEncryptionKey();
    fn SetUserFileEncryptionKeyEx();
    fn SetVolumeLabelA();
    fn SetVolumeLabelW();
    fn SetVolumeMountPointA();
    fn SetVolumeMountPointW();
    fn SinglePhaseReject();
    fn SubmitIoRing();
    fn TAPEMARK_TYPE();
    fn TAPE_ERASE();
    fn TAPE_GET_POSITION();
    fn TAPE_INFORMATION_TYPE();
    fn TAPE_POSITION_METHOD();
    fn TAPE_POSITION_TYPE();
    fn TAPE_PREPARE();
    fn TAPE_SET_POSITION();
    fn TAPE_WRITE_MARKS();
    fn TRANSACTION_DO_NOT_PROMOTE();
    fn TRANSACTION_MANAGER_COMMIT_DEFAULT();
    fn TRANSACTION_MANAGER_COMMIT_LOWEST();
    fn TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES();
    fn TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME();
    fn TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS();
    fn TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY();
    fn TRANSACTION_MANAGER_MAXIMUM_OPTION();
    fn TRANSACTION_MANAGER_VOLATILE();
    fn TRANSACTION_MAXIMUM_OPTION();
    fn TRANSACTION_NOTIFICATION();
    fn TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT();
    fn TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT();
    fn TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT();
    fn TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT();
    fn TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT();
    fn TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED();
    fn TRANSACTION_NOTIFY_COMMIT();
    fn TRANSACTION_NOTIFY_COMMIT_COMPLETE();
    fn TRANSACTION_NOTIFY_COMMIT_FINALIZE();
    fn TRANSACTION_NOTIFY_COMMIT_REQUEST();
    fn TRANSACTION_NOTIFY_DELEGATE_COMMIT();
    fn TRANSACTION_NOTIFY_ENLIST_MASK();
    fn TRANSACTION_NOTIFY_ENLIST_PREPREPARE();
    fn TRANSACTION_NOTIFY_INDOUBT();
    fn TRANSACTION_NOTIFY_LAST_RECOVER();
    fn TRANSACTION_NOTIFY_MARSHAL();
    fn TRANSACTION_NOTIFY_MASK();
    fn TRANSACTION_NOTIFY_PREPARE();
    fn TRANSACTION_NOTIFY_PREPARE_COMPLETE();
    fn TRANSACTION_NOTIFY_PREPREPARE();
    fn TRANSACTION_NOTIFY_PREPREPARE_COMPLETE();
    fn TRANSACTION_NOTIFY_PROMOTE();
    fn TRANSACTION_NOTIFY_PROMOTE_NEW();
    fn TRANSACTION_NOTIFY_PROPAGATE_PULL();
    fn TRANSACTION_NOTIFY_PROPAGATE_PUSH();
    fn TRANSACTION_NOTIFY_RECOVER();
    fn TRANSACTION_NOTIFY_RECOVER_QUERY();
    fn TRANSACTION_NOTIFY_REQUEST_OUTCOME();
    fn TRANSACTION_NOTIFY_RM_DISCONNECTED();
    fn TRANSACTION_NOTIFY_ROLLBACK();
    fn TRANSACTION_NOTIFY_ROLLBACK_COMPLETE();
    fn TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT();
    fn TRANSACTION_NOTIFY_TM_ONLINE();
    fn TRANSACTION_OUTCOME();
    fn TXFS_MINIVERSION();
    fn TXF_ID();
    fn TXF_LOG_RECORD_AFFECTED_FILE();
    fn TXF_LOG_RECORD_BASE();
    fn TXF_LOG_RECORD_GENERIC_TYPE_ABORT();
    fn TXF_LOG_RECORD_GENERIC_TYPE_COMMIT();
    fn TXF_LOG_RECORD_GENERIC_TYPE_DATA();
    fn TXF_LOG_RECORD_GENERIC_TYPE_PREPARE();
    fn TXF_LOG_RECORD_TRUNCATE();
    fn TXF_LOG_RECORD_TYPE();
    fn TXF_LOG_RECORD_WRITE();
    fn TerminateLogArchive();
    fn TerminateReadLog();
    fn TruncateLog();
    fn TxfGetThreadMiniVersionForCreate();
    fn TxfLogCreateFileReadContext();
    fn TxfLogCreateRangeReadContext();
    fn TxfLogDestroyReadContext();
    fn TxfLogReadRecords();
    fn TxfLogRecordGetFileName();
    fn TxfLogRecordGetGenericType();
    fn TxfReadMetadataInfo();
    fn TxfSetThreadMiniVersionForCreate();
    fn UnlockFile();
    fn UnlockFileEx();
    fn VER_FIND_FILE_FLAGS();
    fn VER_FIND_FILE_STATUS();
    fn VER_INSTALL_FILE_FLAGS();
    fn VER_INSTALL_FILE_STATUS();
    fn VOLUME_ALLOCATE_BC_STREAM_INPUT();
    fn VOLUME_ALLOCATE_BC_STREAM_OUTPUT();
    fn VOLUME_ALLOCATION_HINT_INPUT();
    fn VOLUME_ALLOCATION_HINT_OUTPUT();
    fn VOLUME_CRITICAL_IO();
    fn VOLUME_FAILOVER_SET();
    fn VOLUME_GET_BC_PROPERTIES_INPUT();
    fn VOLUME_GET_BC_PROPERTIES_OUTPUT();
    fn VOLUME_LOGICAL_OFFSET();
    fn VOLUME_NUMBER();
    fn VOLUME_PHYSICAL_OFFSET();
    fn VOLUME_PHYSICAL_OFFSETS();
    fn VOLUME_READ_PLEX_INPUT();
    fn VOLUME_SET_GPT_ATTRIBUTES_INFORMATION();
    fn VOLUME_SHRINK_INFO();
    fn VS_FFI_FILEFLAGSMASK();
    fn VS_FFI_SIGNATURE();
    fn VS_FFI_STRUCVERSION();
    fn VS_FIXEDFILEINFO();
    fn VS_FIXEDFILEINFO_FILE_FLAGS();
    fn VS_FIXEDFILEINFO_FILE_OS();
    fn VS_FIXEDFILEINFO_FILE_SUBTYPE();
    fn VS_FIXEDFILEINFO_FILE_TYPE();
    fn VS_USER_DEFINED();
    fn VS_VERSION_INFO();
    fn ValidateLog();
    fn VerFindFileA();
    fn VerFindFileW();
    fn VerInstallFileA();
    fn VerInstallFileW();
    fn VerLanguageNameA();
    fn VerLanguageNameW();
    fn VerQueryValueA();
    fn VerQueryValueW();
    fn WIM_BOOT_NOT_OS_WIM();
    fn WIM_BOOT_OS_WIM();
    fn WIM_ENTRY_FLAG_NOT_ACTIVE();
    fn WIM_ENTRY_FLAG_SUSPENDED();
    fn WIM_ENTRY_INFO();
    fn WIM_EXTERNAL_FILE_INFO();
    fn WIM_EXTERNAL_FILE_INFO_FLAG_NOT_ACTIVE();
    fn WIM_EXTERNAL_FILE_INFO_FLAG_SUSPENDED();
    fn WIM_PROVIDER_HASH_SIZE();
    fn WIN32_FILE_ATTRIBUTE_DATA();
    fn WIN32_FIND_DATAA();
    fn WIN32_FIND_DATAW();
    fn WIN32_FIND_STREAM_DATA();
    fn WIN32_STREAM_ID();
    fn WINEFS_SETUSERKEY_SET_CAPABILITIES();
    fn WIN_STREAM_ID();
    fn WOF_FILE_COMPRESSION_INFO_V0();
    fn WOF_FILE_COMPRESSION_INFO_V1();
    fn WOF_PROVIDER_FILE();
    fn WOF_PROVIDER_WIM();
    fn WofEnumEntries();
    fn WofEnumEntryProc();
    fn WofEnumFilesProc();
    fn WofFileEnumFiles();
    fn WofGetDriverVersion();
    fn WofIsExternalFile();
    fn WofSetFileDataLocation();
    fn WofShouldCompressBinaries();
    fn WofWimAddEntry();
    fn WofWimEnumFiles();
    fn WofWimRemoveEntry();
    fn WofWimSuspendEntry();
    fn WofWimUpdateEntry();
    fn Wow64DisableWow64FsRedirection();
    fn Wow64EnableWow64FsRedirection();
    fn Wow64RevertWow64FsRedirection();
    fn WriteEncryptedFileRaw();
    fn WriteFile();
    fn WriteFileEx();
    fn WriteFileGather();
    fn WriteLogRestartArea();
    fn WriteTapemark();
    fn _FT_TYPES_DEFINITION_();
}
