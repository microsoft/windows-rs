#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn APPX_BUNDLE_FOOTPRINT_FILE_TYPE();
    fn APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE();
    fn APPX_CAPABILITIES();
    fn APPX_CAPABILITY_CLASS_TYPE();
    fn APPX_COMPRESSION_OPTION();
    fn APPX_ENCRYPTED_EXEMPTIONS();
    fn APPX_ENCRYPTED_PACKAGE_OPTIONS();
    fn APPX_ENCRYPTED_PACKAGE_SETTINGS();
    fn APPX_ENCRYPTED_PACKAGE_SETTINGS2();
    fn APPX_FOOTPRINT_FILE_TYPE();
    fn APPX_KEY_INFO();
    fn APPX_PACKAGE_ARCHITECTURE();
    fn APPX_PACKAGE_ARCHITECTURE2();
    fn APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_MANIFEST_OPTIONS();
    fn APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_OPTION();
    fn APPX_PACKAGE_SETTINGS();
    fn APPX_PACKAGE_WRITER_PAYLOAD_STREAM();
    fn APPX_PACKAGING_CONTEXT_CHANGE_TYPE();
    fn ActivatePackageVirtualizationContext();
    fn AddPackageDependency();
    fn AddPackageDependencyOptions();
    fn AppPolicyClrCompat();
    fn AppPolicyCreateFileAccess();
    fn AppPolicyGetClrCompat();
    fn AppPolicyGetCreateFileAccess();
    fn AppPolicyGetLifecycleManagement();
    fn AppPolicyGetMediaFoundationCodecLoading();
    fn AppPolicyGetProcessTerminationMethod();
    fn AppPolicyGetShowDeveloperDiagnostic();
    fn AppPolicyGetThreadInitializationType();
    fn AppPolicyGetWindowingModel();
    fn AppPolicyLifecycleManagement();
    fn AppPolicyMediaFoundationCodecLoading();
    fn AppPolicyProcessTerminationMethod();
    fn AppPolicyShowDeveloperDiagnostic();
    fn AppPolicyThreadInitializationType();
    fn AppPolicyWindowingModel();
    fn AppxBundleFactory();
    fn AppxEncryptionFactory();
    fn AppxFactory();
    fn AppxPackageEditor();
    fn AppxPackagingDiagnosticEventSinkManager();
    fn CheckIsMSIXPackage();
    fn ClosePackageInfo();
    fn CreatePackageDependencyOptions();
    fn CreatePackageVirtualizationContext();
    fn DX_FEATURE_LEVEL();
    fn DeactivatePackageVirtualizationContext();
    fn DeletePackageDependency();
    fn DuplicatePackageVirtualizationContext();
    fn FindPackagesByPackageFamily();
    fn FormatApplicationUserModelId();
    fn GetApplicationUserModelId();
    fn GetApplicationUserModelIdFromToken();
    fn GetCurrentApplicationUserModelId();
    fn GetCurrentPackageFamilyName();
    fn GetCurrentPackageFullName();
    fn GetCurrentPackageId();
    fn GetCurrentPackageInfo();
    fn GetCurrentPackageInfo2();
    fn GetCurrentPackagePath();
    fn GetCurrentPackagePath2();
    fn GetCurrentPackageVirtualizationContext();
    fn GetIdForPackageDependencyContext();
    fn GetPackageApplicationIds();
    fn GetPackageFamilyName();
    fn GetPackageFamilyNameFromToken();
    fn GetPackageFullName();
    fn GetPackageFullNameFromToken();
    fn GetPackageId();
    fn GetPackageInfo();
    fn GetPackageInfo2();
    fn GetPackagePath();
    fn GetPackagePathByFullName();
    fn GetPackagePathByFullName2();
    fn GetPackagesByPackageFamily();
    fn GetProcessesInVirtualizationContext();
    fn GetResolvedPackageFullNameForPackageDependency();
    fn GetStagedPackageOrigin();
    fn GetStagedPackagePathByFullName();
    fn GetStagedPackagePathByFullName2();
    fn IAppxBlockMapBlock();
    fn IAppxBlockMapBlocksEnumerator();
    fn IAppxBlockMapFile();
    fn IAppxBlockMapFilesEnumerator();
    fn IAppxBlockMapReader();
    fn IAppxBundleFactory();
    fn IAppxBundleManifestOptionalBundleInfo();
    fn IAppxBundleManifestOptionalBundleInfoEnumerator();
    fn IAppxBundleManifestPackageInfo();
    fn IAppxBundleManifestPackageInfo2();
    fn IAppxBundleManifestPackageInfo3();
    fn IAppxBundleManifestPackageInfo4();
    fn IAppxBundleManifestPackageInfoEnumerator();
    fn IAppxBundleManifestReader();
    fn IAppxBundleManifestReader2();
    fn IAppxBundleReader();
    fn IAppxBundleWriter();
    fn IAppxBundleWriter2();
    fn IAppxBundleWriter3();
    fn IAppxBundleWriter4();
    fn IAppxContentGroup();
    fn IAppxContentGroupFilesEnumerator();
    fn IAppxContentGroupMapReader();
    fn IAppxContentGroupMapWriter();
    fn IAppxContentGroupsEnumerator();
    fn IAppxEncryptedBundleWriter();
    fn IAppxEncryptedBundleWriter2();
    fn IAppxEncryptedBundleWriter3();
    fn IAppxEncryptedPackageWriter();
    fn IAppxEncryptedPackageWriter2();
    fn IAppxEncryptionFactory();
    fn IAppxEncryptionFactory2();
    fn IAppxEncryptionFactory3();
    fn IAppxEncryptionFactory4();
    fn IAppxFactory();
    fn IAppxFactory2();
    fn IAppxFile();
    fn IAppxFilesEnumerator();
    fn IAppxManifestApplication();
    fn IAppxManifestApplicationsEnumerator();
    fn IAppxManifestCapabilitiesEnumerator();
    fn IAppxManifestDeviceCapabilitiesEnumerator();
    fn IAppxManifestDriverConstraint();
    fn IAppxManifestDriverConstraintsEnumerator();
    fn IAppxManifestDriverDependenciesEnumerator();
    fn IAppxManifestDriverDependency();
    fn IAppxManifestHostRuntimeDependenciesEnumerator();
    fn IAppxManifestHostRuntimeDependency();
    fn IAppxManifestHostRuntimeDependency2();
    fn IAppxManifestMainPackageDependenciesEnumerator();
    fn IAppxManifestMainPackageDependency();
    fn IAppxManifestOSPackageDependenciesEnumerator();
    fn IAppxManifestOSPackageDependency();
    fn IAppxManifestOptionalPackageInfo();
    fn IAppxManifestPackageDependenciesEnumerator();
    fn IAppxManifestPackageDependency();
    fn IAppxManifestPackageDependency2();
    fn IAppxManifestPackageDependency3();
    fn IAppxManifestPackageId();
    fn IAppxManifestPackageId2();
    fn IAppxManifestProperties();
    fn IAppxManifestQualifiedResource();
    fn IAppxManifestQualifiedResourcesEnumerator();
    fn IAppxManifestReader();
    fn IAppxManifestReader2();
    fn IAppxManifestReader3();
    fn IAppxManifestReader4();
    fn IAppxManifestReader5();
    fn IAppxManifestReader6();
    fn IAppxManifestReader7();
    fn IAppxManifestResourcesEnumerator();
    fn IAppxManifestTargetDeviceFamiliesEnumerator();
    fn IAppxManifestTargetDeviceFamily();
    fn IAppxPackageEditor();
    fn IAppxPackageReader();
    fn IAppxPackageWriter();
    fn IAppxPackageWriter2();
    fn IAppxPackageWriter3();
    fn IAppxPackagingDiagnosticEventSink();
    fn IAppxPackagingDiagnosticEventSinkManager();
    fn IAppxSourceContentGroupMapReader();
    fn OpenPackageInfoByFullName();
    fn OpenPackageInfoByFullNameForUser();
    fn PACKAGEDEPENDENCY_CONTEXT__();
    fn PACKAGE_DEPENDENCY_RANK_DEFAULT();
    fn PACKAGE_FILTER_ALL_LOADED();
    fn PACKAGE_FILTER_BUNDLE();
    fn PACKAGE_FILTER_DIRECT();
    fn PACKAGE_FILTER_DYNAMIC();
    fn PACKAGE_FILTER_HEAD();
    fn PACKAGE_FILTER_HOSTRUNTIME();
    fn PACKAGE_FILTER_IS_IN_RELATED_SET();
    fn PACKAGE_FILTER_OPTIONAL();
    fn PACKAGE_FILTER_RESOURCE();
    fn PACKAGE_FILTER_STATIC();
    fn PACKAGE_ID();
    fn PACKAGE_INFO();
    fn PACKAGE_INFORMATION_BASIC();
    fn PACKAGE_INFORMATION_FULL();
    fn PACKAGE_PROPERTY_BUNDLE();
    fn PACKAGE_PROPERTY_DEVELOPMENT_MODE();
    fn PACKAGE_PROPERTY_DYNAMIC();
    fn PACKAGE_PROPERTY_FRAMEWORK();
    fn PACKAGE_PROPERTY_HOSTRUNTIME();
    fn PACKAGE_PROPERTY_IS_IN_RELATED_SET();
    fn PACKAGE_PROPERTY_OPTIONAL();
    fn PACKAGE_PROPERTY_RESOURCE();
    fn PACKAGE_PROPERTY_STATIC();
    fn PACKAGE_VERSION();
    fn PACKAGE_VIRTUALIZATION_CONTEXT_HANDLE__();
    fn PackageDependencyLifetimeKind();
    fn PackageDependencyProcessorArchitectures();
    fn PackageFamilyNameFromFullName();
    fn PackageFamilyNameFromId();
    fn PackageFullNameFromId();
    fn PackageIdFromFullName();
    fn PackageNameAndPublisherIdFromFamilyName();
    fn PackageOrigin();
    fn PackagePathType();
    fn ParseApplicationUserModelId();
    fn ReleasePackageVirtualizationContext();
    fn RemovePackageDependency();
    fn TryCreatePackageDependency();
    fn VerifyApplicationUserModelId();
    fn VerifyPackageFamilyName();
    fn VerifyPackageFullName();
    fn VerifyPackageId();
    fn VerifyPackageRelativeApplicationId();
    fn _PACKAGE_INFO_REFERENCE();
}
