#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn ATA_FLAGS_48BIT_COMMAND();
    fn ATA_FLAGS_DATA_IN();
    fn ATA_FLAGS_DATA_OUT();
    fn ATA_FLAGS_DRDY_REQUIRED();
    fn ATA_FLAGS_NO_MULTIPLE();
    fn ATA_FLAGS_USE_DMA();
    fn ATA_PASS_THROUGH_DIRECT();
    fn ATA_PASS_THROUGH_DIRECT32();
    fn ATA_PASS_THROUGH_EX();
    fn ATA_PASS_THROUGH_EX32();
    fn AddISNSServerA();
    fn AddISNSServerW();
    fn AddIScsiConnectionA();
    fn AddIScsiConnectionW();
    fn AddIScsiSendTargetPortalA();
    fn AddIScsiSendTargetPortalW();
    fn AddIScsiStaticTargetA();
    fn AddIScsiStaticTargetW();
    fn AddPersistentIScsiDeviceA();
    fn AddPersistentIScsiDeviceW();
    fn AddRadiusServerA();
    fn AddRadiusServerW();
    fn ClearPersistentIScsiDevices();
    fn DSM_NOTIFICATION_REQUEST_BLOCK();
    fn DUMP_DEVICE_POWERON_ROUTINE();
    fn DUMP_DRIVER();
    fn DUMP_DRIVER_EX();
    fn DUMP_DRIVER_NAME_LENGTH();
    fn DUMP_EX_FLAG_DRIVER_FULL_PATH_SUPPORT();
    fn DUMP_EX_FLAG_RESUME_SUPPORT();
    fn DUMP_EX_FLAG_SUPPORT_64BITMEMORY();
    fn DUMP_EX_FLAG_SUPPORT_DD_TELEMETRY();
    fn DUMP_POINTERS();
    fn DUMP_POINTERS_EX();
    fn DUMP_POINTERS_VERSION();
    fn DUMP_POINTERS_VERSION_1();
    fn DUMP_POINTERS_VERSION_2();
    fn DUMP_POINTERS_VERSION_3();
    fn DUMP_POINTERS_VERSION_4();
    fn FILE_DEVICE_SCSI();
    fn FIRMWARE_FUNCTION_ACTIVATE();
    fn FIRMWARE_FUNCTION_DOWNLOAD();
    fn FIRMWARE_FUNCTION_GET_INFO();
    fn FIRMWARE_REQUEST_BLOCK();
    fn FIRMWARE_REQUEST_BLOCK_STRUCTURE_VERSION();
    fn FIRMWARE_REQUEST_FLAG_CONTROLLER();
    fn FIRMWARE_REQUEST_FLAG_FIRST_SEGMENT();
    fn FIRMWARE_REQUEST_FLAG_LAST_SEGMENT();
    fn FIRMWARE_REQUEST_FLAG_SWITCH_TO_EXISTING_FIRMWARE();
    fn FIRMWARE_STATUS_COMMAND_ABORT();
    fn FIRMWARE_STATUS_CONTROLLER_ERROR();
    fn FIRMWARE_STATUS_DEVICE_ERROR();
    fn FIRMWARE_STATUS_END_OF_MEDIA();
    fn FIRMWARE_STATUS_ERROR();
    fn FIRMWARE_STATUS_ID_NOT_FOUND();
    fn FIRMWARE_STATUS_ILLEGAL_LENGTH();
    fn FIRMWARE_STATUS_ILLEGAL_REQUEST();
    fn FIRMWARE_STATUS_INPUT_BUFFER_TOO_BIG();
    fn FIRMWARE_STATUS_INTERFACE_CRC_ERROR();
    fn FIRMWARE_STATUS_INVALID_IMAGE();
    fn FIRMWARE_STATUS_INVALID_PARAMETER();
    fn FIRMWARE_STATUS_INVALID_SLOT();
    fn FIRMWARE_STATUS_MEDIA_CHANGE();
    fn FIRMWARE_STATUS_MEDIA_CHANGE_REQUEST();
    fn FIRMWARE_STATUS_OUTPUT_BUFFER_TOO_SMALL();
    fn FIRMWARE_STATUS_POWER_CYCLE_REQUIRED();
    fn FIRMWARE_STATUS_SUCCESS();
    fn FIRMWARE_STATUS_UNCORRECTABLE_DATA_ERROR();
    fn GetDevicesForIScsiSessionA();
    fn GetDevicesForIScsiSessionW();
    fn GetIScsiIKEInfoA();
    fn GetIScsiIKEInfoW();
    fn GetIScsiInitiatorNodeNameA();
    fn GetIScsiInitiatorNodeNameW();
    fn GetIScsiSessionListA();
    fn GetIScsiSessionListEx();
    fn GetIScsiSessionListW();
    fn GetIScsiTargetInformationA();
    fn GetIScsiTargetInformationW();
    fn GetIScsiVersionInformation();
    fn HYBRID_DEMOTE_BY_SIZE();
    fn HYBRID_DIRTY_THRESHOLDS();
    fn HYBRID_FUNCTION_DEMOTE_BY_SIZE();
    fn HYBRID_FUNCTION_DISABLE_CACHING_MEDIUM();
    fn HYBRID_FUNCTION_ENABLE_CACHING_MEDIUM();
    fn HYBRID_FUNCTION_GET_INFO();
    fn HYBRID_FUNCTION_SET_DIRTY_THRESHOLD();
    fn HYBRID_INFORMATION();
    fn HYBRID_REQUEST_BLOCK();
    fn HYBRID_REQUEST_BLOCK_STRUCTURE_VERSION();
    fn HYBRID_REQUEST_INFO_STRUCTURE_VERSION();
    fn HYBRID_STATUS_ENABLE_REFCOUNT_HOLD();
    fn HYBRID_STATUS_ILLEGAL_REQUEST();
    fn HYBRID_STATUS_INVALID_PARAMETER();
    fn HYBRID_STATUS_OUTPUT_BUFFER_TOO_SMALL();
    fn HYBRID_STATUS_SUCCESS();
    fn IDE_IO_CONTROL();
    fn ID_FQDN();
    fn ID_IPV4_ADDR();
    fn ID_IPV6_ADDR();
    fn ID_USER_FQDN();
    fn IKE_AUTHENTICATION_INFORMATION();
    fn IKE_AUTHENTICATION_METHOD();
    fn IKE_AUTHENTICATION_PRESHARED_KEY();
    fn IOCTL_ATA_MINIPORT();
    fn IOCTL_ATA_PASS_THROUGH();
    fn IOCTL_ATA_PASS_THROUGH_DIRECT();
    fn IOCTL_IDE_PASS_THROUGH();
    fn IOCTL_MINIPORT_PROCESS_SERVICE_IRP();
    fn IOCTL_MPIO_PASS_THROUGH_PATH();
    fn IOCTL_MPIO_PASS_THROUGH_PATH_DIRECT();
    fn IOCTL_MPIO_PASS_THROUGH_PATH_DIRECT_EX();
    fn IOCTL_MPIO_PASS_THROUGH_PATH_EX();
    fn IOCTL_SCSI_BASE();
    fn IOCTL_SCSI_FREE_DUMP_POINTERS();
    fn IOCTL_SCSI_GET_ADDRESS();
    fn IOCTL_SCSI_GET_CAPABILITIES();
    fn IOCTL_SCSI_GET_DUMP_POINTERS();
    fn IOCTL_SCSI_GET_INQUIRY_DATA();
    fn IOCTL_SCSI_MINIPORT();
    fn IOCTL_SCSI_PASS_THROUGH();
    fn IOCTL_SCSI_PASS_THROUGH_DIRECT();
    fn IOCTL_SCSI_PASS_THROUGH_DIRECT_EX();
    fn IOCTL_SCSI_PASS_THROUGH_EX();
    fn IOCTL_SCSI_RESCAN_BUS();
    fn IO_SCSI_CAPABILITIES();
    fn ISCSI_AUTH_TYPES();
    fn ISCSI_CONNECTION_INFOA();
    fn ISCSI_CONNECTION_INFOW();
    fn ISCSI_CONNECTION_INFO_EX();
    fn ISCSI_DEVICE_ON_SESSIONA();
    fn ISCSI_DEVICE_ON_SESSIONW();
    fn ISCSI_DIGEST_TYPES();
    fn ISCSI_LOGIN_FLAG_ALLOW_PORTAL_HOPPING();
    fn ISCSI_LOGIN_FLAG_MULTIPATH_ENABLED();
    fn ISCSI_LOGIN_FLAG_REQUIRE_IPSEC();
    fn ISCSI_LOGIN_FLAG_RESERVED1();
    fn ISCSI_LOGIN_FLAG_USE_RADIUS_RESPONSE();
    fn ISCSI_LOGIN_FLAG_USE_RADIUS_VERIFICATION();
    fn ISCSI_LOGIN_OPTIONS();
    fn ISCSI_LOGIN_OPTIONS_AUTH_TYPE();
    fn ISCSI_LOGIN_OPTIONS_DATA_DIGEST();
    fn ISCSI_LOGIN_OPTIONS_DEFAULT_TIME_2_RETAIN();
    fn ISCSI_LOGIN_OPTIONS_DEFAULT_TIME_2_WAIT();
    fn ISCSI_LOGIN_OPTIONS_HEADER_DIGEST();
    fn ISCSI_LOGIN_OPTIONS_MAXIMUM_CONNECTIONS();
    fn ISCSI_LOGIN_OPTIONS_PASSWORD();
    fn ISCSI_LOGIN_OPTIONS_USERNAME();
    fn ISCSI_LOGIN_OPTIONS_VERSION();
    fn ISCSI_SECURITY_FLAG_AGGRESSIVE_MODE_ENABLED();
    fn ISCSI_SECURITY_FLAG_IKE_IPSEC_ENABLED();
    fn ISCSI_SECURITY_FLAG_MAIN_MODE_ENABLED();
    fn ISCSI_SECURITY_FLAG_PFS_ENABLED();
    fn ISCSI_SECURITY_FLAG_TRANSPORT_MODE_PREFERRED();
    fn ISCSI_SECURITY_FLAG_TUNNEL_MODE_PREFERRED();
    fn ISCSI_SECURITY_FLAG_VALID();
    fn ISCSI_SESSION_INFOA();
    fn ISCSI_SESSION_INFOW();
    fn ISCSI_SESSION_INFO_EX();
    fn ISCSI_TARGET_FLAG_HIDE_STATIC_TARGET();
    fn ISCSI_TARGET_FLAG_MERGE_TARGET_INFORMATION();
    fn ISCSI_TARGET_MAPPINGA();
    fn ISCSI_TARGET_MAPPINGW();
    fn ISCSI_TARGET_PORTALA();
    fn ISCSI_TARGET_PORTALW();
    fn ISCSI_TARGET_PORTAL_GROUPA();
    fn ISCSI_TARGET_PORTAL_GROUPW();
    fn ISCSI_TARGET_PORTAL_INFOA();
    fn ISCSI_TARGET_PORTAL_INFOW();
    fn ISCSI_TARGET_PORTAL_INFO_EXA();
    fn ISCSI_TARGET_PORTAL_INFO_EXW();
    fn ISCSI_UNIQUE_SESSION_ID();
    fn ISCSI_VERSION_INFO();
    fn LoginIScsiTargetA();
    fn LoginIScsiTargetW();
    fn LogoutIScsiTarget();
    fn MAX_ISCSI_ALIAS_LEN();
    fn MAX_ISCSI_DISCOVERY_DOMAIN_LEN();
    fn MAX_ISCSI_HBANAME_LEN();
    fn MAX_ISCSI_NAME_LEN();
    fn MAX_ISCSI_PORTAL_ADDRESS_LEN();
    fn MAX_ISCSI_PORTAL_ALIAS_LEN();
    fn MAX_ISCSI_PORTAL_NAME_LEN();
    fn MAX_ISCSI_TEXT_ADDRESS_LEN();
    fn MAX_RADIUS_ADDRESS_LEN();
    fn MINIPORT_DSM_NOTIFICATION_VERSION();
    fn MINIPORT_DSM_NOTIFICATION_VERSION_1();
    fn MINIPORT_DSM_NOTIFY_FLAG_BEGIN();
    fn MINIPORT_DSM_NOTIFY_FLAG_END();
    fn MINIPORT_DSM_PROFILE_CRASHDUMP_FILE();
    fn MINIPORT_DSM_PROFILE_HIBERNATION_FILE();
    fn MINIPORT_DSM_PROFILE_PAGE_FILE();
    fn MINIPORT_DSM_PROFILE_UNKNOWN();
    fn MPIO_IOCTL_FLAG_INVOLVE_DSM();
    fn MPIO_IOCTL_FLAG_USE_PATHID();
    fn MPIO_IOCTL_FLAG_USE_SCSIADDRESS();
    fn MPIO_PASS_THROUGH_PATH();
    fn MPIO_PASS_THROUGH_PATH32();
    fn MPIO_PASS_THROUGH_PATH32_EX();
    fn MPIO_PASS_THROUGH_PATH_DIRECT();
    fn MPIO_PASS_THROUGH_PATH_DIRECT32();
    fn MPIO_PASS_THROUGH_PATH_DIRECT32_EX();
    fn MPIO_PASS_THROUGH_PATH_DIRECT_EX();
    fn MPIO_PASS_THROUGH_PATH_EX();
    fn MP_DEVICE_DATA_SET_RANGE();
    fn MP_STORAGE_DIAGNOSTIC_LEVEL();
    fn MP_STORAGE_DIAGNOSTIC_TARGET_TYPE();
    fn NRB_FUNCTION_ADD_LBAS_PINNED_SET();
    fn NRB_FUNCTION_FLUSH_NVCACHE();
    fn NRB_FUNCTION_NVCACHE_INFO();
    fn NRB_FUNCTION_NVCACHE_POWER_MODE_RETURN();
    fn NRB_FUNCTION_NVCACHE_POWER_MODE_SET();
    fn NRB_FUNCTION_NVSEPARATED_FLUSH();
    fn NRB_FUNCTION_NVSEPARATED_INFO();
    fn NRB_FUNCTION_NVSEPARATED_WB_DISABLE();
    fn NRB_FUNCTION_NVSEPARATED_WB_REVERT_DEFAULT();
    fn NRB_FUNCTION_PASS_HINT_PAYLOAD();
    fn NRB_FUNCTION_QUERY_ASCENDER_STATUS();
    fn NRB_FUNCTION_QUERY_CACHE_MISS();
    fn NRB_FUNCTION_QUERY_HYBRID_DISK_STATUS();
    fn NRB_FUNCTION_QUERY_PINNED_SET();
    fn NRB_FUNCTION_REMOVE_LBAS_PINNED_SET();
    fn NRB_FUNCTION_SPINDLE_STATUS();
    fn NRB_ILLEGAL_REQUEST();
    fn NRB_INPUT_DATA_OVERRUN();
    fn NRB_INPUT_DATA_UNDERRUN();
    fn NRB_INVALID_PARAMETER();
    fn NRB_OUTPUT_DATA_OVERRUN();
    fn NRB_OUTPUT_DATA_UNDERRUN();
    fn NRB_SUCCESS();
    fn NTSCSI_UNICODE_STRING();
    fn NVCACHE_HINT_PAYLOAD();
    fn NVCACHE_PRIORITY_LEVEL_DESCRIPTOR();
    fn NVCACHE_REQUEST_BLOCK();
    fn NVCACHE_STATUS();
    fn NVCACHE_TYPE();
    fn NV_FEATURE_PARAMETER();
    fn NV_SEP_CACHE_PARAMETER();
    fn NV_SEP_CACHE_PARAMETER_VERSION();
    fn NV_SEP_CACHE_PARAMETER_VERSION_1();
    fn NV_SEP_WRITE_CACHE_TYPE();
    fn PDUMP_DEVICE_POWERON_ROUTINE();
    fn PERSISTENT_ISCSI_LOGIN_INFOA();
    fn PERSISTENT_ISCSI_LOGIN_INFOW();
    fn RefreshISNSServerA();
    fn RefreshISNSServerW();
    fn RefreshIScsiSendTargetPortalA();
    fn RefreshIScsiSendTargetPortalW();
    fn RemoveISNSServerA();
    fn RemoveISNSServerW();
    fn RemoveIScsiConnection();
    fn RemoveIScsiPersistentTargetA();
    fn RemoveIScsiPersistentTargetW();
    fn RemoveIScsiSendTargetPortalA();
    fn RemoveIScsiSendTargetPortalW();
    fn RemoveIScsiStaticTargetA();
    fn RemoveIScsiStaticTargetW();
    fn RemovePersistentIScsiDeviceA();
    fn RemovePersistentIScsiDeviceW();
    fn RemoveRadiusServerA();
    fn RemoveRadiusServerW();
    fn ReportActiveIScsiTargetMappingsA();
    fn ReportActiveIScsiTargetMappingsW();
    fn ReportISNSServerListA();
    fn ReportISNSServerListW();
    fn ReportIScsiInitiatorListA();
    fn ReportIScsiInitiatorListW();
    fn ReportIScsiPersistentLoginsA();
    fn ReportIScsiPersistentLoginsW();
    fn ReportIScsiSendTargetPortalsA();
    fn ReportIScsiSendTargetPortalsExA();
    fn ReportIScsiSendTargetPortalsExW();
    fn ReportIScsiSendTargetPortalsW();
    fn ReportIScsiTargetPortalsA();
    fn ReportIScsiTargetPortalsW();
    fn ReportIScsiTargetsA();
    fn ReportIScsiTargetsW();
    fn ReportPersistentIScsiDevicesA();
    fn ReportPersistentIScsiDevicesW();
    fn ReportRadiusServerListA();
    fn ReportRadiusServerListW();
    fn SCSI_ADAPTER_BUS_INFO();
    fn SCSI_ADDRESS();
    fn SCSI_BUS_DATA();
    fn SCSI_INQUIRY_DATA();
    fn SCSI_IOCTL_DATA_BIDIRECTIONAL();
    fn SCSI_IOCTL_DATA_IN();
    fn SCSI_IOCTL_DATA_OUT();
    fn SCSI_IOCTL_DATA_UNSPECIFIED();
    fn SCSI_LUN_LIST();
    fn SCSI_PASS_THROUGH();
    fn SCSI_PASS_THROUGH32();
    fn SCSI_PASS_THROUGH32_EX();
    fn SCSI_PASS_THROUGH_DIRECT();
    fn SCSI_PASS_THROUGH_DIRECT32();
    fn SCSI_PASS_THROUGH_DIRECT32_EX();
    fn SCSI_PASS_THROUGH_DIRECT_EX();
    fn SCSI_PASS_THROUGH_EX();
    fn SRB_IO_CONTROL();
    fn STORAGE_DIAGNOSTIC_MP_REQUEST();
    fn STORAGE_DIAGNOSTIC_STATUS_BUFFER_TOO_SMALL();
    fn STORAGE_DIAGNOSTIC_STATUS_INVALID_PARAMETER();
    fn STORAGE_DIAGNOSTIC_STATUS_INVALID_SIGNATURE();
    fn STORAGE_DIAGNOSTIC_STATUS_INVALID_TARGET_TYPE();
    fn STORAGE_DIAGNOSTIC_STATUS_MORE_DATA();
    fn STORAGE_DIAGNOSTIC_STATUS_SUCCESS();
    fn STORAGE_DIAGNOSTIC_STATUS_UNSUPPORTED_VERSION();
    fn STORAGE_ENDURANCE_DATA_DESCRIPTOR();
    fn STORAGE_ENDURANCE_INFO();
    fn STORAGE_FIRMWARE_ACTIVATE();
    fn STORAGE_FIRMWARE_ACTIVATE_STRUCTURE_VERSION();
    fn STORAGE_FIRMWARE_DOWNLOAD();
    fn STORAGE_FIRMWARE_DOWNLOAD_STRUCTURE_VERSION();
    fn STORAGE_FIRMWARE_DOWNLOAD_STRUCTURE_VERSION_V2();
    fn STORAGE_FIRMWARE_DOWNLOAD_V2();
    fn STORAGE_FIRMWARE_INFO();
    fn STORAGE_FIRMWARE_INFO_INVALID_SLOT();
    fn STORAGE_FIRMWARE_INFO_STRUCTURE_VERSION();
    fn STORAGE_FIRMWARE_INFO_STRUCTURE_VERSION_V2();
    fn STORAGE_FIRMWARE_INFO_V2();
    fn STORAGE_FIRMWARE_SLOT_INFO();
    fn STORAGE_FIRMWARE_SLOT_INFO_V2();
    fn STORAGE_FIRMWARE_SLOT_INFO_V2_REVISION_LENGTH();
    fn ScsiRawInterfaceGuid();
    fn SendScsiInquiry();
    fn SendScsiReadCapacity();
    fn SendScsiReportLuns();
    fn SetIScsiGroupPresharedKey();
    fn SetIScsiIKEInfoA();
    fn SetIScsiIKEInfoW();
    fn SetIScsiInitiatorCHAPSharedSecret();
    fn SetIScsiInitiatorNodeNameA();
    fn SetIScsiInitiatorNodeNameW();
    fn SetIScsiInitiatorRADIUSSharedSecret();
    fn SetIScsiTunnelModeOuterAddressA();
    fn SetIScsiTunnelModeOuterAddressW();
    fn SetupPersistentIScsiDevices();
    fn SetupPersistentIScsiVolumes();
    fn TARGETPROTOCOLTYPE();
    fn TARGET_INFORMATION_CLASS();
    fn WmiScsiAddressGuid();
    fn _ADAPTER_OBJECT();
}
