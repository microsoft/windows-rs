#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn CLSID_Sti();
    fn CanSendToFaxRecipient();
    fn DEVPKEY_WIA_DeviceType();
    fn DEVPKEY_WIA_USDClassId();
    fn FAXDEVRECEIVE_SIZE();
    fn FAXDEVREPORTSTATUS_SIZE();
    fn FAXROUTE_ENABLE();
    fn FAX_ACCESS_RIGHTS_ENUM();
    fn FAX_ACCESS_RIGHTS_ENUM_2();
    fn FAX_ACCOUNT_EVENTS_TYPE_ENUM();
    fn FAX_CONFIGURATIONA();
    fn FAX_CONFIGURATIONW();
    fn FAX_CONFIG_QUERY();
    fn FAX_CONFIG_SET();
    fn FAX_CONTEXT_INFOA();
    fn FAX_CONTEXT_INFOW();
    fn FAX_COVERPAGE_INFOA();
    fn FAX_COVERPAGE_INFOW();
    fn FAX_COVERPAGE_TYPE_ENUM();
    fn FAX_DEVICE_RECEIVE_MODE_ENUM();
    fn FAX_DEVICE_STATUSA();
    fn FAX_DEVICE_STATUSW();
    fn FAX_DEV_STATUS();
    fn FAX_ENUM_DELIVERY_REPORT_TYPES();
    fn FAX_ENUM_DEVICE_ID_SOURCE();
    fn FAX_ENUM_JOB_COMMANDS();
    fn FAX_ENUM_JOB_SEND_ATTRIBUTES();
    fn FAX_ENUM_LOG_CATEGORIES();
    fn FAX_ENUM_LOG_LEVELS();
    fn FAX_ENUM_PORT_OPEN_TYPE();
    fn FAX_ERR_BAD_GROUP_CONFIGURATION();
    fn FAX_ERR_DEVICE_NUM_LIMIT_EXCEEDED();
    fn FAX_ERR_DIRECTORY_IN_USE();
    fn FAX_ERR_END();
    fn FAX_ERR_FILE_ACCESS_DENIED();
    fn FAX_ERR_GROUP_IN_USE();
    fn FAX_ERR_GROUP_NOT_FOUND();
    fn FAX_ERR_MESSAGE_NOT_FOUND();
    fn FAX_ERR_NOT_NTFS();
    fn FAX_ERR_NOT_SUPPORTED_ON_THIS_SKU();
    fn FAX_ERR_RECIPIENTS_LIMIT();
    fn FAX_ERR_RULE_NOT_FOUND();
    fn FAX_ERR_SRV_OUTOFMEMORY();
    fn FAX_ERR_START();
    fn FAX_ERR_VERSION_MISMATCH();
    fn FAX_EVENTA();
    fn FAX_EVENTW();
    fn FAX_E_BAD_GROUP_CONFIGURATION();
    fn FAX_E_DEVICE_NUM_LIMIT_EXCEEDED();
    fn FAX_E_DIRECTORY_IN_USE();
    fn FAX_E_FILE_ACCESS_DENIED();
    fn FAX_E_GROUP_IN_USE();
    fn FAX_E_GROUP_NOT_FOUND();
    fn FAX_E_MESSAGE_NOT_FOUND();
    fn FAX_E_NOT_NTFS();
    fn FAX_E_NOT_SUPPORTED_ON_THIS_SKU();
    fn FAX_E_RECIPIENTS_LIMIT();
    fn FAX_E_RULE_NOT_FOUND();
    fn FAX_E_SRV_OUTOFMEMORY();
    fn FAX_E_VERSION_MISMATCH();
    fn FAX_GLOBAL_ROUTING_INFOA();
    fn FAX_GLOBAL_ROUTING_INFOW();
    fn FAX_GROUP_STATUS_ENUM();
    fn FAX_JOB_ENTRYA();
    fn FAX_JOB_ENTRYW();
    fn FAX_JOB_EXTENDED_STATUS_ENUM();
    fn FAX_JOB_MANAGE();
    fn FAX_JOB_OPERATIONS_ENUM();
    fn FAX_JOB_PARAMA();
    fn FAX_JOB_PARAMW();
    fn FAX_JOB_QUERY();
    fn FAX_JOB_STATUS_ENUM();
    fn FAX_JOB_SUBMIT();
    fn FAX_JOB_TYPE_ENUM();
    fn FAX_LOG_CATEGORYA();
    fn FAX_LOG_CATEGORYW();
    fn FAX_LOG_LEVEL_ENUM();
    fn FAX_PORT_INFOA();
    fn FAX_PORT_INFOW();
    fn FAX_PORT_QUERY();
    fn FAX_PORT_SET();
    fn FAX_PRINT_INFOA();
    fn FAX_PRINT_INFOW();
    fn FAX_PRIORITY_TYPE_ENUM();
    fn FAX_PROVIDER_STATUS_ENUM();
    fn FAX_RECEIPT_TYPE_ENUM();
    fn FAX_RECEIVE();
    fn FAX_ROUTE();
    fn FAX_ROUTE_CALLBACKROUTINES();
    fn FAX_ROUTING_METHODA();
    fn FAX_ROUTING_METHODW();
    fn FAX_ROUTING_RULE_CODE_ENUM();
    fn FAX_RULE_STATUS_ENUM();
    fn FAX_SCHEDULE_TYPE_ENUM();
    fn FAX_SEND();
    fn FAX_SERVER_APIVERSION_ENUM();
    fn FAX_SERVER_EVENTS_TYPE_ENUM();
    fn FAX_SMTP_AUTHENTICATION_TYPE_ENUM();
    fn FAX_TIME();
    fn FEI_ABORTING();
    fn FEI_ANSWERED();
    fn FEI_BAD_ADDRESS();
    fn FEI_BUSY();
    fn FEI_CALL_BLACKLISTED();
    fn FEI_CALL_DELAYED();
    fn FEI_COMPLETED();
    fn FEI_DELETED();
    fn FEI_DIALING();
    fn FEI_DISCONNECTED();
    fn FEI_FATAL_ERROR();
    fn FEI_FAXSVC_ENDED();
    fn FEI_FAXSVC_STARTED();
    fn FEI_HANDLED();
    fn FEI_IDLE();
    fn FEI_INITIALIZING();
    fn FEI_JOB_QUEUED();
    fn FEI_LINE_UNAVAILABLE();
    fn FEI_MODEM_POWERED_OFF();
    fn FEI_MODEM_POWERED_ON();
    fn FEI_NEVENTS();
    fn FEI_NOT_FAX_CALL();
    fn FEI_NO_ANSWER();
    fn FEI_NO_DIAL_TONE();
    fn FEI_RECEIVING();
    fn FEI_RINGING();
    fn FEI_ROUTING();
    fn FEI_SENDING();
    fn FPF_RECEIVE();
    fn FPF_SEND();
    fn FPF_VIRTUAL();
    fn FPS_ABORTING();
    fn FPS_ANSWERED();
    fn FPS_AVAILABLE();
    fn FPS_BAD_ADDRESS();
    fn FPS_BUSY();
    fn FPS_CALL_BLACKLISTED();
    fn FPS_CALL_DELAYED();
    fn FPS_COMPLETED();
    fn FPS_DIALING();
    fn FPS_DISCONNECTED();
    fn FPS_FATAL_ERROR();
    fn FPS_HANDLED();
    fn FPS_INITIALIZING();
    fn FPS_NOT_FAX_CALL();
    fn FPS_NO_ANSWER();
    fn FPS_NO_DIAL_TONE();
    fn FPS_OFFLINE();
    fn FPS_RECEIVING();
    fn FPS_RINGING();
    fn FPS_ROUTING();
    fn FPS_SENDING();
    fn FPS_UNAVAILABLE();
    fn FS_ANSWERED();
    fn FS_BAD_ADDRESS();
    fn FS_BUSY();
    fn FS_CALL_BLACKLISTED();
    fn FS_CALL_DELAYED();
    fn FS_COMPLETED();
    fn FS_DIALING();
    fn FS_DISCONNECTED();
    fn FS_FATAL_ERROR();
    fn FS_HANDLED();
    fn FS_INITIALIZING();
    fn FS_LINE_UNAVAILABLE();
    fn FS_NOT_FAX_CALL();
    fn FS_NO_ANSWER();
    fn FS_NO_DIAL_TONE();
    fn FS_RECEIVING();
    fn FS_TRANSMITTING();
    fn FS_USER_ABORT();
    fn FaxAbort();
    fn FaxAccessCheck();
    fn FaxAccount();
    fn FaxAccountFolders();
    fn FaxAccountIncomingArchive();
    fn FaxAccountIncomingQueue();
    fn FaxAccountOutgoingArchive();
    fn FaxAccountOutgoingQueue();
    fn FaxAccountSet();
    fn FaxAccounts();
    fn FaxActivity();
    fn FaxActivityLogging();
    fn FaxClose();
    fn FaxCompleteJobParamsA();
    fn FaxCompleteJobParamsW();
    fn FaxConfiguration();
    fn FaxConnectFaxServerA();
    fn FaxConnectFaxServerW();
    fn FaxDevice();
    fn FaxDeviceIds();
    fn FaxDeviceProvider();
    fn FaxDeviceProviders();
    fn FaxDevices();
    fn FaxDocument();
    fn FaxEnableRoutingMethodA();
    fn FaxEnableRoutingMethodW();
    fn FaxEnumGlobalRoutingInfoA();
    fn FaxEnumGlobalRoutingInfoW();
    fn FaxEnumJobsA();
    fn FaxEnumJobsW();
    fn FaxEnumPortsA();
    fn FaxEnumPortsW();
    fn FaxEnumRoutingMethodsA();
    fn FaxEnumRoutingMethodsW();
    fn FaxEventLogging();
    fn FaxFolders();
    fn FaxFreeBuffer();
    fn FaxGetConfigurationA();
    fn FaxGetConfigurationW();
    fn FaxGetDeviceStatusA();
    fn FaxGetDeviceStatusW();
    fn FaxGetJobA();
    fn FaxGetJobW();
    fn FaxGetLoggingCategoriesA();
    fn FaxGetLoggingCategoriesW();
    fn FaxGetPageData();
    fn FaxGetPortA();
    fn FaxGetPortW();
    fn FaxGetRoutingInfoA();
    fn FaxGetRoutingInfoW();
    fn FaxInboundRouting();
    fn FaxInboundRoutingExtension();
    fn FaxInboundRoutingExtensions();
    fn FaxInboundRoutingMethod();
    fn FaxInboundRoutingMethods();
    fn FaxIncomingArchive();
    fn FaxIncomingJob();
    fn FaxIncomingJobs();
    fn FaxIncomingMessage();
    fn FaxIncomingMessageIterator();
    fn FaxIncomingQueue();
    fn FaxInitializeEventQueue();
    fn FaxJobStatus();
    fn FaxLoggingOptions();
    fn FaxOpenPort();
    fn FaxOutboundRouting();
    fn FaxOutboundRoutingGroup();
    fn FaxOutboundRoutingGroups();
    fn FaxOutboundRoutingRule();
    fn FaxOutboundRoutingRules();
    fn FaxOutgoingArchive();
    fn FaxOutgoingJob();
    fn FaxOutgoingJobs();
    fn FaxOutgoingMessage();
    fn FaxOutgoingMessageIterator();
    fn FaxOutgoingQueue();
    fn FaxPrintCoverPageA();
    fn FaxPrintCoverPageW();
    fn FaxReceiptOptions();
    fn FaxRecipient();
    fn FaxRecipients();
    fn FaxRegisterRoutingExtensionW();
    fn FaxRegisterServiceProviderW();
    fn FaxSecurity();
    fn FaxSecurity2();
    fn FaxSendDocumentA();
    fn FaxSendDocumentForBroadcastA();
    fn FaxSendDocumentForBroadcastW();
    fn FaxSendDocumentW();
    fn FaxSender();
    fn FaxServer();
    fn FaxSetConfigurationA();
    fn FaxSetConfigurationW();
    fn FaxSetGlobalRoutingInfoA();
    fn FaxSetGlobalRoutingInfoW();
    fn FaxSetJobA();
    fn FaxSetJobW();
    fn FaxSetLoggingCategoriesA();
    fn FaxSetLoggingCategoriesW();
    fn FaxSetPortA();
    fn FaxSetPortW();
    fn FaxSetRoutingInfoA();
    fn FaxSetRoutingInfoW();
    fn FaxStartPrintJobA();
    fn FaxStartPrintJobW();
    fn FaxUnregisterServiceProviderW();
    fn GUID_DeviceArrivedLaunch();
    fn GUID_STIUserDefined1();
    fn GUID_STIUserDefined2();
    fn GUID_STIUserDefined3();
    fn GUID_ScanFaxImage();
    fn GUID_ScanImage();
    fn GUID_ScanPrintImage();
    fn IFaxAccount();
    fn IFaxAccountFolders();
    fn IFaxAccountIncomingArchive();
    fn IFaxAccountIncomingQueue();
    fn IFaxAccountNotify();
    fn IFaxAccountOutgoingArchive();
    fn IFaxAccountOutgoingQueue();
    fn IFaxAccountSet();
    fn IFaxAccounts();
    fn IFaxActivity();
    fn IFaxActivityLogging();
    fn IFaxConfiguration();
    fn IFaxDevice();
    fn IFaxDeviceIds();
    fn IFaxDeviceProvider();
    fn IFaxDeviceProviders();
    fn IFaxDevices();
    fn IFaxDocument();
    fn IFaxDocument2();
    fn IFaxEventLogging();
    fn IFaxFolders();
    fn IFaxInboundRouting();
    fn IFaxInboundRoutingExtension();
    fn IFaxInboundRoutingExtensions();
    fn IFaxInboundRoutingMethod();
    fn IFaxInboundRoutingMethods();
    fn IFaxIncomingArchive();
    fn IFaxIncomingJob();
    fn IFaxIncomingJobs();
    fn IFaxIncomingMessage();
    fn IFaxIncomingMessage2();
    fn IFaxIncomingMessageIterator();
    fn IFaxIncomingQueue();
    fn IFaxJobStatus();
    fn IFaxLoggingOptions();
    fn IFaxOutboundRouting();
    fn IFaxOutboundRoutingGroup();
    fn IFaxOutboundRoutingGroups();
    fn IFaxOutboundRoutingRule();
    fn IFaxOutboundRoutingRules();
    fn IFaxOutgoingArchive();
    fn IFaxOutgoingJob();
    fn IFaxOutgoingJob2();
    fn IFaxOutgoingJobs();
    fn IFaxOutgoingMessage();
    fn IFaxOutgoingMessage2();
    fn IFaxOutgoingMessageIterator();
    fn IFaxOutgoingQueue();
    fn IFaxReceiptOptions();
    fn IFaxRecipient();
    fn IFaxRecipients();
    fn IFaxSecurity();
    fn IFaxSecurity2();
    fn IFaxSender();
    fn IFaxServer();
    fn IFaxServer2();
    fn IFaxServerNotify();
    fn IFaxServerNotify2();
    fn IS_DIGITAL_CAMERA_VAL();
    fn IStiDevice();
    fn IStiDeviceControl();
    fn IStiDeviceW();
    fn IStiUSD();
    fn IStillImageW();
    fn JS_DELETING();
    fn JS_FAILED();
    fn JS_INPROGRESS();
    fn JS_NOLINE();
    fn JS_PAUSED();
    fn JS_PENDING();
    fn JS_RETRIES_EXCEEDED();
    fn JS_RETRYING();
    fn JT_FAIL_RECEIVE();
    fn JT_RECEIVE();
    fn JT_ROUTING();
    fn JT_SEND();
    fn JT_UNKNOWN();
    fn MAX_NOTIFICATION_DATA();
    fn PFAXABORT();
    fn PFAXACCESSCHECK();
    fn PFAXCLOSE();
    fn PFAXCOMPLETEJOBPARAMSA();
    fn PFAXCOMPLETEJOBPARAMSW();
    fn PFAXCONNECTFAXSERVERA();
    fn PFAXCONNECTFAXSERVERW();
    fn PFAXDEVABORTOPERATION();
    fn PFAXDEVCONFIGURE();
    fn PFAXDEVENDJOB();
    fn PFAXDEVINITIALIZE();
    fn PFAXDEVRECEIVE();
    fn PFAXDEVREPORTSTATUS();
    fn PFAXDEVSEND();
    fn PFAXDEVSHUTDOWN();
    fn PFAXDEVSTARTJOB();
    fn PFAXDEVVIRTUALDEVICECREATION();
    fn PFAXENABLEROUTINGMETHODA();
    fn PFAXENABLEROUTINGMETHODW();
    fn PFAXENUMGLOBALROUTINGINFOA();
    fn PFAXENUMGLOBALROUTINGINFOW();
    fn PFAXENUMJOBSA();
    fn PFAXENUMJOBSW();
    fn PFAXENUMPORTSA();
    fn PFAXENUMPORTSW();
    fn PFAXENUMROUTINGMETHODSA();
    fn PFAXENUMROUTINGMETHODSW();
    fn PFAXFREEBUFFER();
    fn PFAXGETCONFIGURATIONA();
    fn PFAXGETCONFIGURATIONW();
    fn PFAXGETDEVICESTATUSA();
    fn PFAXGETDEVICESTATUSW();
    fn PFAXGETJOBA();
    fn PFAXGETJOBW();
    fn PFAXGETLOGGINGCATEGORIESA();
    fn PFAXGETLOGGINGCATEGORIESW();
    fn PFAXGETPAGEDATA();
    fn PFAXGETPORTA();
    fn PFAXGETPORTW();
    fn PFAXGETROUTINGINFOA();
    fn PFAXGETROUTINGINFOW();
    fn PFAXINITIALIZEEVENTQUEUE();
    fn PFAXOPENPORT();
    fn PFAXPRINTCOVERPAGEA();
    fn PFAXPRINTCOVERPAGEW();
    fn PFAXREGISTERROUTINGEXTENSIONW();
    fn PFAXREGISTERSERVICEPROVIDERW();
    fn PFAXROUTEADDFILE();
    fn PFAXROUTEDELETEFILE();
    fn PFAXROUTEDEVICECHANGENOTIFICATION();
    fn PFAXROUTEDEVICEENABLE();
    fn PFAXROUTEENUMFILE();
    fn PFAXROUTEENUMFILES();
    fn PFAXROUTEGETFILE();
    fn PFAXROUTEGETROUTINGINFO();
    fn PFAXROUTEINITIALIZE();
    fn PFAXROUTEMETHOD();
    fn PFAXROUTEMODIFYROUTINGDATA();
    fn PFAXROUTESETROUTINGINFO();
    fn PFAXSENDDOCUMENTA();
    fn PFAXSENDDOCUMENTFORBROADCASTA();
    fn PFAXSENDDOCUMENTFORBROADCASTW();
    fn PFAXSENDDOCUMENTW();
    fn PFAXSETCONFIGURATIONA();
    fn PFAXSETCONFIGURATIONW();
    fn PFAXSETGLOBALROUTINGINFOA();
    fn PFAXSETGLOBALROUTINGINFOW();
    fn PFAXSETJOBA();
    fn PFAXSETJOBW();
    fn PFAXSETLOGGINGCATEGORIESA();
    fn PFAXSETLOGGINGCATEGORIESW();
    fn PFAXSETPORTA();
    fn PFAXSETPORTW();
    fn PFAXSETROUTINGINFOA();
    fn PFAXSETROUTINGINFOW();
    fn PFAXSTARTPRINTJOBA();
    fn PFAXSTARTPRINTJOBW();
    fn PFAXUNREGISTERSERVICEPROVIDERW();
    fn PFAX_EXT_CONFIG_CHANGE();
    fn PFAX_EXT_FREE_BUFFER();
    fn PFAX_EXT_GET_DATA();
    fn PFAX_EXT_INITIALIZE_CONFIG();
    fn PFAX_EXT_REGISTER_FOR_EVENTS();
    fn PFAX_EXT_SET_DATA();
    fn PFAX_EXT_UNREGISTER_FOR_EVENTS();
    fn PFAX_LINECALLBACK();
    fn PFAX_RECIPIENT_CALLBACKA();
    fn PFAX_RECIPIENT_CALLBACKW();
    fn PFAX_ROUTING_INSTALLATION_CALLBACKW();
    fn PFAX_SEND_CALLBACK();
    fn PFAX_SERVICE_CALLBACK();
    fn STIEDFL_ALLDEVICES();
    fn STIEDFL_ATTACHEDONLY();
    fn STIERR_ALREADY_INITIALIZED();
    fn STIERR_BADDRIVER();
    fn STIERR_BETA_VERSION();
    fn STIERR_DEVICENOTREG();
    fn STIERR_DEVICE_LOCKED();
    fn STIERR_DEVICE_NOTREADY();
    fn STIERR_GENERIC();
    fn STIERR_HANDLEEXISTS();
    fn STIERR_INVALID_DEVICE_NAME();
    fn STIERR_INVALID_HW_TYPE();
    fn STIERR_INVALID_PARAM();
    fn STIERR_NEEDS_LOCK();
    fn STIERR_NOEVENTS();
    fn STIERR_NOINTERFACE();
    fn STIERR_NOTINITIALIZED();
    fn STIERR_NOT_INITIALIZED();
    fn STIERR_OBJECTNOTFOUND();
    fn STIERR_OLD_VERSION();
    fn STIERR_OUTOFMEMORY();
    fn STIERR_READONLY();
    fn STIERR_SHARING_VIOLATION();
    fn STIERR_UNSUPPORTED();
    fn STINOTIFY();
    fn STISUBSCRIBE();
    fn STI_CHANGENOEFFECT();
    fn STI_DEVICE_CREATE_BOTH();
    fn STI_DEVICE_CREATE_DATA();
    fn STI_DEVICE_CREATE_FOR_MONITOR();
    fn STI_DEVICE_CREATE_MASK();
    fn STI_DEVICE_CREATE_STATUS();
    fn STI_DEVICE_INFORMATIONW();
    fn STI_DEVICE_MJ_TYPE();
    fn STI_DEVICE_STATUS();
    fn STI_DEVSTATUS_EVENTS_STATE();
    fn STI_DEVSTATUS_ONLINE_STATE();
    fn STI_DEV_CAPS();
    fn STI_DIAG();
    fn STI_DIAGCODE_HWPRESENCE();
    fn STI_ERROR_NO_ERROR();
    fn STI_EVENTHANDLING_ENABLED();
    fn STI_EVENTHANDLING_PENDING();
    fn STI_EVENTHANDLING_POLLING();
    fn STI_GENCAP_AUTO_PORTSELECT();
    fn STI_GENCAP_GENERATE_ARRIVALEVENT();
    fn STI_GENCAP_NOTIFICATIONS();
    fn STI_GENCAP_POLLING_NEEDED();
    fn STI_GENCAP_SUBSET();
    fn STI_GENCAP_WIA();
    fn STI_HW_CONFIG_PARALLEL();
    fn STI_HW_CONFIG_SCSI();
    fn STI_HW_CONFIG_SERIAL();
    fn STI_HW_CONFIG_UNKNOWN();
    fn STI_HW_CONFIG_USB();
    fn STI_MAX_INTERNAL_NAME_LENGTH();
    fn STI_NOTCONNECTED();
    fn STI_OK();
    fn STI_ONLINESTATE_BUSY();
    fn STI_ONLINESTATE_ERROR();
    fn STI_ONLINESTATE_INITIALIZING();
    fn STI_ONLINESTATE_IO_ACTIVE();
    fn STI_ONLINESTATE_OFFLINE();
    fn STI_ONLINESTATE_OPERATIONAL();
    fn STI_ONLINESTATE_PAPER_JAM();
    fn STI_ONLINESTATE_PAPER_PROBLEM();
    fn STI_ONLINESTATE_PAUSED();
    fn STI_ONLINESTATE_PENDING();
    fn STI_ONLINESTATE_POWER_SAVE();
    fn STI_ONLINESTATE_TRANSFERRING();
    fn STI_ONLINESTATE_USER_INTERVENTION();
    fn STI_ONLINESTATE_WARMING_UP();
    fn STI_RAW_RESERVED();
    fn STI_SUBSCRIBE_FLAG_EVENT();
    fn STI_SUBSCRIBE_FLAG_WINDOW();
    fn STI_TRACE_ERROR();
    fn STI_TRACE_INFORMATION();
    fn STI_TRACE_WARNING();
    fn STI_UNICODE();
    fn STI_USD_CAPS();
    fn STI_USD_GENCAP_NATIVE_PUSHSUPPORT();
    fn STI_VERSION();
    fn STI_VERSION_FLAG_MASK();
    fn STI_VERSION_FLAG_UNICODE();
    fn STI_VERSION_MIN_ALLOWED();
    fn STI_VERSION_REAL();
    fn STI_WIA_DEVICE_INFORMATIONW();
    fn SUPPORTS_MSCPLUS_VAL();
    fn SendToFaxRecipient();
    fn SendToMode();
    fn StiCreateInstanceW();
    fn WIA_INCOMPAT_XP();
    fn _ERROR_INFOW();
    fn _IFaxAccountNotify();
    fn _IFaxServerNotify2();
    fn lDEFAULT_PREFETCH_SIZE();
    fn wcharREASSIGN_RECIPIENTS_DELIMITER();
}
