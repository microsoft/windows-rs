#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "Devices_Enumeration_Pnp")]
pub mod Pnp;
#[link(name = "windows")]
extern "system" {}
pub struct DeviceAccessChangedEventArgs(i32);
pub struct DeviceAccessInformation(i32);
pub struct DeviceAccessStatus(i32);
pub struct DeviceClass(i32);
pub struct DeviceConnectionChangeTriggerDetails(i32);
pub struct DeviceDisconnectButtonClickedEventArgs(i32);
pub struct DeviceInformation(i32);
pub struct DeviceInformationCollection(i32);
pub struct DeviceInformationCustomPairing(i32);
pub struct DeviceInformationKind(i32);
pub struct DeviceInformationPairing(i32);
pub struct DeviceInformationUpdate(i32);
pub struct DevicePairingKinds(i32);
pub struct DevicePairingProtectionLevel(i32);
pub struct DevicePairingRequestedEventArgs(i32);
pub struct DevicePairingResult(i32);
pub struct DevicePairingResultStatus(i32);
pub struct DevicePicker(i32);
pub struct DevicePickerAppearance(i32);
pub struct DevicePickerDisplayStatusOptions(i32);
pub struct DevicePickerFilter(i32);
pub struct DeviceSelectedEventArgs(i32);
pub struct DeviceThumbnail(i32);
pub struct DeviceUnpairingResult(i32);
pub struct DeviceUnpairingResultStatus(i32);
pub struct DeviceWatcher(i32);
pub struct DeviceWatcherEvent(i32);
pub struct DeviceWatcherEventKind(i32);
pub struct DeviceWatcherStatus(i32);
pub struct DeviceWatcherTriggerDetails(i32);
pub struct EnclosureLocation(i32);
pub struct IDeviceAccessChangedEventArgs(pub *mut ::core::ffi::c_void);
pub struct IDeviceAccessChangedEventArgs2(pub *mut ::core::ffi::c_void);
pub struct IDeviceAccessInformation(pub *mut ::core::ffi::c_void);
pub struct IDeviceAccessInformationStatics(pub *mut ::core::ffi::c_void);
pub struct IDeviceConnectionChangeTriggerDetails(pub *mut ::core::ffi::c_void);
pub struct IDeviceDisconnectButtonClickedEventArgs(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformation(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformation2(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationCustomPairing(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationPairing(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationPairing2(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationPairingStatics(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationPairingStatics2(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationStatics(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationStatics2(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationUpdate(pub *mut ::core::ffi::c_void);
pub struct IDeviceInformationUpdate2(pub *mut ::core::ffi::c_void);
pub struct IDevicePairingRequestedEventArgs(pub *mut ::core::ffi::c_void);
pub struct IDevicePairingRequestedEventArgs2(pub *mut ::core::ffi::c_void);
pub struct IDevicePairingResult(pub *mut ::core::ffi::c_void);
pub struct IDevicePairingSettings(pub *mut ::core::ffi::c_void);
pub struct IDevicePicker(pub *mut ::core::ffi::c_void);
pub struct IDevicePickerAppearance(pub *mut ::core::ffi::c_void);
pub struct IDevicePickerFilter(pub *mut ::core::ffi::c_void);
pub struct IDeviceSelectedEventArgs(pub *mut ::core::ffi::c_void);
pub struct IDeviceUnpairingResult(pub *mut ::core::ffi::c_void);
pub struct IDeviceWatcher(pub *mut ::core::ffi::c_void);
pub struct IDeviceWatcher2(pub *mut ::core::ffi::c_void);
pub struct IDeviceWatcherEvent(pub *mut ::core::ffi::c_void);
pub struct IDeviceWatcherTriggerDetails(pub *mut ::core::ffi::c_void);
pub struct IEnclosureLocation(pub *mut ::core::ffi::c_void);
pub struct IEnclosureLocation2(pub *mut ::core::ffi::c_void);
pub struct Panel(i32);
