#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn IMidiChannelPressureMessage();
    fn IMidiChannelPressureMessageFactory();
    fn IMidiControlChangeMessage();
    fn IMidiControlChangeMessageFactory();
    fn IMidiInPort();
    fn IMidiInPortStatics();
    fn IMidiMessage();
    fn IMidiMessageReceivedEventArgs();
    fn IMidiNoteOffMessage();
    fn IMidiNoteOffMessageFactory();
    fn IMidiNoteOnMessage();
    fn IMidiNoteOnMessageFactory();
    fn IMidiOutPort();
    fn IMidiOutPortStatics();
    fn IMidiPitchBendChangeMessage();
    fn IMidiPitchBendChangeMessageFactory();
    fn IMidiPolyphonicKeyPressureMessage();
    fn IMidiPolyphonicKeyPressureMessageFactory();
    fn IMidiProgramChangeMessage();
    fn IMidiProgramChangeMessageFactory();
    fn IMidiSongPositionPointerMessage();
    fn IMidiSongPositionPointerMessageFactory();
    fn IMidiSongSelectMessage();
    fn IMidiSongSelectMessageFactory();
    fn IMidiSynthesizer();
    fn IMidiSynthesizerStatics();
    fn IMidiSystemExclusiveMessageFactory();
    fn IMidiTimeCodeMessage();
    fn IMidiTimeCodeMessageFactory();
    fn MidiActiveSensingMessage();
    fn MidiChannelPressureMessage();
    fn MidiContinueMessage();
    fn MidiControlChangeMessage();
    fn MidiInPort();
    fn MidiMessageReceivedEventArgs();
    fn MidiMessageType();
    fn MidiNoteOffMessage();
    fn MidiNoteOnMessage();
    fn MidiOutPort();
    fn MidiPitchBendChangeMessage();
    fn MidiPolyphonicKeyPressureMessage();
    fn MidiProgramChangeMessage();
    fn MidiSongPositionPointerMessage();
    fn MidiSongSelectMessage();
    fn MidiStartMessage();
    fn MidiStopMessage();
    fn MidiSynthesizer();
    fn MidiSystemExclusiveMessage();
    fn MidiSystemResetMessage();
    fn MidiTimeCodeMessage();
    fn MidiTimingClockMessage();
    fn MidiTuneRequestMessage();
}
