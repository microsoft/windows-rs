#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "Devices_Sensors_Custom")]
pub mod Custom;
#[link(name = "windows")]
extern "system" {
    fn Accelerometer();
    fn AccelerometerDataThreshold();
    fn AccelerometerReading();
    fn AccelerometerReadingChangedEventArgs();
    fn AccelerometerReadingType();
    fn AccelerometerShakenEventArgs();
    fn ActivitySensor();
    fn ActivitySensorReading();
    fn ActivitySensorReadingChangeReport();
    fn ActivitySensorReadingChangedEventArgs();
    fn ActivitySensorReadingConfidence();
    fn ActivitySensorTriggerDetails();
    fn ActivityType();
    fn Altimeter();
    fn AltimeterReading();
    fn AltimeterReadingChangedEventArgs();
    fn Barometer();
    fn BarometerDataThreshold();
    fn BarometerReading();
    fn BarometerReadingChangedEventArgs();
    fn Compass();
    fn CompassDataThreshold();
    fn CompassReading();
    fn CompassReadingChangedEventArgs();
    fn Gyrometer();
    fn GyrometerDataThreshold();
    fn GyrometerReading();
    fn GyrometerReadingChangedEventArgs();
    fn HingeAngleReading();
    fn HingeAngleSensor();
    fn HingeAngleSensorReadingChangedEventArgs();
    fn IAccelerometer();
    fn IAccelerometer2();
    fn IAccelerometer3();
    fn IAccelerometer4();
    fn IAccelerometer5();
    fn IAccelerometerDataThreshold();
    fn IAccelerometerDeviceId();
    fn IAccelerometerReading();
    fn IAccelerometerReading2();
    fn IAccelerometerReadingChangedEventArgs();
    fn IAccelerometerShakenEventArgs();
    fn IAccelerometerStatics();
    fn IAccelerometerStatics2();
    fn IAccelerometerStatics3();
    fn IActivitySensor();
    fn IActivitySensorReading();
    fn IActivitySensorReadingChangeReport();
    fn IActivitySensorReadingChangedEventArgs();
    fn IActivitySensorStatics();
    fn IActivitySensorTriggerDetails();
    fn IAltimeter();
    fn IAltimeter2();
    fn IAltimeterReading();
    fn IAltimeterReading2();
    fn IAltimeterReadingChangedEventArgs();
    fn IAltimeterStatics();
    fn IBarometer();
    fn IBarometer2();
    fn IBarometer3();
    fn IBarometerDataThreshold();
    fn IBarometerReading();
    fn IBarometerReading2();
    fn IBarometerReadingChangedEventArgs();
    fn IBarometerStatics();
    fn IBarometerStatics2();
    fn ICompass();
    fn ICompass2();
    fn ICompass3();
    fn ICompass4();
    fn ICompassDataThreshold();
    fn ICompassDeviceId();
    fn ICompassReading();
    fn ICompassReading2();
    fn ICompassReadingChangedEventArgs();
    fn ICompassReadingHeadingAccuracy();
    fn ICompassStatics();
    fn ICompassStatics2();
    fn IGyrometer();
    fn IGyrometer2();
    fn IGyrometer3();
    fn IGyrometer4();
    fn IGyrometerDataThreshold();
    fn IGyrometerDeviceId();
    fn IGyrometerReading();
    fn IGyrometerReading2();
    fn IGyrometerReadingChangedEventArgs();
    fn IGyrometerStatics();
    fn IGyrometerStatics2();
    fn IHingeAngleReading();
    fn IHingeAngleSensor();
    fn IHingeAngleSensorReadingChangedEventArgs();
    fn IHingeAngleSensorStatics();
    fn IInclinometer();
    fn IInclinometer2();
    fn IInclinometer3();
    fn IInclinometer4();
    fn IInclinometerDataThreshold();
    fn IInclinometerDeviceId();
    fn IInclinometerReading();
    fn IInclinometerReading2();
    fn IInclinometerReadingChangedEventArgs();
    fn IInclinometerReadingYawAccuracy();
    fn IInclinometerStatics();
    fn IInclinometerStatics2();
    fn IInclinometerStatics3();
    fn IInclinometerStatics4();
    fn ILightSensor();
    fn ILightSensor2();
    fn ILightSensor3();
    fn ILightSensorDataThreshold();
    fn ILightSensorDeviceId();
    fn ILightSensorReading();
    fn ILightSensorReading2();
    fn ILightSensorReadingChangedEventArgs();
    fn ILightSensorStatics();
    fn ILightSensorStatics2();
    fn IMagnetometer();
    fn IMagnetometer2();
    fn IMagnetometer3();
    fn IMagnetometer4();
    fn IMagnetometerDataThreshold();
    fn IMagnetometerDeviceId();
    fn IMagnetometerReading();
    fn IMagnetometerReading2();
    fn IMagnetometerReadingChangedEventArgs();
    fn IMagnetometerStatics();
    fn IMagnetometerStatics2();
    fn IOrientationSensor();
    fn IOrientationSensor2();
    fn IOrientationSensor3();
    fn IOrientationSensorDeviceId();
    fn IOrientationSensorReading();
    fn IOrientationSensorReading2();
    fn IOrientationSensorReadingChangedEventArgs();
    fn IOrientationSensorReadingYawAccuracy();
    fn IOrientationSensorStatics();
    fn IOrientationSensorStatics2();
    fn IOrientationSensorStatics3();
    fn IOrientationSensorStatics4();
    fn IPedometer();
    fn IPedometer2();
    fn IPedometerDataThresholdFactory();
    fn IPedometerReading();
    fn IPedometerReadingChangedEventArgs();
    fn IPedometerStatics();
    fn IPedometerStatics2();
    fn IProximitySensor();
    fn IProximitySensorDataThresholdFactory();
    fn IProximitySensorReading();
    fn IProximitySensorReadingChangedEventArgs();
    fn IProximitySensorStatics();
    fn IProximitySensorStatics2();
    fn ISensorDataThreshold();
    fn ISensorDataThresholdTriggerDetails();
    fn ISensorQuaternion();
    fn ISensorRotationMatrix();
    fn ISimpleOrientationSensor();
    fn ISimpleOrientationSensor2();
    fn ISimpleOrientationSensorDeviceId();
    fn ISimpleOrientationSensorOrientationChangedEventArgs();
    fn ISimpleOrientationSensorStatics();
    fn ISimpleOrientationSensorStatics2();
    fn Inclinometer();
    fn InclinometerDataThreshold();
    fn InclinometerReading();
    fn InclinometerReadingChangedEventArgs();
    fn LightSensor();
    fn LightSensorDataThreshold();
    fn LightSensorReading();
    fn LightSensorReadingChangedEventArgs();
    fn Magnetometer();
    fn MagnetometerAccuracy();
    fn MagnetometerDataThreshold();
    fn MagnetometerReading();
    fn MagnetometerReadingChangedEventArgs();
    fn OrientationSensor();
    fn OrientationSensorReading();
    fn OrientationSensorReadingChangedEventArgs();
    fn Pedometer();
    fn PedometerDataThreshold();
    fn PedometerReading();
    fn PedometerReadingChangedEventArgs();
    fn PedometerStepKind();
    fn ProximitySensor();
    fn ProximitySensorDataThreshold();
    fn ProximitySensorDisplayOnOffController();
    fn ProximitySensorReading();
    fn ProximitySensorReadingChangedEventArgs();
    fn SensorDataThresholdTriggerDetails();
    fn SensorOptimizationGoal();
    fn SensorQuaternion();
    fn SensorReadingType();
    fn SensorRotationMatrix();
    fn SensorType();
    fn SimpleOrientation();
    fn SimpleOrientationSensor();
    fn SimpleOrientationSensorOrientationChangedEventArgs();
}
