#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn CoreTextCompositionCompletedEventArgs();
    fn CoreTextCompositionSegment();
    fn CoreTextCompositionStartedEventArgs();
    fn CoreTextEditContext();
    fn CoreTextFormatUpdatingEventArgs();
    fn CoreTextFormatUpdatingReason();
    fn CoreTextFormatUpdatingResult();
    fn CoreTextInputPaneDisplayPolicy();
    fn CoreTextInputScope();
    fn CoreTextLayoutBounds();
    fn CoreTextLayoutRequest();
    fn CoreTextLayoutRequestedEventArgs();
    fn CoreTextRange();
    fn CoreTextSelectionRequest();
    fn CoreTextSelectionRequestedEventArgs();
    fn CoreTextSelectionUpdatingEventArgs();
    fn CoreTextSelectionUpdatingResult();
    fn CoreTextServicesConstants();
    fn CoreTextServicesManager();
    fn CoreTextTextRequest();
    fn CoreTextTextRequestedEventArgs();
    fn CoreTextTextUpdatingEventArgs();
    fn CoreTextTextUpdatingResult();
    fn ICoreTextCompositionCompletedEventArgs();
    fn ICoreTextCompositionSegment();
    fn ICoreTextCompositionStartedEventArgs();
    fn ICoreTextEditContext();
    fn ICoreTextEditContext2();
    fn ICoreTextFormatUpdatingEventArgs();
    fn ICoreTextLayoutBounds();
    fn ICoreTextLayoutRequest();
    fn ICoreTextLayoutRequest2();
    fn ICoreTextLayoutRequestedEventArgs();
    fn ICoreTextSelectionRequest();
    fn ICoreTextSelectionRequestedEventArgs();
    fn ICoreTextSelectionUpdatingEventArgs();
    fn ICoreTextServicesManager();
    fn ICoreTextServicesManagerStatics();
    fn ICoreTextServicesStatics();
    fn ICoreTextTextRequest();
    fn ICoreTextTextRequestedEventArgs();
    fn ICoreTextTextUpdatingEventArgs();
}
