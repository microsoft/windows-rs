#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "UI_Notifications_Management")]
pub mod Management;
#[link(name = "windows")]
extern "system" {
    fn AdaptiveNotificationContentKind();
    fn AdaptiveNotificationText();
    fn BadgeNotification();
    fn BadgeTemplateType();
    fn BadgeUpdateManager();
    fn BadgeUpdateManagerForUser();
    fn BadgeUpdater();
    fn IAdaptiveNotificationContent();
    fn IAdaptiveNotificationText();
    fn IBadgeNotification();
    fn IBadgeNotificationFactory();
    fn IBadgeUpdateManagerForUser();
    fn IBadgeUpdateManagerStatics();
    fn IBadgeUpdateManagerStatics2();
    fn IBadgeUpdater();
    fn IKnownAdaptiveNotificationHintsStatics();
    fn IKnownAdaptiveNotificationTextStylesStatics();
    fn IKnownNotificationBindingsStatics();
    fn INotification();
    fn INotificationBinding();
    fn INotificationData();
    fn INotificationDataFactory();
    fn INotificationVisual();
    fn IScheduledTileNotification();
    fn IScheduledTileNotificationFactory();
    fn IScheduledToastNotification();
    fn IScheduledToastNotification2();
    fn IScheduledToastNotification3();
    fn IScheduledToastNotification4();
    fn IScheduledToastNotificationFactory();
    fn IScheduledToastNotificationShowingEventArgs();
    fn IShownTileNotification();
    fn ITileFlyoutNotification();
    fn ITileFlyoutNotificationFactory();
    fn ITileFlyoutUpdateManagerStatics();
    fn ITileFlyoutUpdater();
    fn ITileNotification();
    fn ITileNotificationFactory();
    fn ITileUpdateManagerForUser();
    fn ITileUpdateManagerStatics();
    fn ITileUpdateManagerStatics2();
    fn ITileUpdater();
    fn ITileUpdater2();
    fn IToastActivatedEventArgs();
    fn IToastActivatedEventArgs2();
    fn IToastCollection();
    fn IToastCollectionFactory();
    fn IToastCollectionManager();
    fn IToastDismissedEventArgs();
    fn IToastFailedEventArgs();
    fn IToastNotification();
    fn IToastNotification2();
    fn IToastNotification3();
    fn IToastNotification4();
    fn IToastNotification6();
    fn IToastNotificationActionTriggerDetail();
    fn IToastNotificationFactory();
    fn IToastNotificationHistory();
    fn IToastNotificationHistory2();
    fn IToastNotificationHistoryChangedTriggerDetail();
    fn IToastNotificationHistoryChangedTriggerDetail2();
    fn IToastNotificationManagerForUser();
    fn IToastNotificationManagerForUser2();
    fn IToastNotificationManagerStatics();
    fn IToastNotificationManagerStatics2();
    fn IToastNotificationManagerStatics4();
    fn IToastNotificationManagerStatics5();
    fn IToastNotifier();
    fn IToastNotifier2();
    fn IToastNotifier3();
    fn IUserNotification();
    fn IUserNotificationChangedEventArgs();
    fn KnownAdaptiveNotificationHints();
    fn KnownAdaptiveNotificationTextStyles();
    fn KnownNotificationBindings();
    fn Notification();
    fn NotificationBinding();
    fn NotificationData();
    fn NotificationKinds();
    fn NotificationMirroring();
    fn NotificationSetting();
    fn NotificationUpdateResult();
    fn NotificationVisual();
    fn PeriodicUpdateRecurrence();
    fn ScheduledTileNotification();
    fn ScheduledToastNotification();
    fn ScheduledToastNotificationShowingEventArgs();
    fn ShownTileNotification();
    fn TileFlyoutNotification();
    fn TileFlyoutTemplateType();
    fn TileFlyoutUpdateManager();
    fn TileFlyoutUpdater();
    fn TileNotification();
    fn TileTemplateType();
    fn TileUpdateManager();
    fn TileUpdateManagerForUser();
    fn TileUpdater();
    fn ToastActivatedEventArgs();
    fn ToastCollection();
    fn ToastCollectionManager();
    fn ToastDismissalReason();
    fn ToastDismissedEventArgs();
    fn ToastFailedEventArgs();
    fn ToastHistoryChangedType();
    fn ToastNotification();
    fn ToastNotificationActionTriggerDetail();
    fn ToastNotificationHistory();
    fn ToastNotificationHistoryChangedTriggerDetail();
    fn ToastNotificationManager();
    fn ToastNotificationManagerForUser();
    fn ToastNotificationPriority();
    fn ToastNotifier();
    fn ToastTemplateType();
    fn UserNotification();
    fn UserNotificationChangedEventArgs();
    fn UserNotificationChangedKind();
}
