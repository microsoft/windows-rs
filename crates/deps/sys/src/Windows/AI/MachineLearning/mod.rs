#![allow(non_snake_case, non_camel_case_types)]
#[cfg(feature = "AI_MachineLearning_Preview")]
pub mod Preview;
#[link(name = "windows")]
extern "system" {
    fn IImageFeatureDescriptor();
    fn IImageFeatureDescriptor2();
    fn IImageFeatureValue();
    fn IImageFeatureValueStatics();
    fn ILearningModel();
    fn ILearningModelBinding();
    fn ILearningModelBindingFactory();
    fn ILearningModelDevice();
    fn ILearningModelDeviceFactory();
    fn ILearningModelDeviceStatics();
    fn ILearningModelEvaluationResult();
    fn ILearningModelFeatureDescriptor();
    fn ILearningModelFeatureValue();
    fn ILearningModelOperatorProvider();
    fn ILearningModelSession();
    fn ILearningModelSessionFactory();
    fn ILearningModelSessionFactory2();
    fn ILearningModelSessionOptions();
    fn ILearningModelSessionOptions2();
    fn ILearningModelSessionOptions3();
    fn ILearningModelStatics();
    fn IMapFeatureDescriptor();
    fn ISequenceFeatureDescriptor();
    fn ITensor();
    fn ITensorBoolean();
    fn ITensorBooleanStatics();
    fn ITensorBooleanStatics2();
    fn ITensorDouble();
    fn ITensorDoubleStatics();
    fn ITensorDoubleStatics2();
    fn ITensorFeatureDescriptor();
    fn ITensorFloat();
    fn ITensorFloat16Bit();
    fn ITensorFloat16BitStatics();
    fn ITensorFloat16BitStatics2();
    fn ITensorFloatStatics();
    fn ITensorFloatStatics2();
    fn ITensorInt16Bit();
    fn ITensorInt16BitStatics();
    fn ITensorInt16BitStatics2();
    fn ITensorInt32Bit();
    fn ITensorInt32BitStatics();
    fn ITensorInt32BitStatics2();
    fn ITensorInt64Bit();
    fn ITensorInt64BitStatics();
    fn ITensorInt64BitStatics2();
    fn ITensorInt8Bit();
    fn ITensorInt8BitStatics();
    fn ITensorInt8BitStatics2();
    fn ITensorString();
    fn ITensorStringStatics();
    fn ITensorStringStatics2();
    fn ITensorUInt16Bit();
    fn ITensorUInt16BitStatics();
    fn ITensorUInt16BitStatics2();
    fn ITensorUInt32Bit();
    fn ITensorUInt32BitStatics();
    fn ITensorUInt32BitStatics2();
    fn ITensorUInt64Bit();
    fn ITensorUInt64BitStatics();
    fn ITensorUInt64BitStatics2();
    fn ITensorUInt8Bit();
    fn ITensorUInt8BitStatics();
    fn ITensorUInt8BitStatics2();
    fn ImageFeatureDescriptor();
    fn ImageFeatureValue();
    fn LearningModel();
    fn LearningModelBinding();
    fn LearningModelDevice();
    fn LearningModelDeviceKind();
    fn LearningModelEvaluationResult();
    fn LearningModelFeatureKind();
    fn LearningModelPixelRange();
    fn LearningModelSession();
    fn LearningModelSessionOptions();
    fn MachineLearningContract();
    fn MapFeatureDescriptor();
    fn SequenceFeatureDescriptor();
    fn TensorBoolean();
    fn TensorDouble();
    fn TensorFeatureDescriptor();
    fn TensorFloat();
    fn TensorFloat16Bit();
    fn TensorInt16Bit();
    fn TensorInt32Bit();
    fn TensorInt64Bit();
    fn TensorInt8Bit();
    fn TensorKind();
    fn TensorString();
    fn TensorUInt16Bit();
    fn TensorUInt32Bit();
    fn TensorUInt64Bit();
    fn TensorUInt8Bit();
}
