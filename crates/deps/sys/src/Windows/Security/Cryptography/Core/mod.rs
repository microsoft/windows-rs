#![allow(non_snake_case, non_camel_case_types)]
#[link(name = "windows")]
extern "system" {
    fn AsymmetricAlgorithmNames();
    fn AsymmetricKeyAlgorithmProvider();
    fn Capi1KdfTargetAlgorithm();
    fn CryptographicEngine();
    fn CryptographicHash();
    fn CryptographicKey();
    fn CryptographicPadding();
    fn CryptographicPrivateKeyBlobType();
    fn CryptographicPublicKeyBlobType();
    fn EccCurveNames();
    fn EncryptedAndAuthenticatedData();
    fn HashAlgorithmNames();
    fn HashAlgorithmProvider();
    fn IAsymmetricAlgorithmNamesStatics();
    fn IAsymmetricAlgorithmNamesStatics2();
    fn IAsymmetricKeyAlgorithmProvider();
    fn IAsymmetricKeyAlgorithmProvider2();
    fn IAsymmetricKeyAlgorithmProviderStatics();
    fn ICryptographicEngineStatics();
    fn ICryptographicEngineStatics2();
    fn ICryptographicKey();
    fn IEccCurveNamesStatics();
    fn IEncryptedAndAuthenticatedData();
    fn IHashAlgorithmNamesStatics();
    fn IHashAlgorithmProvider();
    fn IHashAlgorithmProviderStatics();
    fn IHashComputation();
    fn IKeyDerivationAlgorithmNamesStatics();
    fn IKeyDerivationAlgorithmNamesStatics2();
    fn IKeyDerivationAlgorithmProvider();
    fn IKeyDerivationAlgorithmProviderStatics();
    fn IKeyDerivationParameters();
    fn IKeyDerivationParameters2();
    fn IKeyDerivationParametersStatics();
    fn IKeyDerivationParametersStatics2();
    fn IMacAlgorithmNamesStatics();
    fn IMacAlgorithmProvider();
    fn IMacAlgorithmProvider2();
    fn IMacAlgorithmProviderStatics();
    fn IPersistedKeyProviderStatics();
    fn ISymmetricAlgorithmNamesStatics();
    fn ISymmetricKeyAlgorithmProvider();
    fn ISymmetricKeyAlgorithmProviderStatics();
    fn KeyDerivationAlgorithmNames();
    fn KeyDerivationAlgorithmProvider();
    fn KeyDerivationParameters();
    fn MacAlgorithmNames();
    fn MacAlgorithmProvider();
    fn PersistedKeyProvider();
    fn SymmetricAlgorithmNames();
    fn SymmetricKeyAlgorithmProvider();
}
