// Bindings generated by `windows-bindgen` 0.52.0

#![allow(non_snake_case, non_upper_case_globals, non_camel_case_types, dead_code, clippy::all)]
pub mod Foundation {
    ::windows_core::imp::com_interface!(IStringable, IStringable_Vtbl, 0);
    ::windows_core::imp::interface_hierarchy!(IStringable, ::windows_core::IUnknown, ::windows_core::IInspectable);
    impl IStringable {
        pub fn ToString(&self) -> ::windows_core::Result<::windows_core::HSTRING> {
            let this = self;
            unsafe {
                let mut result__ = ::std::mem::zeroed();
                (::windows_core::Interface::vtable(this).ToString)(::windows_core::Interface::as_raw(this), &mut result__).from_abi(result__)
            }
        }
    }
    impl ::windows_core::RuntimeType for IStringable {
        const SIGNATURE: ::windows_core::imp::ConstBuffer = ::windows_core::imp::ConstBuffer::for_interface::<Self>();
    }
    #[repr(C)]
    #[doc(hidden)]
    pub struct IStringable_Vtbl {
        pub base__: ::windows_core::IInspectable_Vtbl,
        pub ToString: unsafe extern "system" fn(*mut ::core::ffi::c_void, *mut ::std::mem::MaybeUninit<::windows_core::HSTRING>) -> ::windows_core::HRESULT,
    }
    impl ::core::convert::From<::core::time::Duration> for TimeSpan {
        fn from(value: ::core::time::Duration) -> Self {
            Self { Duration: (value.as_nanos() / 100) as i64 }
        }
    }
    impl ::core::convert::From<TimeSpan> for ::core::time::Duration {
        fn from(value: TimeSpan) -> Self {
            ::core::time::Duration::from_nanos((value.Duration * 100) as u64)
        }
    }
}
