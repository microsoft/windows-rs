name: Test

on:
  pull_request:
  push:
    branches:
      - master
env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: windows-latest
          rust: stable
          other: x86_64-pc-windows-msvc
          platform: x64
        - os: windows-latest
          rust: nightly
          other: i686-pc-windows-msvc
          platform: x86
        - os: windows-latest
          rust: nightly
          other: x86_64-pc-windows-gnu
          platform: x64
        - os: windows-latest
          rust: stable
          other: i686-pc-windows-gnu
          platform: x86
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Update toolchain
      run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}

    - name: Add toolchain target
      run: rustup target add ${{ matrix.other }}

    - name: Configure Cargo for GNU toolchain
      shell: pwsh
      run: |
        Add-Content $env:USERPROFILE\.cargo\config @"
          [target.x86_64-pc-windows-gnu]
          linker = `"C:\\msys64\\mingw64\\bin\\x86_64-w64-mingw32-gcc.exe`"
          ar = `"C:\\msys64\\mingw64\\bin\\ar.exe`"
          [target.i686-pc-windows-gnu]
          linker = `"C:\\msys64\\mingw32\\bin\\i686-w64-mingw32-gcc.exe`"
          ar = `"C:\\msys64\\mingw32\\bin\\ar.exe`"
        "@
      if: contains(matrix.other, 'windows-gnu')

    - name: Configure environment for GNU toolchain
      shell: pwsh
      run: |
        if("${{ matrix.other }}" -eq "i686-pc-windows-gnu") {
          $MingwPath = "C:\msys64\mingw32\bin"
        } else {
          $MingwPath = "C:\msys64\mingw64\bin"
        }
        $MingwPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      if: contains(matrix.other, 'windows-gnu')

    - name: Test stable (${{ matrix.os }})
      run: |
        cargo test --target ${{ matrix.other }} -p test_agile
        cargo test --target ${{ matrix.other }} -p test_alternate_success_code
        cargo test --target ${{ matrix.other }} -p test_arch
        cargo test --target ${{ matrix.other }} -p test_arch_feature
        cargo test --target ${{ matrix.other }} -p test_bstr
        cargo test --target ${{ matrix.other }} -p test_core
        cargo test --target ${{ matrix.other }} -p test_debug
        cargo test --target ${{ matrix.other }} -p test_deprecated
        cargo test --target ${{ matrix.other }} -p test_enums
        cargo test --target ${{ matrix.other }} -p test_handles
        cargo test --target ${{ matrix.other }} -p test_helpers
        cargo test --target ${{ matrix.other }} -p test_implement
        cargo test --target ${{ matrix.other }} -p test_interop
        cargo test --target ${{ matrix.other }} -p test_lib
        cargo test --target ${{ matrix.other }} -p test_matrix3x2
        cargo test --target ${{ matrix.other }} -p test_mshtml
        cargo test --target ${{ matrix.other }} -p test_ntstatus
        cargo test --target ${{ matrix.other }} -p test_pwstr
        cargo test --target ${{ matrix.other }} -p test_return_struct
        cargo test --target ${{ matrix.other }} -p test_structs
        cargo test --target ${{ matrix.other }} -p test_sys
        cargo test --target ${{ matrix.other }} -p test_unions
        cargo test --target ${{ matrix.other }} -p test_weak
        cargo test --target ${{ matrix.other }} -p test_win32
        cargo test --target ${{ matrix.other }} -p test_win32_arrays
      if: contains(matrix.rust, 'stable')

    - name: Test nightly (${{ matrix.os }})
      run: |
        cargo test --target ${{ matrix.other }} -p test_implement_class_factory
        cargo test --target ${{ matrix.other }} -p test_implement_data_object
        cargo test --target ${{ matrix.other }} -p test_implement_identity
        cargo test --target ${{ matrix.other }} -p test_implement_map
        cargo test --target ${{ matrix.other }} -p test_implement_no_use
        cargo test --target ${{ matrix.other }} -p test_implement_null_result
        cargo test --target ${{ matrix.other }} -p test_implement_winrt
        cargo test --target ${{ matrix.other }} -p com_uri
        cargo test --target ${{ matrix.other }} -p core_app
        cargo test --target ${{ matrix.other }} -p create_window
        cargo test --target ${{ matrix.other }} -p create_window_sys
        cargo test --target ${{ matrix.other }} -p direct2d
        cargo test --target ${{ matrix.other }} -p direct3d12
        cargo test --target ${{ matrix.other }} -p enum_windows
        cargo test --target ${{ matrix.other }} -p enum_windows_sys
        cargo test --target ${{ matrix.other }} -p kernel_event
        cargo test --target ${{ matrix.other }} -p memory_buffer
        cargo test --target ${{ matrix.other }} -p message_box
        cargo test --target ${{ matrix.other }} -p ocr
        cargo test --target ${{ matrix.other }} -p overlapped
        cargo test --target ${{ matrix.other }} -p rss
        cargo test --target ${{ matrix.other }} -p simple
        cargo test --target ${{ matrix.other }} -p spellchecker
        cargo test --target ${{ matrix.other }} -p uiautomation
        cargo test --target ${{ matrix.other }} -p xaml_app
        cargo test --target ${{ matrix.other }} -p xml
      if: contains(matrix.rust, 'nightly')
