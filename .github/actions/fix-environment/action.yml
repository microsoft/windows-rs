name: Fix environment
description: GitHub VMs aren't configured correctly
runs:
  using: "composite"
  steps:
    - name: Configure Cargo for GNU
      shell: pwsh
      run: |
        Add-Content $env:USERPROFILE\.cargo\config @"
            [target.x86_64-pc-windows-gnu]
            linker = `"C:\\msys64\\mingw64\\bin\\x86_64-w64-mingw32-gcc.exe`"
            ar = `"C:\\msys64\\mingw64\\bin\\ar.exe`"
            [target.i686-pc-windows-gnu]
            linker = `"C:\\msys64\\mingw32\\bin\\i686-w64-mingw32-gcc.exe`"
            ar = `"C:\\msys64\\mingw32\\bin\\ar.exe`"
        "@
      if: contains(matrix.target, 'windows-gnu')
    - name: Configure environment
      shell: pwsh
      run: |
        switch -Wildcard ("${{ matrix.target }}")
        {
          "*-pc-windows-gnu"
          {
            "C:\msys64\mingw64\bin;C:\msys64\mingw32\bin" >> $env:GITHUB_PATH
          }
          "i686*"
          {
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x86" >> $env:GITHUB_PATH
            ((Resolve-Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\*\bin\Hostx86\x86")
              | Sort-Object -Descending | Select -First 1).ToString() >> $env:GITHUB_PATH
          }
          "x86_64*"
          {
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x64" >> $env:GITHUB_PATH
            ((Resolve-Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\*\bin\Hostx64\x64")
              | Sort-Object -Descending | Select -First 1).ToString() >> $env:GITHUB_PATH
          }
          "aarch64*"
          {
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x64" >> $env:GITHUB_PATH
            ((Resolve-Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\*\bin\Hostx64\x64")
              | Sort-Object -Descending | Select -First 1).ToString() >> $env:GITHUB_PATH
          }
          "*"
          {
            (Join-Path $env:GITHUB_WORKSPACE "target\debug\deps").ToString() >> $env:GITHUB_PATH
            (Join-Path $env:GITHUB_WORKSPACE "target\test\debug\deps").ToString() >> $env:GITHUB_PATH
            "INCLUDE=C:\Program Files (x86)\Windows Kits\10\include\10.0.22000.0\winrt;C:\Program Files (x86)\Windows Kits\10\include\10.0.22000.0\cppwinrt" `
              >> $env:GITHUB_ENV
          }
        }
    # Workaround to address two issues with windows-2022 runners:
    # 1. Old mingw-w64-* binutils that prevent deterministic builds.
    # 2. Missing llvm-dlltool in the native Windows LLVM package.
    - name: Update packages
      shell: pwsh
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-binutils
        pacman -S --noconfirm mingw-w64-x86_64-llvm
